2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* intltool-merge.in: Updated to 0.31.2.
	* intltool-update.in: Updated to 0.31.2.
	* intltool-extract.in: Updated to 0.31.2.
	
2004-11-09 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/skk-dic.c (numeric_kanji_with_position_conv) : Fix behavior
	  in case of getting 1000000.
	
2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Removed definition of LOCALEDIR.
	
	* uim/Makefile.am: Added definition of LOCALEDIR.
	* gtk/Makefile.am: Added definition of LOCALEDIR.
	* helper/Makefile.am: Added definition of LOCALEDIR, GNOMELOCALEDIR.
	
2004-11-09 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximic.cpp (XimIC::get_ic_atr) : Send
	  KeyPressMask|KeyReleaseMask again for ICA_FilterEvents on
	  on-demand-synchronous method.  On full-synchronous method, send
	  KeyPressMask only since sending KeyReleaseMask causes problem in
	  rare cases for some reason.
	
2004-11-09 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/skk-dic.c (numeric_kanji_with_position_conv) : Fix behavior
	  in case of zero.
	
2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: It's no longer 0.4.5-beta1. Replaced with the word 
	  "trunk". This will close Bug 1790.
	
2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/japanese-azik.scm: Used new input-rule style like
	   ((("x" "x"). ())(("y" "y" "y") ("z" "z" "z"))).
	   This will fix the Bug 566.
	
2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/japanese.scm: Used new input-rule style like
	   ((("x" "x"). ())(("y" "y" "y") ("z" "z" "z"))).
	   This will fix the Bug 566.
	
2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/anthy.scm:
	 -(anthy-proc-input-state-with-preedit): Corresponsed to new input-rule
	   style like  ((("x" "x"). ())(("y" "y" "y") ("z" "z" "z")))
	
2004-11-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds dynamic configuration update of live uim client
	  processes feature to Sumika using the helper protocol message
	  'prop_custom_update'. To test this feature, uncomment (require
	  "custom.scm") in the loader.scm.
	
	* sumika/common/uimconfig.c
	  - Add #include "uim/uim-helper.h"
	  - (siod_output): Mark as static
	  - (custom_msg_tmpl, helper_fd): New static variable
	  - (helper_disconnect_cb): New static function
	  - (write_uim_config):
	    * Add the dynamic configuration update of live uim client
	      processes feature
	    * Add anthy-show-segment-separator? modification for testing
	      purpose. This code fragment only exists for testing purpose. It
	      must be removed in future
	* scm/loader.scm
	  - Move the location of (require "custom.scm")
	* scm/custom.scm
	  - (custom-prop-update-custom-handler): Change first argument name
	    'id' to 'context' in accordance with recent specification change
	    in im.scm
	
2004-11-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* sumika/gtk2/uimcontainer.c
	  - (uim_config_container_new): Uncomment g_signal_connect for
	    cb_uim_config_pane_save_button_clicked. This makes custom values
	    saving as ~/.uim working. But custom value update (uim_custom_set)
	    on user operations on the custom widgets are still lacking, so
	    saved ~/.uim does not reflect user modification
	  - (cb_uim_config_pane_save_button_clicked): New static function
	  - (uimconfig_create_custom_filechooser_widget): Fix
	    uim_custom_value_as_str() with uim_custom_value_as_path() This
	    fixes default value initialization of the widgets for pathname
	    custom variables such as skk-dic-file-name
	  - Fix a typo in a comment
	
	* scm/custom.scm
	  - (custom switch-im-key?): Comment out because the custom type 'key'
	    is not yet completed. This change has resolved the error on saving
	
2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/japanese.scm: Fixed some wrong rules. whu, tha, qya, qyi, qyu,
	   qye, qyo. Thanks to OHASHI Hideya.
	
2004-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/japanese.scm: Removed unused rules, "s" "s" and "n" "".
	
	* scm/japanese-azik.scm: Removed unused rule, "n" "x" "2" "7".
	
2004-11-08 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm : Add skk-use-numeric-conversion? definition.
	(skk-get-nth-candidate) : Check skk-use-numeric-conversion?
	(skk-prepare-commit-string) : Ditto.
	(skk-begin-conversion) : Ditto.
	(skk-do-update-preedit) : Ditto.  In numeric-conversion mode, show
	  preedit whose numerical strings are replaced with # if there is
	  skk-context-child-context.
	(skk-check-candidate-window-begin) : Check
	  skk-use-numeric-conversion?
	(skk-change-candidate-index) : Ditto.
	
	* scm/skk-editor.scm (skk-editor-commit-raw) : Ditto.  If
	  inputting string-length of str is 0, go back to parent context
	  according to ddskk's behavior.
	
	* uim/skk-dic.c : Add skk-lib-store-replaced-numstr,
	  skk-lib-merge-replaced-numstr, skk-lib-merge-replaced-numstr,
	  skk-lib-replace-numeric for scheme interface.  Change number of
	  accepting arguments of skk-lib-get-nth-candidate,
	  skk-lib-get-nr-candidates, skk-lib-commit-candidate in order to
	  enable numeric conversion.
	(skk_store_replaced_numeric_str) : New function.
	  Returns list of numeric strings by parsing string of
	  skk-context-head.
	(wide_num_list) : New.  List of full width numbers.
	(kanji_num_list) : New.  List of kanji numbers.
	(kanji_num_position_list) : New.  List of kanji position
	  characters.
	(numeric_wide_or_kanji_conv) : New function.  Returns full width
	  numeric string or kanji numeric string.
	(numeric_kanji_width_position_conv) : New function.  Returns kanji
	  numeric string with position characters.
	(numeric_shogi_conv) : New function.  Returns numeric string for
	  shogi.
	(numeric_convert) : New function.  Return numerically converted
	  strings corresponding to each numeric conversion methods of
	  skk.  Method #5 is not implemented yet.
	(skk_merge_replaced_numeric_str) : New function.  Return merged
	  string of the candidate and corresponding converted numeric
	  string.
	(skk_replace_numeric) : New function.  Replace numerical string of
	  the original string with #, and return its replaced string.
	(get_nth) : New function.  Returns nth content of the LISP list.
	(skk_get_nth_candidate) : Process #4 method of skk's numerical
	  conversion.
	(skk_get_nr_candidate) : Ditto.
	(skk_commit_candidate) : Ditto.
	
2004-11-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* I had mistakes in the commit log for r1604. Following is the correct
	  version.
	
	* sumika/gtk2/uimcontainer.c
	  - (uim_config_container_new):
	    * Comment out uim_lisp local variables and replace with the global
	      variables
	    * Add uimapi_gc_protect() for the global variables
	  - (uimconfig_create_custom_combobox_widget,
	    uimconfig_create_custom_checkbutton_widget,
	    uimconfig_create_custom_textbox_widget,
	    uimconfig_create_custom_spinbutton_widget,
	    uimconfig_create_custom_filechooser_widget,
	    uimconfig_uim_custom_widget_new,
	    uimconfig_uim_custom_widget_new_by_sym): Comment out uim_lisp
	    local variables and replace with the global variables
	
2004-11-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit has temporarily and partially resolved the uim-scm API
	  problem about memory corruption on GC (see Comment #4 of bug #481
	  and [Anthy-dev 1113]). The changes make Sumika partially
	  working. Before this fix Sumika often causes SEGV on GC.  But now
	  uim configuration GUI of Sumika works with following command.
	
	  $ GTK_IM_MODULE=xim LIBUIM_VERBOSE=5 sumika
	
	  GTK_IM_MODULE=<any IM of uim> still causes SEGV. I'll investigate it
	  later. Configuration loading/saving are not yet touched.
	
	* uim/siod.h
	  - (gc_protect): New API. Export as temporary solution for custom API
	* uim/slib.c
	  - (gc_protect): Unmark static
	* uim/uim-scm.h
	  - (uim_scm_gc_protect): New API. uim_scm API wrapper for gc_protect
	  - (struct uim_api_tbl): Add uim_scm_gc_protect
	* uim/uim-util.c
	  - (uim_scm_gc_protect): New API function
	  - (uim_scm_intern_c_str, uim_scm_qintern_c_str): Cosmetic change
	* sumika/common/uimconfig.c
	  - (uimapi_gc_protect): New function
	  - (uimapi_init): Add initialization of uim_scm_gc_protect
	* sumika/gtk2/uimcontainer.c
	  - (uimapi_gc_protect): Declare as extern function
	  - (groups, group_sym, cur, item, label, default_val, desc, range,
	     group, customs, custom_sym, rcustoms):
	     * New global variable
	     * These gc_protect'ed variables are moved from local variables to
	       avoid corruption on GC
	  - (uim_config_container_new):
	    * Comment out uim_lisp local variables and replace with the local
	      variables
	    * Add uimapi_gc_protect() for the global variables
	  - (uimconfig_create_custom_combobox_widget,
	    uimconfig_create_custom_checkbutton_widget,
	    uimconfig_create_custom_textbox_widget,
	    uimconfig_create_custom_spinbutton_widget,
	    uimconfig_create_custom_filechooser_widget,
	    uimconfig_uim_custom_widget_new,
	    uimconfig_uim_custom_widget_new_by_sym): Comment out uim_lisp
	    local variables and replace with the local variables
	
	* scm/custom.scm
	  - Remove invalid (require "im.scm")
	  - (custom custom-preserved-default-im-name):
	    * Follow recent im.scm specification change about im-list
	    * Add fallback labels for each IM
	  - (custom-hook-get-default-im-name): Follow recent im.scm
	    specification change about im-list
	
2004-11-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/generic-key.scm:
	 -(generic-next-page-key?): Took off "right" from key binding.
	 -(generic-prev-page-key?): Took off "left" from key binding.
	 In anthy.scm, there is no way to close candidate window. If right and
	 left keys are used to prev/next page, we cannot change current selected
	 segment.
	 
	
2004-11-08 kzk <mover@hct.zaq.ne.jp>
	
	* Enable selecting Candidate from hitting number key
	
	* qt/quiminputcontextplugin/src/quiminputcontext.cpp
	  - (filterEvent): handle number key specially for candidate window
	* qt/quiminputcontextplugin/src/candidatewindow.cpp
	  - (setIndexInPage): new function
	  - (shiftPage): handle candidateIndex correctly
	* qt/quiminputcontextplugin/src/candidatewindow.h
	  - (setIndexInPage): new function
	
	* qt/quiminputcontextplugin-qt4/quiminputcontext.h
	  - #include <uim/uim-util.h>
	* qt/quiminputcontextplugin-qt4/quiminputcontext.cpp
	  - (filterEvent): handle number key specially for candidate window
	* qt/quiminputcontextplugin-qt4/candidatewindow.cpp
	  - (setIndexInPage): new function
	  - (shiftPage): handle candidateIndex correctly
	* qt/quiminputcontextplugin-qt4/candidatewindow.h
	  - (setIndexInPage): new function
	
2004-11-08 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (InputContext::candidate_activate) : Use
	  correct accel_enumeration_hint argument for uim_get_candidate().
	  Add sanity check.
	
2004-11-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit fixes invalid input mode management in anthy.scm and
	  canna.scm that prevents setting default input mode as 'direct' or
	  'zenkaku' via action.scm. This change has resolved remaining bug
	  #1791 on anthy and canna. Thanks to UTUMI Hirosi for reporting.
	
	* scm/anthy.scm
	  - (anthy-context-new): Remove unnecessary anthy-flush invocatoin
	  - (anthy-flush): Remove inappropriate anthy-context-set-on!
	    invocation
	  - (anthy-proc-wide-latin): Add anthy-context-set-on!
	
	* scm/canna.scm
	  - (canna-context-new): Remove unnecessary canna-flush invocatoin
	  - (canna-flush): Remove inappropriate canna-context-set-on!
	    invocation
	  - (canna-proc-wide-latin): Add canna-context-set-on!
	
2004-11-08 kzk <mover@hct.zaq.ne.jp>
	
	* scm/anthy.scm
	  - (anthy-proc-converting-state): handle "anthy-prev-page-key?"
	    and "anthy-next-page-key?" before handling "anthy-next-segment-key?"
	    and "anthy-prev-segment-key?". These are apt to have same key.
	    So, we should handle "anthy-*-page-key?" which has the ristriction
	    that this key is handled when candidate-window is active;
	
	* scm/generic-key.scm
	  - add "left" key to generic-prev-page-key?
	  - add "right" key to  generic-next-page-key?
	
2004-11-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Add a new entry 'New action handling framework'
	* scm/action.scm
	  - Modify the header comment
	
2004-11-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/action.scm
	  - (activity-indicator-new): Fix broken handling when no activity
	    exist. Returns fallback-indication when such case. The behavior is
	    validated by test-action.scm.
	* test/test-action.scm
	  - (test activity-indicator-new): Add no activity case
	
2004-11-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit changes default activity of input mode widget of each
	  IMs to 'direct' mode. This change has resolved bug #1791. In
	  addition, setting these variables non-direct mode is not useful on
	  gtk-immodule until bug #1632 has been resolved because non-text
	  widgets such as menus are created with non-direct mode, so shortcut
	  operations by alphabet character does not work until the mode have
	  been changed to direct mode.
	
	* scm/anthy.scm
	  - (default-widget_anthy_input_mode): Change the value to action_anthy_direct
	
	* scm/canna.scm
	  - (default-widget_canna_input_mode): Change the value to
	    action_canna_direct
	
	* scm/skk.scm
	  - (default-widget_skk_input_mode): Change the value to action_skk_latin
	
	* scm/tutcode.scm
	  - (default-widget_tutcode_input_mode): Change the value to
	    action_tutcode_direct
	
	* scm/util.scm
	  - (any, every): Cosmetic change
	
2004-11-07 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximtrans.cpp (Connection::xim_open) : Check whether XIM is
	  working with full-synchronous method or on-demand-synchronous
	  method.
	* xim/ximic.cpp (XimIC::get_ic_atr) : Only send KeyPressMask.
	* xim/ximim.cpp (XimIM_impl::forward_event) : Send XIM_SYNC_REPLY
	  if xim if working with full-synchronous method.
	* xim/main.cpp : Add --fullsync command line option.
	* xim/ximserver.h : Define OPT_FULL_SYNC.
	
2004-11-05 kzk <mover@hct.zaq.ne.jp>
	
	* Enable kasumi button (configure option)
	* uim-kdehelper/configure.in.in
	  - add "--enable-kasumi" option
	* uim-kdehelper/src/common/Makefile.am
	  - handle kasumi-enabled case
	* uim-kdehelper/src/common/quimhelpertoolbar.cpp
	* uim-kdehelper/src/common/quimhelpertoolbar.h
	  - (addExecKasumiButton, slotExecKasumi): new function
	
	* use KUniqueApplication class for future uim-pref-qt
	* uim-kdehelper/src/pref/uim-pref-qt.cpp
	* uim-kdehelper/src/pref/uim-pref-qt.h
	  - (slotOk, slotApply): new function
	
	* add "const" qualifier for optimization
	* uim-kdehelper/src/toolbar/draghandler.cpp
	* uim-kdehelper/src/candwin/uim-candwin-qt.cpp
	* uim-kdehelper/src/switcher/im-switcher-qt.h
	* uim-kdehelper/src/switcher/im-switcher-qt.cpp
	* uim-kdehelper/src/common/uimstateindicator.cpp
	
	* Pot filename update
	* uim-kdehelper/po/uim-qtkde-helper.pot
	  - deleted
	* uim-kdehelper/po/uim-kdehelper.pot
	  - added
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit replaces property and mode handlings in skk.scm with
	  the new action handling framework implemented in action.scm. Users
	  can configure widgets and actions as their preferable forms.
	
	* scm/skk.scm
	  - Replace skk-mode-handler and skk-prop-handler in register-im
	    with context-mode-handler and context-prop-activate-handler
	  - Invoke skk-configure-widgets to register widgets
	  - (skk-widgets, default-widget_skk_input_mode,
	    skk-input-mode-actions): New configuration variable
	  - (skk-mode-latin, skk-mode-hiragana, skk-mode-katakana,
	    skk-mode-wide-latin, skk-mode-hankana): Remove
	  - (skk-prepare-activation, skk-configure-widgets, skk-latin-state?):
	    New procedure
	  - (action action_skk_hiragana, action action_skk_katakana, action
	    action_skk_hankana, action action_skk_latin, action
	    action_skk_wide_latin): New action
	  - (skk-context-new): Add initialization of widgets
	  - (skk-update-mode, skk-mode-handler, skk-prop-handler,
	    skk-update-prop-label, skk-update-prop-list): Remove to replace
	    with action.scm
	  - (skk-proc-state-direct-no-preedit, skk-proc-state-direct,
	    skk-proc-state-latin, skk-proc-state-wide-latin,
	    skk-init-handler): Remove property and mode handlings to replace
	    with action.scm
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit replaces property and mode handlings in prime.scm with
	  the new action handling framework implemented in action.scm. Users
	  can configure widgets and actions as their preferable forms.
	
	* scm/prime.scm
	  - Replace prime-mode-handler and prime-prop-handler in register-im
	    with context-mode-handler and context-prop-activate-handler
	  - Invoke prime-configure-widgets to register widgets
	  - (prime-widgets, default-widget_prime_input_mode,
	    prime-input-mode-actions): New configuration variable
	  - (action action_prime_mode_latin, action
	    action_prime_mode_hiragana, action action_prime_mode_wide_latin):
	    New action
	  - (prime-configure-widgets): New procedure
	  - (prime-context-new): Add initialization of widgets
	  - (prime-init-handler, prime-mode-set): Remove property and mode
	    handlings to replace with action.scm
	  - (prime-mode-handler, prime-prop-handler, prime-update-prop-label,
	    prime-update-prop-list, prime-mode-get-label,
	    prime-mode-get-list): Remove to replace with action.scm
	  - (prime-mode): Mark as unused
	
2004-11-05 kzk <mover@hct.zaq.ne.jp>
	
	* qt/uim-kdehelper/candwin/uim-candwin-qt.cpp
	  - (slotCandidateSelected): enable mouse clicking.
	    thanks Etsusi Kato-san!
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit replaces property and mode handlings in canna.scm with
	  the new action handling framework implemented in action.scm. Users
	  can configure widgets and actions as their preferable forms.
	
	* scm/canna.scm
	  - Replace canna-mode-handler and canna-prop-handler in register-im
	    with context-mode-handler and context-prop-activate-handler
	  - Invoke canna-configure-widgets to register widgets
	  - Add preliminary AZIK input support
	  - (canna-widgets, default-widget_canna_input_mode,
	    default-widget_canna_kana_input_method, canna-input-mode-actions,
	    canna-kana-input-method-actions): New configuration variable
	  - (action action_canna_hiragana, action action_canna_katakana,
	    action action_canna_hankana, action action_canna_direct, action
	    action_canna_zenkaku, action action_canna_roma, action
	    action_canna_kana, action_canna_azik): New action
	  - (canna-prepare-activation, canna-configure-widgets): New procedure
	  - (canna-context-rec-spec): Fix invalid default value
	  - (canna-context-new): Add initialization of widgets
	  - (canna-mode-handler, canna-prop-handler, canna-update-prop-label,
	    canna-update-mode, canna-update-prop-list): Remove to replace with
	    action.scm
	  - (canna-proc-input-state-no-preedit, canna-init-handler,
	    canna-proc-wide-latin): Remove property and mode handlings to
	    replace with action.scm
	  - (canna-proc-input-state-with-preedit):
	    * Remove property and mode handlings to replace with action.scm
	    * Fix a typo over a procedure invocation
	  - (canna-proc-raw-state):
	    * Remove property and mode handlings to replace with action.scm
	    * Remove an unused invalid canna-update-preedit
	  - (canna-prop-list): Remove the unused procedure
	* scm/util.scm
	  - (multi-segment-mode-direct, multi-segment-mode-hiragana,
	    multi-segment-mode-katakana, multi-segment-mode-wide-latin,
	    multi-segment-mode-hankana): Remove
	
	* scm/anthy.scm
	  - A trivial cosmetic change
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit replaces property and mode handlings in tutcode.scm with
	  the new action handling framework implemented in action.scm.
	
	* scm/tutcode.scm
	  - Invoke tutcode-configure-widgets to register widgets
	  - (tutcode-register-im): Replace tutcode-mode-handler and
	    tutcode-prop-handler in register-im with context-mode-handler and
	    context-prop-activate-handler
	  - (tutcode-widgets, default-widget_tutcode_input_mode,
	    tutcode-input-mode-actions): New configuration variable
	  - (action action_tutcode_direct, action action_tutcode_hiragana,
	    action action_tutcode_katakana): New action
	  - (tutcode-prepare-activation, tutcode-configure-widgets): New
	    procedure
	  - (tutcode-context-new): Add initialization of context-widgets
	  - (tutcode-proc-on-mode, tutcode-proc-off-mode,
	    tutcode-init-handler): Remove property and mode handlings to
	    replace with action.scm
	  - (tutcode-update-mode, tutcode-mode-handler, tutcode-prop-handler,
	    tutcode-update-prop-label, tutcode-update-prop-list): Remove to
	    replace with action.scm
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds property and mode handlings in direct.scm by new
	  action handling framework implemented in action.scm.
	
	* scm/direct.scm
	  - Invoke direct-configure-widgets to register widgets
	  - Replace direct-mode-handler and direct-prop-handler in register-im
	    with context-mode-handler and context-prop-activate-handler
	  - (direct-widgets, default-widget_direct_input_mode,
	    direct-input-mode-actions): New configuration variable
	  - (action action_direct_direct): New action
	  - (direct-configure-widgets): New procedure
	  - (direct-context-new-internal): New alias of define-record'ed
	    direct-context-new
	  - (direct-context-new):
	    * New procedure
	    * Add initialization of context-widgets to default procedure
	  - (direct-mode-handler): Comment out old implementation which
	    performs im-switching by mode facility
	  - (direct-prop-handler): Remove these placeholder to replace with
	    action.scm
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds property and mode handlings in m17nlib.scm by new
	  action handling framework implemented in action.scm.
	
	* scm/m17nlib.scm
	  - Invoke m17nlib-configure-widgets to register widgets
	  - (m17nlib-register): Replace m17nlib-mode-handler and
	    m17nlib-prop-handler in register-im with context-mode-handler and
	    context-prop-activate-handler
	  - (m17nlib-widgets, default-widget_m17nlib_input_mode,
	    m17nlib-input-mode-actions): New configuration variable
	  - (action action_m17nlib_off, action action_m17nlib_on): New action
	  - (m17nlib-configure-widgets): New procedure
	  - (m17nlib-mode-handler, m17nlib-prop-handler): Remove these
	    placeholders to replace with action.scm
	  - (m17nlib-context-new): Add initialization of context-widgets
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit replaces property and mode handlings in generic.scm with
	  the new action handling framework implemented in action.scm.
	
	* scm/generic.scm
	  - Invoke generic-configure-widgets to register widgets
	  - (generic-register-im): Replace generic-mode-handler and
	    generic-prop-handler in register-im with context-mode-handler and
	    context-prop-activate-handler
	  - (generic-widgets, default-widget_generic_input_mode,
	    generic-input-mode-actions): New configuration variable
	  - (action action_generic_off, action action_generic_on): New action
	  - (generic-prepare-activation, generic-configure-widgets): New
	    procedure
	  - (generic-context-rec-spec): Fix invalid default value
	  - (generic-context-new): Add initialization of context-widgets
	  - (generic-proc-input-state, generic-proc-off-mode,
	    generic-init-handler): Remove property and mode handlings to
	    replace with action.scm
	  - (generic-mode-handler, generic-prop-handler,
	    generic-update-prop-label, generic-update-prop-list): Remove to
	    replace with action.scm
	* scm/hangul.scm
	  - (hangul-register-im): Replace generic-mode-handler and
	    generic-prop-handler in register-im with context-mode-handler and
	    context-prop-activate-handler
	
2004-11-05 kzk <mover@hct.zaq.ne.jp>
	
	* qt/uim-kdehelper/switcher/im-switcher-qt.cpp
	  - (createGUI): layout and resize mode enhancement
	  - (parseHelperStrImList): remove unnecessary code
	    for adjusting listview size
	
	* qt/uim-kdehelper/switcher/im-switcher-qt.h
	  - now class UimImSwitcher extends QDialog
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit replaces property and mode handlings in anthy.scm with
	  the new action handling framework implemented in action.scm. Users
	  can configure widgets and actions as their preferable forms.
	
	* scm/anthy.scm
	  - Replace anthy-mode-handler and anthy-prop-handler in register-im
	    with context-mode-handler and context-prop-activate-handler
	  - Invoke anthy-configure-widgets to register widgets
	  - Add preliminary AZIK input support
	  - (anthy-widgets, default-widget_anthy_input_mode,
	    default-widget_anthy_kana_input_method, anthy-input-mode-actions,
	    anthy-kana-input-method-actions): New configuration variable moved
	    from action.scm
	  - (action action_anthy_hiragana, action action_anthy_katakana,
	    action action_anthy_hankana, action action_anthy_direct, action
	    action_anthy_zenkaku, action action_anthy_roma, action
	    action_anthy_kana): New action moved from action.scm
	  - (action action_anthy_azik): New action
	  - (anthy-prepare-activation, anthy-configure-widgets): New procedure
	    moved from action.scm
	  - (anthy-mode-direct, anthy-mode-hiragana, anthy-mode-katakana,
	    anthy-mode-wide-latin, anthy-mode-hankana): Remove
	  - (anthy-context-new): Add initialization of widgets
	  - (anthy-init-handler, anthy-proc-raw-state,
	    anthy-proc-input-state-no-preedit,
	    anthy-proc-input-state-with-preedit, anthy-proc-wide-latin, ):
	    Remove property and mode handlings to replace with action.scm
	  - (anthy-mode-handler, anthy-prop-handler, anthy-update-prop-label,
	    anthy-update-mode, anthy-update-prop-list, ): Remove to replace
	    with action.scm
	* scm/action.scm
	  - Remove invocation of anthy-configure-widgets
	  - (anthy-widgets, default-widget_anthy_input_mode,
	    default-widget_anthy_kana_input_method, anthy-input-mode-actions,
	    anthy-kana-input-method-actions, anthy-prepare-activation, action
	    action_anthy_hiragana, action action_anthy_katakana, action
	    action_anthy_hankana, action action_anthy_direct, action
	    action_anthy_zenkaku, action action_anthy_roma, action
	    action_anthy_kana, anthy-configure-widgets, anthy-context-new):
	    Move into anthy.scm
	  - (test-widgets): New variable
	  - (example-configure-widgets): New procedure
	  - (anthy-im-name-indication): Rename to example-im-name-indication
	  - (example-im-name-indication): Renamed from
	    anthy-im-name-indication
	  - (anthy-exec-im-switcher-indication): Rename to
	    example-exec-im-switcher-indication
	  - (example-exec-im-switcher-indication): Renamed from
	    anthy-exec-im-switcher-indication
	  - (action action_exec_im_switcher): Follow the renaming of
	    anthy-exec-im-switcher-indication
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit fixes 2 problems related to action.scm. The working
	  anthy.scm using action.scm will follow soon.
	
	  I had said that "No code modification is required for each IMs at
	  now. Each IMs can switch to the action.scm in arbitrary time" in the
	  commit log of r1580, but an indication problem on uim-toolbar will
	  occur with old code. So I'm going to replace all IMs with
	  action.scm. Sorry for misleading.
	
	* uim/uim.c
	  - (uim_prop_activate): Replace prop-handler with
	    prop-activate-handler
	  - (uim_prop_update_custom): Replace prop-handler with
	    custom-set-handler
	* scm/im.scm
	  - (record im): Rename a member prop-handler with
	    prop-activate-handler
	  - (im-custom-set-handler, custom-set-handler): New procedures to
	    simplify the handler invocation
	  - (prop-activate-handler):
	    * New procedure to simplify the handler invocation
	    * Intentionally adds context-update-widgets as side effect
	  - (im-prop-handler-alist, prop-handler): Remove
	
	* scm/action.scm
	  - All changes are validated by test-action.scm
	  - (indication-compose-leaf):
	    * Fix a design bug that causes prop-activate malfunction
	    * Add an argument act-id to fix the design bug
	    * compose act-id instead of indication-id into the message
	  - (widget-compose-live-branch): Follow the specifiation change of
	    indication-compose-leaf
	  - (context-prop-activate-handler, context-mode-handler): Rename a
	    local variable that masks global one (not a bug)
	  - (widget-action-id->mode-value, widget-mode-value->action-id):
	    Cosmetic change
	* test/test-action.scm
	  - (test indication-compose-leaf, test widget-compose-live-branch,
	    test context-propagate-prop-list-update, test
	    context-propagate-widget-states, test
	    context-propagate-widget-configuration): Follow the specification
	    change of indication-compose-leaf
	
2004-11-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/generic.scm:
	 -(generic-proc-input-state): Ignore symbol key events such as left arrow 
	  and right arrow if candidate window is opened.
	
2004-11-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk/Makefile.am: Added @GTK2_LIBS@ to im_uim_la_LDFLAGS.
	   This will fix the problem that uim's immodule doesn't work
	   with pygtk programs like quodlibet. Thanks to Matthew Reppert.
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit prepares the replacing property handling codes with
	  action.scm in each IMs. But no code modification is required for
	  each IMs at now. Each IMs can switch to the action.scm in arbitrary
	  time.
	
	* scm/im.scm
	  - Add (require "load-action.scm")
	  - (context-rec-spec): Add new member 'widgets'. The name may be
	    renamed in accordance with discussion about action.scm
	  - (invoke-handler): Add update of widgets
	  - (create-context): Add initialization of widgets
	* scm/action.scm
	  - (context-rec-spec, record context, invoke-handler,
	    create-context): Remove to merge into im.scm
	  - Comment out (require "anthy.scm")
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-im.scm
	  - (testcase im im-management, test retrieve-im, test
	    find-im-for-locale, test find-default-im, test find-im, testcase
	    im context management, test context-im, test find-context, test
	    remove-context): Follow the renaming of 'default IM' (had been
	    renamed to 'direct' to avoid confusions) changed in r1567, r1568
	  - (testcase im default im): Remove placeholder
	
2004-11-05 Takuro Ashie <ashie@homa.ne.jp>
	
	* uim-cand-win-gtk.[ch]: Enabled to shrink the candidate window.
	
2004-11-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit makes action.scm ready to use. All procedures are
	  validated by test-action.scm.
	  
	  The term 'widget' used in this framework is still under
	  discussion. It may be renamed in accordance with result of the
	  discussion.
	  http://freedesktop.org/pipermail/uim/2004-November/000736.html
	  
	  This framework will replace property handling codes in each IMs once
	  the discussion has been end. I'm going to replace the codes of
	  anthy.scm as a test soon even if the discussion continues.
	
	* scm/action.scm
	  - All procedures are validated by test-action.scm
	  - (register-action): Fix invalid registration
	  - (action-indicate): Add handling for an error case
	  - (activity-indicator-new): Rename a wrong local variable name
	  - (widget-new-internal): New alias of define-record'ed widget-new
	  - (register-widget):
	    * Fix invalid registration
	    * Replace actions with () if #f is specified
	  - (widget-new):
	    * Swap argument order to become natural
	    * Remove an initialization with arbitrary activity
	  - (widget-activity): Modify an inappropriate message
	  - (widget-activate!):
	    * Also accepts action-id instead of actual action object
	    * Add handling for an error case
	  - (widget-configuration): Add indicator configuration information
	    to handle action-less widget properly
	  - (widget-state): Cosmetic change
	  - (widget-update-configuration): Rename to widget-update-configuration!
	  - (widget-update-configuration!):
	    * Renamed from widget-update-configuration
	    * Fix a wrong logic
	  - (widget-update-state): Rename to widget-update-state!
	  - (widget-update-state!):
	    * Renamed from widget-update-configuration
	    * Fix a wrong logic
	  - (widget-debug-message): Fix a variable name mistake
	  - (create-context): Follow the renaming of context-init-widgets
	  - (widget-compose-live-branch): Fix an invalid invocation
	  - (context-init-widgets): Rename to context-init-widgets!
	  - (context-init-widgets!):
	    * Renamed from context-init-widgets!
	    * Add an error handling for re-initialization case
	    * Allocate a widget_fallback for the context if no widgets
	      specified
	    * Reject invalid widget-id
	    * Add a comment about the specification
	  - (context-update-widgets): Follow the renaming of
	    widget-update-configuration and widget-update-state
	  - (context-propagate-widget-states): Modify the comment
	  - (context-find-mode-widget): Fix broken code
	  - (widget-action-id->mode-value):
	    * Fix invalid variable name
	    * Add error handling for invalid action-id
	  - (widget-mode-value->action-id): Add error handling for out of
	    range
	  - (context-current-mode):
	    * Fix an invalid invocation
	    * Add error handling for the case mode-widget does not exist
	  - (context-update-mode-list):
	    * Fix the lacking mode-widget retrieving
	    * Add fallback handling for the case mode-widget does not exist
	  - (widget widget_fallback): New builtin widget
	  - (action action_anthy_hiragana): Replace the indication-id
	    figure_anthy_hiragana with figure_ja_hiragana
	  - (action action_anthy_katakana, action action_anthy_hankana, action
	    action_anthy_direct, action action_anthy_zenkaku, action
	    action_anthy_roma, action action_anthy_kana): Remove old-state-id
	    from handlers
	* test/test-action.scm
	  - (testcase action): New testcase
	  - (test indicator-new, test register-action, test fetch-action, test
	    action-active?, test action-indicate, test actions-new, test
	    activity-indicator-new, test register-widget, test widget-new,
	    test widget-activity, test widget-activate!, test
	    widget-configuration, test widget-state, test
	    widget-update-configuration!, test widget-update-state!, test
	    widget-debug-message, test indication-compose-label, test
	    indication-compose-branch, test indication-compose-leaf, test
	    widget-compose-live-branch, test context-init-widgets!, test
	    context-update-widgets, test context-propagate-prop-label-update,
	    test context-propagate-prop-list-update, test
	    context-propagate-widget-states, test
	    context-propagate-widget-configuration, test
	    context-prop-activate-handler, test context-find-mode-widget, test
	    widget-action-id->mode-value, test widget-mode-value->action-id,
	    test context-current-mode, test context-update-mode, test
	    context-update-mode-list, test context-mode-handler): New test
	* scm/property.scm
	  - Remove
	* test/test-property.scm
	  - Remove
	
	* scm/util.scm
	  - (alist-replace!): Remove
	  - (alist-replace): New procedure. Validated by test-util.scm
	* test/test-util.scm
	  - (test alist-replace): New test
	
	* scm/Makefile.am
	  - (SCM_FILES):
	    * Remove property.scm
	    * Add action.scm and load-action.scm
	
2004-11-04 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Replace the comment of --with-canna 'with uim-canna' with 'with
	  libcanna' to conform to the meaning of --with in autoconf
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/toolbar-common-gtk.c: Fixed C++ style pointer notations.
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/dict-canna.h: Fixed C++ style pointer notations.
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/helper-xfce4-applet.c: Removed an unused file.
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/Makafile.am: uim-dict need dict-util.h for build.
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/im-switcher-gtk.c: Fixed all C++ style pointer notations.
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/input-pad-ja.c: Fixed all C++ style pointer notations.
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk/gtk-im-uim.c: Fixed C++ style pointer notation 'gchar*'.
	  This intends to fix the bug 1483.
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/direct.scm: Renamed from scm/default-im.
	
	* uim/uim.c: Replaced "default-im.scm" with "direct.scm".
	
2004-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	scm/default-im.scm: replaced all words 'default' with 'direct'
	  to avoid confusion. This changes will close the bug 1768.
	
2004-11-03 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/candidatewindow.h
	* qt/quiminputcontextplugin/src/candidatewindow.cpp
	* qt/quiminputcontextplugin-qt4/candidatewindow.h
	* qt/quiminputcontextplugin-qt4/candidatewindow.cpp
	  - (layoutWindow): more proper handling of candidate
	    window's location. In consideration of preedit's
	    height.
	  - (forceInside): removed
	
	* qt/quiminputcontextplugin/src/quiminputcontext.cpp
	* qt/quiminputcontextplugin-qt4/quiminputcontext.cpp
	  - doesn't strdup the return value of uim_get_im_name,
	    uim_get_language_name_from_locale, uim_get_im_short_desc
	
2004-11-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk/gtk-im-uim.c:
	 -(im_module_create): finalize im context object if uim_init failed.
	
	
2004-11-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk/gtk-uim-uim.c:
	 -(im_module_create): Get im_name by uim_get_default_im_name according
	   to the current localename.
	 -(im_module_list): List only 1 input method "uim".
	
	These changes aim to show one input method "uim" only by right click upon 
	text widget.
	
	
2004-11-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	 * Makefile.am:
	 -(releasetest): New rule.
	
2004-11-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Removed unused compile flag XFCE4_PANEL.
	
2004-11-03 kzk <mover@hct.zaq.ne.jp>
	
	* reneme qtkde-helper to uim-kdehelper
	
	* qt/uim-kdehelper/configure.in.in
	  - release uim-kdehelper 0.1.0
	* qt/uim-kdehelper/po/uim-qtkde-helper.pot
	  - update pot file
	
2004-11-03 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/pref/uimqtconfig
	  - added
	* pref/uim-pref-qt.cpp
	  - release all modules in exiting
	
	* pref/Makefile.am
	  - add uimqtconfig to SUBDIRS
	* pref/uimconfig/kcmuimconfigmodule.cpp
	  - remove unnecessary #include
	* pref/uim-pref-qt.h
	  - Ditto
	
2004-11-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/m17nlib.scm:
	 - (m17nlib-on-key?): New key definition.
	 - (m17nlib-off-key?): New key definition.
	 - (m17nlib-proc-direct-state): New procedure.
	 - (m17nlib-commit-raw): New procedure.
	 - (m17nlib-press-key-handler): Call m17nlib-context-on to check the current
	   input state is on or off.
	   
	This changes implements on/off feature to uim's m17n-lib support.
	
2004-10-31 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds the replacement of property.scm to the IM framework
	  in accordance with recent discussions on uim@fdo.
	  
	  This user-operable action handling framework will eliminates all of
	  property related handlings such as im-update-prop-list or
	  im-update-prop-label from each input method. Input method developer
	  can forget about the property (and legacy 'mode') feature except for
	  context creation process.
	  
	  The term 'widget' used in this framework is still under
	  discussion. It may be renamed in accordance with result of the
	  discussion.
	  http://freedesktop.org/pipermail/uim/2004-October/000731.html
	  
	  This framework will replace property handling codes in each IMs once
	  the discussion has been end and the implementation has been
	  validated by test.
	
	* scm/action.scm
	  - (indication-rec-spec, action-rec-spec, indicator-rec-spec,
	    widget-rec-spec, action-list, widget-proto-list): New variable
	  - (record indication, record action, record indicator, record
	    widget): New record
	  - (indicator-new-internal): New alias procedure
	  - (indicator-set-id!, indicator-set-activity-pred!,
	    indicator-set-activate-handler!): New placeholders to disable
	    the 3 automatically defined procedures
	  - (indicator-new, register-action, fetch-action, action-active?,
	    action-indicate, actions-new, activity-indicator-new,
	    fallback-indication, register-widget, widget-new, widget-activity,
	    widget-activate!, widget-configuration, widget-state,
	    widget-update-configuration, widget-update-state,
	    widget-debug-message, indication-compose-label,
	    indication-compose-branch, indication-compose-leaf,
	    widget-compose-live-branch, context-init-widgets,
	    context-update-widgets, context-propagate-widget-states,
	    context-propagate-widget-configuration, context-find-mode-widget,
	    widget-action-id->mode-value, widget-mode-value->action-id,
	    context-current-mode): New procedure
	  - (context-propagate-prop-label-update,
	    context-propagate-prop-list-update, context-prop-activate-handler,
	    context-update-mode, context-update-mode-list,
	    context-mode-handler): Rewrite implementations in accordance with
	    the new action-based framework
	  - (context-init-prop-list, context-propagate-prop-configuration,
	    context-propagate-prop-state, prop-list-find-mode-prop,
	    prop-state-compose-branch, prop-state-compose-label,
	    prop-state-compose-leaf, property-activate-state!,
	    property-compose-live-branch, property-debug-message,
	    property-definition-list, property-definition-rec-spec,
	    property-mode-value->prop-state-id, property-new,
	    property-new-internal, property-next-state,
	    property-prop-state-id->mode-value, property-transit-state!,
	    property-will-state-transit?, register-property, record
	    prop-state, record property, record property-definition): Remove
	  - (context-rec-spec, record context, create-context,
	    invoke-handler): New implementations for im.scm. They will be
	    moved into im.scm once the switching to action.scm has been
	    started
	  - (anthy-widgets, default-widget_anthy_input_mode,
	    default-widget_anthy_kana_input_method, anthy-input-mode-actions,
	    anthy-kana-input-method-actions, anthy-prepare-activation,
	    anthy-im-name-indication, anthy-exec-im-switcher-indication,
	    anthy-configure-widgets, anthy-context-new): New implementations
	    and definitions for anthy.scm. They will be moved into anthy.scm
	    once the switching to action.scm has been started
	  - (anthy-property-id-list, default-prop_anthy_input_mode,
	    default-prop_anthy_kana_input_method): Remove
	* scm/load-action.scm
	  - New file. This loads action.scm in accordance with platform
	    configuration
	
2004-10-30 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/action.scm
	  - New file to replace property.scm with. Just a copy of property.scm
	    at now
	
	* scm/util.scm
	  - (alist-replace!): New procedure. Not yet tested
	
	* scm/im.scm
	  - Remove a comment
	* scm/anthy.scm
	  - Modify a comment
	
2004-10-30 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/skk-dic.c (do_search_line) : rename from do_search. And some comments.
	
2004-10-30 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* AUTHORS : add Ashie-san's entry. ;)
	
2004-10-28 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontext/src/quiminputcontext.cpp
	  - fixed typo of previous commit...
	
2004-10-28 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/quiminputcontext.cpp
	  - use uim_get_language_name_from_locale() function
	* qt/quiminputcontextplugin/src/quiminputcontext.h
	  - #include<uim-util.h>
	
2004-10-28 kzk <mover@hct.zaq.ne.jp>
	
	* Code Optimization
	  - improving use of iterator
	
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.cpp
	  - (strParse): moving end() outside of the for declaration
	* qt/quiminputcontextplugin/src/quiminputcontext.cpp
	  - (getPreeditString, getPreeditCursorPosition, getPreeditSelectionLength) : Ditto
	* qt/quiminputcontextplugin-qt4/quiminputcontext.cpp
	  - (getPreeditString, getPreeditCursorPosition, getPreeditSelectionLength) : Ditto
	* qt/qtkde-helper/src/common/uimstateindicator.cpp
	  - (propListUpdate): use iterator instead of while(!str.isEmpty())
	
2004-10-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp (main) : Prevent startup hang.
	
2004-10-27 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/candidatewindow.h
	  - not to use postfix-increment for iterator (optimization)
	* qtkde-helper/src/candwin/uim-candwin-qt.h
	  - Ditto
	
2004-10-26 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/xim.h (class XimIC) : Add private member m_keyState.
	* xim/ximtrans.cpp (Connection::xim_open) : Handle KeyRelease
	  filter event.
	* xim/ximic.cpp (XimIC::OnKeyEvent) : Use internal m_keyState.
	(XimIC::get_ic_atr) : Send KeyReleaseMask.
	* xim/ximim.cpp (XimIM_impl::forward_event) : Handle KeyRelease
	  event.
	* xim/ximserver.cpp (get_im_lang_from_engine) : Indentation fix.
	(InputContext::pushKey) : Handle KeyRelease
	  event with uim_release_key().
	(keyState::keyState) : New default constructor.
	  keyState::keyState(keyEventX *x) is deleted.
	(keyState::~keyState) : New destructor.
	(keyState::check_key) : New function.  Mostly moved from deleted
	  keyState::keyState(keyEventX *x).  Revise mod1-5 modifiers using
	  revise_mod().  Handle XK_Meta_L and XK_Meta_R.  Store keypress
	  or keyrelease state.  Also store modifier key state.
	(keyState::revise_mod) : Revise modifier value according to stored
	  key state.
	* xim/convdisp.cpp (ConvdispRw::update_preedit) : Indentation fix.
	(ConvdispOv::layoutCharEnt) : Plug leak.
	
2004-10-26 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/pref
	  - add the skelton part of "uim-pref-qt"
	    This dialog reuses KControl's module system
	
2004-10-26 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/KEY
	  - Add FAQ section
	  - Add the exact match issue to FAQ section
	  - Remove signature
	
2004-10-26 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/toolbar/draghandler.cpp
	  - have fixed width. This problem is reported by
	    AWASHIRO Ikuya. Thank you!
	
	* qt/qtkde-helper/src/src/switcher/im-switcher-qt.h
	  - (reloadImList): new function
	* qt/qtkde-helper/src/src/switcher/im-switcher-qt.cpp
	  - (reloadImList): new function
	  - reverse OK button and Cancel button. This is also
	    reported by AWASHIRO Ikuya. Thank you!
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - fixed indent
	
2004-10-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Update 'New logical order string API for Scheme (ustr)'
	* scm/ustr.scm
	  - Modify a comment
	
2004-10-25 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/dict-anthy-gtk.c: Removed old file.
	
2004-10-25 Takuro Ashie <ashie@homa.ne.jp>
	
	* po/POTFILES.in, po/uim.pot, po/ja.po
	  helper/dict-anthy.c, helper/dict-main-gtk.c,
	  helper/dict-word-list-win-gtk.c, helper/dict-word-win-gtk.c:
	  Translate messages into Japanese.
	
2004-10-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds proper rkc restoration on anthy-cancel-conv. The
	  requirement had been reported in [Anthy-dev 1195] by Konosuke
	  Watanabe. Thanks.
	
	* scm/rk.scm
	  - (rk-peek-terminal-match): New API procedure. Returns the rule
	    entry that exactly matches with current pending key sequence. rkc
	    will not be altered. i.e. rk-push-key-last! without side effect
	  - (record rk-context): Fix invalid boolean default values
	  - (rk-push-key-last!):
	    * Mark as API
	    * Add a comment about the procedure name. I suggest
	      rk-terminate-input!
	* doc/COMPATIBILITY
	  - Add a new entry 'rk-push-key-last! without side effect'
	
	* scm/anthy.scm
	  - (anthy-make-whole-string):
	    * Remove the side effect which alters rkc
	    * Revert the change in r1538 which alters
	      anthy-context-preconv-ustr
	  - (anthy-begin-conv):
	    * Remove rk-flush to restore proper rkc when anthy-cancel-conv
	      performed
	    * Describe above intention as comment
	
2004-10-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - (anthy-init-lib-ok?): Rename to anthy-lib-initialized?
	  - (anthy-lib-initialized?): Renamed from anthy-init-lib-ok?
	  - (anthy-context-new): Follow the renaming
	
2004-10-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-ustr.scm
	  - (test ustr-append!, test ustr-append! #2, test ustr-prepend!, test
	    ustr-prepend! #2): Move the position in the file
	
2004-10-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/ustr.scm
	  - All changes are validated by test-ustr.scm
	  - (ustr-set-nth!, ustr-ref, ustr-cursor-at-beginning?,
	    ustr-cursor-at-end?): New procedure
	  - (ustr-cursor-set-frontside!, ustr-cursor-set-backside!):
	    * New procedure
	    * Returns whether the operation has been succeeded or not
	  - (ustr-set-cursor-pos!): Change the behavior on out of range as
	    returns whether the operation has been succeeded or not rather
	    than raise error
	  - (ustr-cursor-delete-frontside!, ustr-cursor-delete-backside!):
	    Change the behavior as returns whether the operation has been
	    succeeded or not
	  - (ustr-nth): Rewrite the implementation using ustr-ref for
	    efficiency
	  - (ustr-append!, ustr-prepend!): Move the position in the file
	* test/test-ustr.scm
	  - (test ustr-set-nth!, test ustr-ref, test
	    ustr-cursor-at-beginning?, test ustr-cursor-at-end?, test ustr-cursor-set-frontside!, test ustr-cursor-set-backside!): New test
	  - (test usr-nth): Add error checkings for invalid range
	  - (test ustr-set-cursor-pos!): Follow the specification change
	  - (test ustr-cursor-move!, test ustr-cursor-delete-frontside!, test
	    ustr-cursor-delete-backside!): Follow the implicit specification
	    change caused by ustr-set-cursor-pos!
	
	* scm/anthy.scm
	  - (anthy-context-rec-spec):
	    * Remove 'index-list' and 'cur-seg' to replace with 'segments'
	    * Add 'segments' as ustr of candidate indices
	    * Fix invalid default values
	  - (anthy-context-new):
	    * Fix broken anthy-lib existence check caused by a typo over sexp
	    * Simplify the initialization of ac-id
	    * Add initialization of anthy-context-segments
	  - (anthy-flush, anthy-converting-state-preedit,
	    anthy-get-commit-string, anthy-commit-string,
	    anthy-resize-segment, anthy-move-candidate,
	    anthy-get-candidate-handler): Follow the introduction of
	    anthy-context-segments
	  - (anthy-begin-conv):
	    * Add ac-id validity check moved from
	      anthy-proc-input-state-with-preedit
	    * Simplify
	  - (anthy-proc-input-state-with-preedit): Move ac-id validity check
	    to anthy-begin-conv
	  - (anthy-cancel-conv): Add anthy-context-segments handling
	  - (anthy-input-state-preedit):
	    * Follow the introduction of anthy-context-segments
	    * Suppress redundant empty segments
	  - (anthy-correct-segment-cursor): New procedure
	  - (anthy-move-segment):
	    * Follow the introduction of anthy-context-segments
	    * Add anthy-reset-candidate-window
	  - (anthy-proc-converting-state, anthy-set-candidate-index-handler):
	    * Follow the introduction of anthy-context-segments
	    * Simplify with new anthy-move-segment
	  - (anthy-release-key-handler): Cosmetic change
	  - (anthy-release-handler): Replace let* with let
	
2004-10-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/anthy.scm:
	 - (anthy-make-whole-string): Store residual-kana to preconv-str
	   if possible.
	
2004-10-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - (anthy-context-rec-spec): Rename the inappropriate member name
	    'state' to 'converting'
	  - (anthy-flush, anthy-begin-input, anthy-update-preedit,
	    anthy-begin-conv, anthy-press-key-handler): Follow the renaming of
	    anthy-context-state
	  - (anthy-compose-state-preedit): Rename to
	    anthy-converting-state-preedit
	  - (anthy-converting-state-preedit): Rename from
	    anthy-compose-state-preedit
	  - (anthy-proc-compose-state): Rename to anthy-proc-converting-state
	  - (anthy-proc-converting-state): Rename from anthy-proc-compose-state
	  - (anthy-cancel-conv): New procedure
	  - (anthy-proc-converting-state): Simplify with anthy-cancel-conv
	
2004-10-23 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - (anthy-move-segment): Comsmetic change
	  - (anthy-resize-segment, anthy-move-candidate): Simplify
	
2004-10-23 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.cpp
	  - (moveCand): fix last candidate is hidden in size changing
	
	* qt/qtkde-helper/src/switcher/im-switcher-qt.h
	  - add Copyright
	* qt/qtkde-helper/src/switcher/im-switcher-qt.cpp
	  - add Copyright
	  - change default size
	
2004-10-23 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.cpp
	  - (moveCand): consider screen geometry
	
2004-10-23 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/common/uimstateindicator.cpp
	  - (propListUpdate): add ToolTip to the button
	  - delete unnecessary spaces
	
2004-10-23 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.cpp
	  - (activateCand): more empty check of given String
	  - (moveCand): Ditto
	* qt/qtkde-helper/src/common/uimstateindicator.cpp
	  - (propListUpdate): Ditto
	
2004-10-22 kzk <mover@hct.zaq.ne.jp>
	
	* This is the initial commit of uim-im-switcher-qt, the Qt
	  version of im switching tool.
	
	* qt/qtkde-helper/src/switcher/im-switcher-qt.h
	* qt/qtkde-helper/src/switcher/im-switcher-qt.cpp
	* qt/qtkde-helper/src/switcher/Makefile.am
	  - new files
	* qt/qtkde-helper/src/Makefile.am
	  - add switcher directory to subdirs
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - use "uim-im-switcher-qt" instead of "uim-im-switcher"
	
	* helper/im-switcher-gtk.c
	  - fixed typo
	* helper/input-pad-ja.c
	  - (create_hiragana_tab): renamed from (create_tab1)
	  - (create_katakana_tab): renamed from (create_tab2)
	  - (create_eisu_tab): renamed from (create_tab3)
	
2004-10-22 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (is_locale_included) : Indentation fixes.
	* xim/ximserver.cpp (InputContext::createUimContext) : Cosmetic
	  changes.
	(changeContext) : Update comment.
	* xim/ximserver.h : Add comment about get_first_locale().
	
2004-10-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - (anthy-begin-conv): Simplify
	
2004-10-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - (anthy-compose-state-preedit): Suppress garbage null segments
	
2004-10-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/util.scm
	  - (context-update-preedit): New procedure
	* scm/anthy.scm
	  - (anthy-update-preedit): Simplify with context-update-preedit
	  - (anthy-pushback-separator): Remove
	  - (anthy-separator): New procedure
	  - (anthy-pushback-preedit-segments): Remove. Merge into
	    anthy-compose-state-preedit
	  - (anthy-compose-state-preedit, anthy-input-state-preedit): Return
	    segment-list instead of pushback directly
	
2004-10-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/util.scm
	  - All changes are validated by test-util.scm
	  - (string-list-concat, string-find): Simplify
	  - (truncate-list): Replace the implementation with list-head's
	  - (list-head): Simplify using truncate-list
	  - (list-tabulate, iota): New procedure. Validated by test-util.scm
	  - (make-list): Simplify using list-tabulate
	  - (filter): Replace the implementation with iterate-lists
	  - (filter-map):
	    * Replace the implementation with iterate-lists
	    * Become multiple lists acceptable
	  - (multi-segment-make-index-list): Simplify using make-list
	  - (multi-segment-make-index-list-rec): Remove. Optimize out
	* test/test-util.scm
	  - (test list-tabulate, test iota): New test
	  - (test make-list): Add an error case
	  - (test filter-map): Add tests for multiple lists
	  - (testcase util multi-segment utils): New testcase
	  - (test multi-segment-make-index-list): New test
	  - (test multi-segment-opposite-kana): New test
	
	* scm/anthy.scm
	  - All changes are refactoring
	  - (anthy-append-string): Remove because unnecessary
	  - (anthy-begin-conv, anthy-move-candidate, anthy-resize-segment):
	    Cosmetic changes
	  - (anthy-proc-input-state-no-preedit,
	    anthy-proc-input-state-with-preedit): Replace anthy-append-string
	    with ustr-insert-elem!
	  - (anthy-pushback-preedit-segment-rec): Remove. Replaced with
	    anthy-pushback-preedit-segments
	  - (anthy-pushback-separator): New procedure
	  - (anthy-pushback-preedit-segments): New procedure. Replaces
	    anthy-pushback-preedit-segment-rec and simplifies
	  - (anthy-get-commit-string, anthy-commit-string): Simplify. The args
	    'idx' and 'nseg' are removed
	  - (anthy-compose-state-preedit, anthy-do-commit): Simplify
	  - (anthy-move-segment): Rename the inappropriate arg name 'dir' with
	    'offset'
	  - (anthy-reset-handler): Add a comment
	
	* doc/COMPATIBILITY
	  - Modify an English expression
	
	* scm/ustr.scm
	  - Remove outdated release information
	
2004-10-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: uim-canna doesn't build by default.
	
2004-10-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Add a new entry 'New logical order string API for Scheme (ustr)'
	  - Add a new entry 'New locale based IM-name retrieving API'
	
2004-10-21 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (InputContext::createUimContext) : Use
	  combination of uim_get_default_im_name() and
	  uim_get_im_name_for_locale() for clients with legacy encoding.
	
2004-10-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds a im-name retrieving API function. See following
	  message thread
	  http://freedesktop.org/pipermail/uim/2004-October/000692.html
	
	* uim/uim.h
	  - (uim_get_im_name_for_locale): New API function
	* uim/uim.c
	  - (uim_get_im_name_for_locale): New function
	* scm/im.scm
	  - (uim-get-im-name-for-locale): New procedure
	
2004-10-21 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp : Update and fix typo in comment.
	* xim/ximtrans.cpp : Ditto.
	* xim/ximic.cpp : Ditto.
	* xim/ximserver.cpp : Ditto.
	* xim/convdisp.cpp : Ditto.
	(create_default_fontset) : Compare zh_TW:zh_HK explicitly.
	
2004-10-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - Require util.scm and ustr.scm
	  - (anthy-context-rec-spec):
	    * Remove left-string, right-string, left-raw-string,
	      right-raw-string, and unused-13th in the comment
	    * Add preconv-ustr and raw-ustr
	  - (anthy-context-new): Add initialization of preconv-ustr and
	      raw-ustr
	  - (anthy-flush): 
	    * Remove re-initialization for left-string, right-string,
	      left-raw-string and right-raw-string
	    * Add re-initialization for preconv-ustr and raw-ustr
	  - (anthy-make-whole-string, anthy-make-whole-raw-string,
	    anthy-append-string, anthy-proc-input-state-no-preedit,
	    anthy-has-preedit?, anthy-proc-input-state-with-preedit,
	    anthy-proc-input-state-with-preedit, anthy-input-state-preedit):
	    Simplify with ustr
	
2004-10-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* qt/qtkde-helper/src/common/uimstateindicator.cpp
	  - (tmpButton): Rename to a meaningful name 'fallbackButton'
	  - (fallbackButton): Renamed from tmpButton
	  - (UimStateIndicator): Follow the renaming of tmpButton
	  - (propListUpdate):
	    * Follow the renaming of tmpButton
	    * Raname 'tmpList' with a meaningful name 'fields'
	  - (propLabelUpdate): Raname 'tmpList' with a meaningful name
	    'fields'
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.h
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - Replace CRLF in each line end with LF
	
2004-10-21 kzk <mover@hct.zaq.ne.jp>
	
	* cleaning qtkde-helper's Makefile.am
	
	* qtkde-helper/src/toolbar/Makefile.am
	  - add noinst_HEADERS
	  - link $(LIB_KDECORE) for i18n String
	* qtkde-helper/src/applet/Makefile.am
	  - delete "message:" rule
	
2004-10-21 kzk <mover@hct.zaq.ne.jp>
	
	* This commit aims to gettextize qtkde-helper
	
	* qtkde-helper/po/Makefile.am
	  - new file
	* qtkde-helper/po/uim-qtkde-helper.pot
	  - new file
	* qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - add i18n string
	
	
2004-10-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/Makefile.am
	  - (SCM_FILES): Add ustr.scm and property.scm
	
	* scm/property.scm
	  - (register-property): Fix update of property-definition-list
	  - (record prop-state): Rename tooltip with short-desc to remove the
	    assumption about the purpose
	  - (property-new): Add error handling against invalid prop-id
	  - (property-next-state):
	    * Fix a wrong procedure invocation
	    * Show error message only when verbose level >= 5
	  - (property-will-state-transit?, property-transit-state!): Fix a
	    wrong procedure invocation
	  - (prop-state-compose-leaf):
	    * Fix a wrong procedure invocation
	    * Replace prop-state-tooltip with prop-state-short-desc
	  - (property-compose-live-branch): Fix wrong procedure invocations
	  - (register-property prop_anthy_input_mode): Fix wrong procedure
	    invocations
	* test/test-property.scm
	  - New file
	  - Some tests are not yet written
	  - (testcase property): New testcase
	  - (test register-property, test property-new, test
	     property-next-state property-will-state-transit?, test
	     property-transit-state!, test property-activate-state!, test
	     property-debug-message, test prop-state-compose-label, test
	     prop-state-compose-branch, test prop-state-compose-leaf, test
	     property-compose-live-branch): New test
	
2004-10-21 kzk <mover@hct.zaq.ne.jp>
	
	* This commit aims to prevent excessive update
	  of im-switcher exec button. For future, many
	  buttons like exec uim-dict will be added.
	  Updating these buttons on each list updating
	  is ugly.
	
	* src/common/quimhelpertoolbar.h
	* src/common/quimhelpertoolbar.cpp
	  - (checkHelperConnection, parseHelperStr,
	     propListUpdate, propLabelUpdate,
	     slotStdinActivated, insertHelperItem,
	     slotMenuActivated): moved to class
	    UimStateIndicator
	
	* src/common/uimstateindicator.h
	* src/common/uimstateindicator.cpp
	  - new files
	  - class UimStateIndicator deals with uim's
	    helper message handling. In contrast,
	    QUimHelperToolbar only deals with buttons
	    which aren't affected by helper messages.
	  - (checkHelperConnection, parseHelperStr,
	     propListUpdate, propLabelUpdate,
	     slotStdinActivated, insertHelperItem,
	     slotMenuActivated): moved from class
	     QUimHelperToolbar
	  - remove codes for debugging
	
	* src/common/Makefile.am
	  - updated
	
	* src/applet/uimhelperapplet.h
	* src/applet/uimhelperapplet.cpp
	  - (setPopupDirectionFromPosition): deleted
	    now in no use
	
2004-10-21 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (find_localename_from_encoding) : Removed.
	(UTF8_Locale::uStringToCtext) : No need to call setlocale() here,
	  since InputContext::createUimContext() and
	  InputContext::focusIn() now handle it properly.
	(compose_localenames_from_im_lang) : Renamed from
	  compose_localename_from_im_lang() since it may compose locale
	  name list like zh_TW:zh_HK.
	(is_locale_included) : New function to check whether locale name
	  is included within locale name list.
	(get_first_locale) : New function.  Return first entry of locale
	  name list.
	* xim/xim.h : Add #include <X11/Xos.h>.  Thanks to KIHARA Hideto.
	(class XimIM) : Add new member function set_lang_region() and
	  get_lang_region().  Add new protected member variable
	  mLangRegion.
	(class icxatr) : Add new member function set_locale_name().  Change
	  font_set_name as private member.  Add new member m_locale.
	(class XimIC) : Add new member function get_lang_region().
	* xim/ximtrans.cpp (Connection::xim_open) : Get locale (lang and
	  region) information of client and store it.
	* xim/ximic.cpp (struct FSCache) : Add new member locale.
	(get_font_set) : Check locale information of fontset.
	(release_font_set) : Ditto.
	(icxatr::set_locale_name) : Store locale name information.
	(XimIC::XimIC) : Get locale name information from InputContext and
	  store it in m_xatr.
	(XimIC::force_send_packet) : Explicitly write down dynamic_cast.
	* xim/ximim.cpp (XimIM::set_lang_region) : New function.  Store
	  locale (lang and region) information of client.
	(XimIM::get_lang_region) : New function.  Return lang and region
	  information of client.
	* xim/main.cpp (init_supported_locales) : Handle locale name list
	  properly.  Plug leak.
	(send_im_list) : Handle locale name list properly.
	(main) : Don't call init_convdisp().
	* xim/ximserver.cpp : Add #include <X11/Xlib.h>.
	(InputContext::createUimContext) : Handle client's locale
	  properly.  Store working locale name of the context.
	(InputContext::changeContext) : Handle locale name list properly.
	  Set locale name information into mConvdisp.
	(InputContext::focusIn) : Call setlocale() with proper locale
	  name.
	(InputContext::get_locale_name) : New function.  Return working
	  locale name of the context.
	* xim/convdisp.cpp : Remove global default fontsets.
	(init_convdisp) : Removed.
	(create_default_fontset) : New function to create default fontset
	  considering with locale information for root-style preedit
	  window.
	(choose_default_fontset) : Use locale name as a argument and call
	  create_default_fontset().
	(class PeWin) : Now constructor uses locale name information.
	(class PeLineWin) : Ditto.
	(class PeOvWin) : Ditto.
	(class ConvdispOv) : Rename set_lang() as set_im_lang().
	(Convdisp::Convdisp) : Store locale name information of its
	  InputContext.
	(Convdisp::set_locale_name) : New function.
	* xim/ximserver.h : Add some new prototype from xim/locale.c.
	(class InputContext) : Add new member function
	  get_locale_name() and new variable mLocaleName.
	* xim/convdisp.h (class Convdisp) : Rename set_lang() as
	  set_im_lang().  Add set_locale_name().  Add mLocaleName.
	(get_font_set) : Use locale name as a argument.
	
2004-10-20 Takuro Ashie <ashie@homa.ne.jp>
	
	* configure.ac: Marked uim-dict as broken.
	
2004-10-20 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/Makefile.am, helper/dict-anthy.c, helper/dict-anthy.h
	  helper/dict-canna.c, helper/dict-canna.h, helper/dict-cclass-dialog.c
	  helper/dict-cclass-dialog.h, helper/dict-dict.c, helper/dict-dict.h
	  helper/dict-main-gtk.c, helper/dict-main-gtk.h, helper/dict-util.c
	  helper/dict-util.h, helper/dict-word-list-view-gtk.c
	  helper/dict-word-list-view-gtk.h, helper/dict-word-list-win-gtk.c
	  helper/dict-word-list-win-gtk.h, helper/dict-word-win-gtk.c
	  helper/dict-word-win-gtk.h, helper/dict-word.c, helper/dict-word.h:
	  - Added new dictionary management tool.
	  - It's based on sumika, and many code improvements are made.
	  - Currentry, it support only Anthy.
	  - It's still broken. To complete this work, we should modify Anthy's
	    API. It's too poor and buggy for GUI use.
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* Refactoring of PopupMenu handling
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	* qt/qtkde-helper/src/common/quimhelpertoolbar.h
	  - (class QHelperButton): deleted
	  - (propListUpdate): use QToolButton's native PopupMenu
	    handling instead of original one. This seems more
	    general way than before.
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - (propListUpdate): use pressed() instead of clicked().
	    This is the way official QPushButton does. This will
	    prevent the problem which popup menu is hidden
	    immediately (this is reported by UEYAMA-san, thank you)
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/candidatewindow.cp
	* qt/quiminputcontextplugin/src/candidatewindow.h
	  - (slotCandidateSelected): remove wrong "const" qualifier
	
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.h
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.cpp
	  - (slotCandidateSelected): remove wrong "const" qualifier
	  - handle candwin's position correctly
	  - handle charset correctly (previously, message is always
	    supposed to be UTF-8 encoded. this bug is reported by
	    UEYAMA-san. thank you!)
	
2004-10-18 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp : Explicitly use "im_lang" instead of "lang" as
	  argument names.
	(class UTF8_Locale) : Rename set_localename_from_lang() into
	  set_localename_from_im_lang().  Remove
	  compose_localename_from_lang() from the member.
	(compose_localename_from_im_lang) : Move from class UTF8_Locale
	  and renamed.
	* xim/connection.h : Cosmetic changes.
	* xim/ximic.cpp (get_font_set) : Remove static.
	* xim/ximserver.cpp : Use renamed member variables, mIMName and
	  mIMLang
	(XimServer::get_im_lang_from_engine) : Change to set mEngineName
	  in createUimContext().
	(XimServer::createUimContext) : Set mEngineName here.
	* xim/main.cpp : Cosmetic changes.
	* xim/convdisp.cpp (create_default_fontset) : Create default
	  fontset mainly for UTF-8 locale used with root-style preedit
	  window.
	(choose_default_fontset) : Use encoding information, and set
	  default fontset only for legacy encodings.
	* xim/canddisp.cpp : Include "config.h" instead of <config.h>.
	* xim/ximserver.h (class XimServer) : Rename private variable
	  mName and mLang into mIMName and mIMLang.
	* xim/convdisp.h : Add prototype get_font_set().
	* xim/xdispatch.h : Cosmetic change.
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - (slotStdinActivated): fix the crash of wrong message parsing
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/toolbar/draghandler.h
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.h
	  - prevent reincluding header file
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* release UimQt 0.2.0 and qtkde-helper 0.1.0-beta1
	* add "const" qualifier to many functions
	
	* qt/quiminputcontextplugin/configure.in.in
	  - release 0.2.0 (require uim 0.4.4)
	* qt/quiminputcontextplugin/qhelpermanager.h
	* qt/quiminputcontextplugin/qhelpermanager.cpp
	  - (parseHelperStr): add const qualifier
	  - (parseHelperStrImChage): Ditto
	* qt/quiminputcontextplugin/quiminputcontext.h
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (commitString, pushbackPreeditString): Ditto
	* qt/quiminputcontextplugin/candidatewindow.h
	* qt/quiminputcontextplugin/candidatewindow.cpp
	  - (setCandidates): Ditto (much optimized!)
	  - (slotCandidateSelected): Ditto
	
	* qt/quiminputcontextplugin-qt4/qhelpermanager.h
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	  - (parseHelperStr, parseHelperStrImChange): Ditto
	* qt/quiminputcontextplugin-qt4/quiminputcontext.h
	* qt/quiminputcontextplugin-qt4/quiminputcontext.cpp
	  - (commitString, pushbackPreeditString): Ditto
	* qt/quiminputcontextplugin-qt4/candidatewindow.h
	* qt/quiminputcontextplugin-qt4/candidatewindow.cpp
	  - (setCandidates): Ditto
	
	* qt/qtkde-helper/configure.in.in
	  - release 0.1.0-beta1
	* qt/qtkde-helper/src/candwin/uim-candwin.h
	* qt/qtkde-helper/src/candwin/uim-candwin.cpp
	  - (activateCandm selectCand, moveCand,
	     slotCandidateSelected, strParse): add const qualifier
	* qt/qtkde-helper/src/common/quimhelpertoolbar.h
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - (parseHelperStr, propListUpdate, propLabelUpdate): Ditto
	
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/bootstrap
	  - add "release" option
	
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.cpp
	  - (activateCand): handle charset correctly
	
2004-10-18 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/applet/uimhelperapplet.h
	  - remove (resizeEvent)
	* qt/qtkde-helper/src/applet/uimhelperapplet.cpp
	  - remvoe (resizeEvent)
	  - fix applet size handling (fit for the contents).
	
2004-10-16 Masanari Yamamoto <h013177b@ice.nuie.nagoya-u.ac.jp>
	
	* fep/uim-fep.c, README.ja
	  - (get_default_im_name): delete UIM_FEP environment variable
	  - (usage): add short description
	  - (init_agent): check im name
	
	* fep/str.c 
	  - (get_enc) replace LC_ALL, LC_CTYPE, LANG with setlocale(LC_CTYPE, "")
	
2004-10-16 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit makes ustr ready to use
	
	* uim/slib.c
	  - (my_err): Disable backtrace if (siod_verbose_level < 5) for valid
	    interaction between uim-test-util and uim-sh
	
	* scm/util.scm
	  - (list-head, list-tail): Add lower bound range checking for
	    ustr-cursor-move!
	* test/test-util.scm
	  - Add copyright header
	  - (list-head, list-tail): Add lower bound range checking
	
	* scm/ustr.scm
	  - Modify some comments about usage
	  - All procedures has been validated by test-ustr.scm and ready to use
	  - (ustr=): New procedure
	  - (ustr-copy!, ustr-nth, ustr-cursor-move-beginning!,
	    ustr-cursor-delete-frontside!, ustr-cursor-delete-backside!,
	    ustr-insert-elem!): Fix invalid argument passing
	  - (ustr-set-cursor-pos!):
	    * Fix wrong procedure name on calling
	    * Error handling has implicitly been added by list-tail and
	      list-head
	  - (ustr-cursor-move!): Error handling has implicitly been added by
	    ustr-set-cursor-pos!
	  - (ustr-cursor-move-backward!, ustr-cursor-move-forward!): Fix
	    invalid list reorganization
	  - (ustr-cursor-frontside, ustr-cursor-backside):
	    * Fix returning wrong opposite side element
	    * Add error handling about range checking
	* test/test-ustr.scm
	  - New file
	  - (testcase ustr): New testcase
	  - (test ustr-new, test ustr-whole-seq, test ustr-former-seq, test
	     ustr-latter-seq, test ustr-set-whole-seq!, test
	     ustr-set-former-seq!, test ustr-set-latter-seq!, test
	     ustr-empty?, test ustr-clear!, test ustr-clear-former!, test
	     ustr-clear-latter!, test ustr-copy!, test ustr=, test
	     ustr-length, test ustr-nth, test map-ustr-whole, test
	     map-ustr-former, test map-ustr-latter, test
	     append-map-ustr-whole, test append-map-ustr-former, test
	     append-map-ustr-latter, test string-append-map-ustr-whole, test
	     string-append-map-ustr-former, test
	     string-append-map-ustr-latter, test ustr-cursor-pos, test
	     ustr-set-cursor-pos!, test ustr-cursor-move!, test
	     ustr-cursor-move-backward!, test ustr-cursor-move-forward!, test
	     ustr-cursor-move-beginning!, test ustr-cursor-move-end!, test
	     ustr-cursor-frontside, test ustr-cursor-backside, test
	     ustr-cursor-delete-frontside!, test ustr-cursor-delete-backside!,
	     test ustr-insert-elem!, test ustr-insert-seq!, test
	     ustr-insert-seq! #2, test ustr-append!, test ustr-append! #2,
	     test ustr-prepend!, test ustr-prepend! #2): New test
	
	* test-custom.scm
	* test-i18n.scm
	* test-im.scm
	* test-intl.scm
	* test-key.scm
	* test-slib.scm
	* test-uim-test-utils.scm
	* test-uim-util.scm
	* test-util.scm
	  - Add copyright header
	
2004-10-16 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (set_lang) : Disable fontset change of 
	  over-the-spot style preedit area upon im-switch.
	
2004-10-15 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm (skk-use-with-vi?) : New config for comfortable use
	  of skk with vi.
	(skk-vi-escape-key?) : New key definition.
	(skk-proc-state-direct-no-preedit) : Check skk-use-with-vi? first
	  and if this is #t, change its state into skk-state-latin with
	  escape key.
	(skk-proc-state-wide-latin) : Ditto.
	
2004-10-15 kzk <mover@hct.zaq.ne.jp>
	
	* Rename "uim-helper-candwin-qt" to "uim-candwin-qt"
	
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.h
	  - renamed from uim-helper-candwin-qt.h
	* qt/qtkde-helper/src/candwin/uim-candwin-qt.cpp
	  - renamed from uim-helper-candwin-qt.cpp
	* qt/qtkde-helper/src/candwin/Makefile.am
	  - modified
	
	
2004-10-15 kzk <mover@hct.zaq.ne.jp>
	
	* This commit aims to add draggable function to
	  uim-toolbar-qt
	
	* qt/qtkde-helper/src/toolbar/draghandler.h
	* qt/qtkde-helper/src/toolbar/draghandler.cpp
	  - the indicator by which users can drag whole toolbar
	  - (class UimToolbarDraggingHandler): new class
	
	* qt/qtkde-helper/src/toolbar/uim-toolbar-qt.cpp
	  - renamed from uim-helper-toolbar-qt.cpp
	  - add draghandler
	
	* qt/qtkde-helper/src/toolbar/Makefile.am
	  - modified
	
2004-10-15 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp : Add #include <locale.h>.
	
2004-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Release 0.4.5-beta1
	
2004-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/anthy.scm:
	 - (anthy-latin-key?): Added control-j.
	
2004-10-15 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (check_modifier) : Fix typo.
	
2004-10-14 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/util.scm
	  - (list-head, list-tail):
	    * Add error handling for out of range
	    * Validated by test-util.scm and ready to use
	  - (make-list, zip, append-reverse, find, any, every, fold, remove,
	    alist-delete): Validated by test-util.scm and ready to use
	* test/test-util.scm
	  - (test list-head, test list-tail, test make-list, test zip, test
	    find, test any, test every, test fold, test remove, test
	    alist-delete): New test
	
2004-10-14 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds a preliminary 'ustr' object. But it is not yet used
	  by current uim implementation, and not yet tested. it will be
	  incorporated into various scm files after next stable uim has been
	  released.
	
	  'ustr' stands for 'universal string'. It represents a logical order
	  string of abstract elements for general purpose. Since it does not
	  assume any specific type of the elements, we can reuse it against
	  several generations of composition table architectures such as rk or
	  hk. It should be isolated from composition table architecture to
	  keep flexibility, reusability and simplicity. ustr provides only
	  basic string operations.
	
	  Developers, take a look into the code (but do not review, it's not
	  validated by test yet) and tell me your requirements or
	  opinions. I'm going to redesign of composition table architecture
	  based on this to simplify each IM codes to prepare introduction of
	  more complex IM features. I'll post the suggestion to the
	  mailinglist after next stable release.
	
	* scm/ustr.scm
	  - New file
	  - All procedures are not yet validated by test
	  - (ustr-rec-spec): New variable
	  - (record ustr): New record
	  - (ustr-new-internal): New alias for define-record'ed ustr-new
	  - (ustr-new, ustr-whole-seq, ustr-former-seq, ustr-latter-seq,
	    ustr-set-whole-seq!, ustr-set-former-seq!, ustr-set-latter-seq!,
	    ustr-empty?, ustr-clear!, ustr-clear-former!, ustr-clear-latter!,
	    ustr-copy!, ustr-length, ustr-nth, map-ustr-whole,
	    map-ustr-former, map-ustr-latter, append-map-ustr-whole,
	    append-map-ustr-former, append-map-ustr-latter,
	    string-append-map-ustr-whole, string-append-map-ustr-former,
	    string-append-map-ustr-latter, ustr-cursor-pos,
	    ustr-set-cursor-pos!, ustr-cursor-move!,
	    ustr-cursor-move-backward!, ustr-cursor-move-forward!,
	    ustr-cursor-move-beginning!, ustr-cursor-move-end!,
	    ustr-cursor-frontside, ustr-cursor-backside,
	    ustr-cursor-delete-backside!, ustr-cursor-delete-frontside!,
	    ustr-insert-elem!, ustr-insert-seq!, ustr-append!, ustr-prepend!):
	    New procedure
	
	* scm/util.scm
	  - All procedures added by this commit are not yet validated by test
	  - (iterate-lists): New procedure for local use
	  - (make-list, zip, append-reverse, any, every, remove,
	    alist-delete): New SRFI procedure
	  - (fold): Make workable
	  - (filter, filter-map): Add an alternative implementation as
	    comment. It will replace old one after next stable release
	
	* scm/Makefile.am
	  - (SCM_FILES): Add ustr.scm and property.scm into a comment as
	    placeholder
	
	* scm/property.scm
	  - Modify a comment about release plan
	
2004-10-13 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (find_localename_from_encoding) : Support
	  zh_CN.gb2312 and zh_HK.big5hkscs locale.
	
2004-10-13 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (InputContext::pushback_preedit_string) :
	  Recover wrong change in r1432, and add comment about this.
	
2004-10-13 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp (remove_current_fd_watch) : Remove static
	  declaration.
	* xim/canddisp.cpp (candwin_read_cb) : Indentation fix.  Close fd
	  and stop fd watch of candidate helper application if it crashes
	  or doesn't exist.
	
2004-10-13 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* doc/XIM-SERVER : Update 'Internal Implementation' section.
	
2004-10-13 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/intl.c : Move place of including config.h.
	
2004-10-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/intl.c
	  - Surround #include <locale.h> with #ifdef ENABLE_NLS
	
2004-10-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/XIM-SERVER
	  - Add a new section 'Internal Implementation' which describes what
	    happened to the xim-uim recently
	
2004-10-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/XIM-SERVER
	  - Fix an English word
	
2004-10-12 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src
	  - add uim project's copyright to all the file(*.h and *.cpp).
	
2004-10-12 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (utf8_to_native_str) : Plug leak.
	* xim/ximic.cpp (XimIC::onSendPacket) : Delete string if
	  conversion fails.
	* xim/ximserver.cpp (InputContext::createUimContext) : Add
	  comment.
	
2004-10-12 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* doc/XIM-SERVER : Add caveat about working encoding.
	
2004-10-12 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (utf8_to_native_str) : Cosmetic change.
	(utf8_wctomb) : Ditto.
	* xim/ximic.cpp (XimIC::reset_ic) : Do more sanity response if
	  converting to compound text fails.
	(XimIC::onSendPacket) : Ditto.
	* xim/convdisp.cpp (ConvdispOv::layoutCharEnt) : Don't return even
	  if string conversion fails.
	
2004-10-12 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (utf8_mbtowc) : Cosmetic change.
	(utf8_wctomb) : Ditto.
	
2004-10-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* gtk/gtk-im-uim.c
	  - Re-include uim/uim-im-switcher.h which commented out in
	    r1468. It's a required header
	  - Replace inappropriate #include <uim/foo> with #include "uim/foo"
	
2004-10-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* gtk/gtk-im-uim.c: Fixed compile time error & warnings.
	
2004-10-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* configure.ac
	  - Add new option --enable-dict to make build of uim-dict
	    configurable. Since it had been derived from Sumika, it also
	    requires GTK+ 2.4.0 or later. So we must separate it from normal
	    GTK2 category for other helper applets
	* helper/Makefile.am
	  - Build uim-dict only if DICT is defined
	
2004-10-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-func.c
	  - (uim_iconv_code_conv): Replace const qualifier of second arg of
	    iconv(3) with ICONV_CONST macro to suppress warning on Linux glibc
	    version of iconv(3)
	* xim/locale.cpp
	  - (utf8_to_native_str): Cast second arg of iconv(3) to (ICONV_CONST
	    char **) to avoid compilation error on GNU libiconv version of
	    iconv(3) which FreeBSD platform uses
	
	* uim/intl.c
	  - Add #include <string.h>
	
2004-10-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - (anthy-begin-conv): Fix pending rk string truncation problem
	    reported in [Anthy-dev 1169] by Konosuke Watanabe. Thanks. It had
	    been enbuged in r1447
	
2004-10-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/default-im.scm
	  - (default-init-handler): Disable im-list for mode
	  - (default-mode-handler): Disable im-switching by mode switching
	
2004-10-11 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp : Revert r1461 change since it breaks compilation on
	  Linux.
	
2004-10-11 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (ustring_to_utf8_str) : Change to use locally
	  prepared wctomb().
	(utf8_to_native_str) : New.
	(UTF8_Locale::uStringToCtext) : Do setlocale() with locale name
	  retrived from encoding name.  Add sanity check.
	(UTF8_Locale::compose_localename_from_lang) : Change to return
	  names without UTF-8 encoding name.
	(utf8_mbtowc) : New.
	(utf8_wctomb) : New.
	(find_localename_from_encode) : Remove static.
	(utf8_to_native_str) : Ditto.  Return NULL if it fails to convert.
	* xim/ximic.cpp (XimIC::reset_ic) : Add sanity check.
	(XimIC::onSendPacket) : Ditto.
	* xim/main.cpp (init_supported_locales) : Don't check UTF-8 name
	  since now compose_localename_from_lang() returns name without
	  UTF-8 suffix.
	(send_im_list) : Only send im with supported encoding of the
	  context.
	* xim/ximserver.cpp (print_ustring) : Use locally prepared
	  wctomb().
	(XimServer::strToUstring) : Use locally prepared mbtowc().
	(InputContext::createUimContext) : Do setlocale() with
	  corresponding encoding of own context.  Use default im if
	  encoding of the contexts doesn't match the one from requested
	  im.
	(InputContext::changeContext) : Don't change im if encoding of the
	  context doesn't match the one from requested im.
	(InputContext::focusIn) : Ditto.
	* xim/convdisp.cpp (init_convdisp) : Change to create fontset with
	  locale with legacy encoding.
	(class PeWin) : Add argument encoding for PeWin().  Add new
	  variable mEncoding.
	(class PeLineWin) : Add argument encoding for PeLineWin().
	(class PeOvWin) : Add argument encoding for PeOvWin().
	(PeWin::draw_char) : Use XmbDrawImageString() instead of
	  XwcDrawImageString() for string which has been converted to
	  legacy encoding.
	(ConvdispOv::layoutCharEnt) : Use XmbTextExtents().
	(ConvdispOs::compose_preedit_array) : Add sanity check.
	* xim/ximserver.h : Add new prototypes, utf8_to_native_str(),
		  utf8_mbtowc(), and utf8_wctomb().
	
2004-10-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* xim/locale.cpp
	  - (utf8_to_native_str): Fix a compile error involving constness
	    checking
	
2004-10-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/intl.c
	  - (intl_init_locale):
	    * Remove invalid textdomain("uim") here. textdomain() must not be
	      performed by a library because it masks application's one. Use
	      dgettext() always. This fixed bug #1599
	    * Perform setlocale(3) only if it maybe did not performed
	      before. This avoids the pointer invalidation of the string
	      previously returned by setlocale() in some case
	
2004-10-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* helper/toolbar-common-gtk.c
	  - (prop_button_released): Add GTK_CHECK_VERSION() to avoid bug #1598
	
	* scm/util.scm
	  - Add a procedure category header as comment
	
2004-10-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/util.scm
	  - Oops, previous commit (r1457) also committed these 3 preliminary
	    procedures as side effect. They are not tested or completed. Don't
	    use them yet.
	  - (list-head): New de facto standard procedure
	  - (list-tail): New R5RS procedure
	  - (fold): New SRFI procedure
	
2004-10-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit fixes bug #1600 'uim-fep does not look up standard
	  default IM configuration'
	
	* fep/uim-fep.c
	  - (DEFAULT_ENGINE): Remove to replace with standard uim default IM
	    selection scheme
	  - (get_default_im_name): New static function. It gets default IM
	    name by get_default_im_name().
	  - (main, usage): Replace default IM lookup with get_default_im_name()
	
2004-10-11 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (UTF8_Locale::uStringToCtext) : Convert utf8
	  string into XCompoundtext via native locale string.
	(find_localename_from_encoding) : New.  Handles only CJK locale
	  for the moment.
	(utf8_to_native_str) : New.
	* xim/xim.h (class XimIM) : Add member function set_encoding() and
	  get_encoding().  Add private variable mEncoding.
	(class XimIC) : Add member function get_encoding().
	* xim/ximtrans.cpp (Connection::xim_encoding_negotiation) : Check
	  encoding.
	* xim/ximic.cpp (XimIC::reset_ic) : Convert uString into Ctext
	  using encoding information.
	(XimIC::onSendPacket) : Ditto.
	* xim/ximim.cpp (XimIM::set_encoding) : New.
	(XimIM::get_encoding) : New.
	* xim/ximserver.cpp (XimServer::uStringToCtext) : Use encoding.
	* xim/convdisp.cpp (Convdisp::Convdisp) : Get encoding information
	  from its XimIC.
	(ConvdispOs::compose_preedit_array) : Convert uString into Ctext
	  using encoding information.
	* xim/ximserver.h (class Locale) : Add argument encoding for
	  uStringToCtext().
	* xim/convdisp.h (class Convdisp) : Add new variable mEncoding.
	
2004-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Release 0.4.4.2.
	
2004-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* test/Makefile.am:
	 - Removed unexisting files.
	
2004-10-11 Masahito Omote <omote@utyuuzin.net>
	
	* canna.scm (canna-proc-input-state-no-preedit): Fix not accepting some keys
	  when no preedit exists.
	
2004-10-11 Masahito Omote <omote@utyuuzin.net>
	
	* helper/GNOME_UimApplet.server.in.in: s/helper/toolbar/.
	
2004-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* sumika/
	 include/canna.h: Removed unneed file.
	 gtk2/cannacontainer.c: Ditto.
	 gtk2/cannacontainer.h: Ditto. 
	
2004-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* sumika/:
	 ad-hoc modification for through compile process.
	
2004-10-11 kzk <mover@hct.zaq.ne.jp>
	
	* xim/canddisp.cpp
	  - (candwin_command): "uim-candwin-gtk" was renamed from
	    "uim-helper-candwin-gtk"
	
2004-10-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - Add comments about the role for members of anthy-context
	  - Fix some default values of anthy-context
	  - (anthy-begin-conv): Fix invalid conversion state when beginning a
	    conversion with preedit only contains rkc pending string
	  - (anthy-flush): Add cur-seg re-initialization
	
2004-10-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Release 0.4.4.1.
	
2004-10-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/agent.c:
	 - changed #include <uim/uim.h> to "uim.h". Old style isn't valid 
	   if uim isn't installed already.
	
2004-10-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Release 0.4.4.
	
2004-10-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/Makefile.am:
	 - Added top_buidddir to CPPFLAGS to pass make distcheck.
	 
	* gtk/Makefile.am:
	 - Ditto.
	
2004-10-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/japanese.scm
	  - (ja-rk-rule-basic):
	    * Replace wide-katakana result of "xca", "xka", "xka" with similar
	      hankaku-katakana
	    * Add lacking hankaku-katakana result slot of "z/" and so on
	  - (ja-rk-rule-additional): Remove inappropriate spaces in results
	
2004-10-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/japanese.scm
	  - Revert all changes came from invalid patch application in r1370
	  - Cleanly re-apply the patch contributed in [Anthy-dev 1101] by
	    OHASHI Hideya. Thanks
	  - (ja-rk-rule-basic): Most of unfamiliar 3-letter romaji entries
	    that conflicts AZIK composing rules has been moved into
	    ja-rk-rule-additional
	  - (ja-rk-rule-additional): Import the 3-letter romaji entries from
	    the ja-rk-rule-basic
	* doc/COMPATIBILITY
	  - Rename the inappropriate entry title 'Additional romaji-kana
	    conversion table has been added' to 'romaji-kana conversion table
	    has been split into two parts'
	  - Describe the changes
	
2004-10-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim.h
	  - (uim_init): Add a attention about setlocale(3)
	
2004-10-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* xim/main.cpp:
	 - (main): Moved the location of setlocale just before check_default_engine.
	
2004-10-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-helper.c
	  - (uim_helper_fd): Make static. This function should not be exported
	    since it uses local enum definition which has a popular short name
	    easy to conflict
	  - (uim_helper_fd_readable): Reenable the function
	* uim/uim-helper.h
	  - (uim_helper_fd_readable): Exported
	
	* uim/uim-helper-client.c
	  - (uim_helper_read_proc): Replace uim_helper_fd() with
	    uim_helper_fd_readable()
	
	* doc/COMPATIBILITY
	  - Add a new entry 'uim_helper_fd_readable() has been exported'
	
2004-10-10 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim.pc.in : Add @LIBINTL@ and @M17NLIB_LIBS@ for Libs.
	* xim/Makefile.am : Add connection.h for uim_xim_SOURCES.
	
2004-10-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit moves the 2 im-switching API functions into
	  uim-im-switcher.h to segregate the optional im-switching feature
	  from uim core
	
	* uim/uim.h
	  - (uim_switch_im, uim_get_current_im_name): Move into
	    uim-im-switcher.h
	* uim/uim-im-switcher.h
	  - New file
	  - (uim_switch_im, uim_get_current_im_name): Moved from uim.h
	* uim/Makefile.am
	  - (libuim_la_SOURCES): Move uim-util.h to pkginclude_HEADERS because
	    external uim bridges such as MacUIM or IMKit-uim will require it
	    installed
	  - (pkginclude_HEADERS): Add uim-util.h and uim-im-switcher.h
	* uim/uim.c
	* qt/quiminputcontextplugin/src/qhelpermanager.cpp
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	* gtk/gtk-im-uim.c
	* xim/main.cpp
	  - Add #include "uim-im-switcher.h"
	
2004-10-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Describe about order of entries
	
	* scm/property.scm
	  - (prop-state-compose-leaf): Add missing 'leaf' tag
	  - (property-prop-activate-handler): Rename to
	    context-prop-activate-handler to indicate correct belongingness of
	    the procedure
	  - (context-prop-activate-handler): Renamed from
	    property-prop-activate-handler
	  - (property-mode-handler): Rename to context-mode-handler to
	    indicate correct belongingness of the procedure
	  - (context-mode-handler): Renamed from property-mode-handler
	  - (prop-list-find-mode-prop): Cosmetic change
	
2004-10-09 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/connection.cpp : Cosmetic changes.
	* xim/locale.cpp : Ditto.
	* xim/xim.h : Fix comment.
	(class XimIC) : Remove changeMode().
	* xim/ximtrans.cpp : Cosmetic changes.
	* xim/ximic.cpp : Ditto.
	(XimIC::changeMode) : Remove.
	(ui_update_ic_stat) : Remove.
	(ui_update_input_mode) : Remove.
	* xim/ximim.cpp : Cosmetic changes.
	* xim/main.cpp : Ditto.
	* xim/ximserver.cpp : Ditto.
	(InputContext::getMode) : Removed.
	(InputContext::setMode) : Removed.
	* xim/canddisp.cpp : Cosmetic changes.
	* xim/convdisp.cpp : Ditto.
	* xim/ximpacket.cpp : Ditto.
	* xim/ximsever.cpp (class InputContext) : Cosmetic changes.
	  Remove unused getMode() and setMode().
	* xim/canddisp.h : Cosmetic changes.
	
2004-10-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - Replace the abstract of 'Property messages' section which had been
	    described incorrectly by my misunderstanding of what 'property'
	    represents. The word 'property' implies that it is owned by
	    something, but I couldn't identify which element is a property,
	    and what owns a property. Now I've found a consistent mapping 'a
	    branch = a property' and 'an input context = an owner'. So I've
	    modified the description in accordance with the mapping. Sorry for
	    my impatient misunderstanding. Please tell me the truth if I'm still
	    misunderstanding.
	  - (prop_list_update): Add an explanation for branch which represents
	    property
	
2004-10-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Add a new entry 'Flag field has been added to prop_list_update message'
	
2004-10-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Move uim_get_default_im_name() from 'New IM-switching related API'
	    into 'New information retrival API'
	  - Update 'New information retrival API'
	  - Update 'New IM-switching related API'
	
2004-10-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* configure.ac
	  - Replace agent.c with COPYING for AC_CONFIG_SRCDIR. Thanks to Jun
	    Inoue
	* Makefile.am
	  - Remove obsolete gabage entries for uim-agent
	
	* scm/Makefile.am
	  - Remove obsolete iso-639-1.scm from SCM_FILES
	
	* scm/property.scm
	  - Was new file appeared in r1427
	
2004-10-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds a preliminary property handling framework. But it
	  is not yet used by current uim implementation, and not yet
	  tested. It is maybe used in 0.4.5 release.
	
	  This framework eliminates all of property related handlings such as
	  im-update-prop-list or im-update-prop-label from each input
	  method. Input method developer can forget about the property feature
	  (and legacy 'mode' feature implicitly handled by this framework)
	  except for register-property, register-im and init-handler.
	
	  Developers, take a look into the code (but do not review, it's
	  completely lacking tests) and tell me your requirements.
	
	* scm/property.scm
	  - Contains property definitions for anthy. It will be moved into
	    anthy.scm later
	  - (record property-definition, record prop-state, record property):
	    New record
	  - (property-new-internal): New alias for define-record'ed
	    property-new
	  - (property-definition-list, property-definition-rec-spec): New
	    variable
	  - (register-property, property-new, property-next-state,
	    property-will-state-transit?, property-transit-state!,
	    property-activate-state!, property-debug-message,
	    prop-state-compose-label, prop-state-compose-branch,
	    prop-state-compose-leaf, property-compose-live-branch,
	    context-init-prop-list, context-propagate-prop-label-update,
	    context-propagate-prop-list-update, context-propagate-prop-state,
	    context-propagate-prop-configuration,
	    property-prop-activate-handler, prop-list-find-mode-prop,
	    property-prop-state-id->mode-value,
	    property-mode-value->prop-state-id, context-update-mode,
	    context-update-mode-list, property-mode-handler): New procedure
	  - (anthy-property-id-list, default-prop_anthy_input_mod,
	    default-prop_anthy_kana_input_method): New variable for anthy.scm
	  - (prop_anthy_input_mode, prop_anthy_kana_input_method): New
	    property definition for anthy.scm
	
	* scm/util.scm
	  - (find): New SRFI procedure. Not yet tested
	
2004-10-08 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximtrans.cpp (Connection::OnRecv) : Handle mRxQ at once to
	  avoid packet mismatch caused by extreme key repeats.
	
2004-10-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/intl.c
	  - (init_intl): Replace bind_textdomain_codeset with
	    bind-textdomain-codeset to conform to lisp culture
	* doc/COMPATIBILITY
	  - Update 'New gettext API for Scheme'
	
2004-10-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/iso-639-1.def
	  - Define "Divehi" as "dv"
	  - Add comments for Flemish, Konkani and Syriac
	
	* doc/COMPATIBILITY
	  - Update 'New i18n-related API for Scheme'
	  - Reorder by close date
	  - Cosmetic change
	
2004-10-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* ChangeLog
	  - Remove as said in [Anthy-dev 1128]
	
2004-10-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* helper/im-switcher-gtk.c
	  - (parse_helper_str_im_list): Apply get_text() to short_desc in
	    accordance with the gettext treatment said in following message
	    http://freedesktop.org/pipermail/uim/2004-October/000653.html
	* scm/im.scm
	  - (uim-get-im-short-desc): Remove ugettext translation
	
2004-10-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-util.c
	  - (struct _locale_language_table): Swap the order of members as said
	    in following message
	    http://freedesktop.org/pipermail/uim/2004-October/000653.html
	  - (NR_LOCALE_LANGUAGE): New macro to define symbolic value of the
	    number of elements in locale_language_table[]
	  - (get_language_name_from_locale): Cosmetic change
	* uim/iso-639-1.def
	  - Swap the order of members in each element
	
2004-10-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit reorganizes uim_get_language_name_from_locale() and
	  related parts. See 'URL' firld of 'New information retrival API'
	  entry in doc/COMPATIBILITY
	
	* doc/COMPATIBILITY
	  - Describe this change into 'New information retrival API'
	  - Reorder by close date
	
	* scm/iso-639-1.scm
	  - Remove to replace with iso-639-1.def
	* scm/i18n.scm
	  - Remove (require "iso-639-1.scm")
	  - (lang-code->lang-name): Replace lang-code retrival using
	    iso-639-1-alist with lang-code->lang-name-raw written in C
	  - (uim-get-language-name-from-locale): Remove
	  - (langgroup-primary-lang-code): New procedure comprise of code
	    fragments of uim-get-language-name-from-locale. This procedure is
	    called from uim_get_language_name_from_locale() to handle
	    "zh_TW:zh_HK" style localeas temporary specification of the
	    function for backward compatibility
	
	* uim/uim-util.c
	  - (uim_get_language_name_from_locale): Remove the alternative
	    implementation using Scheme
	  - (get_language_name_from_locale):
	    * New static function renamed from
	      uim_get_language_name_from_locale()
	    * replace strncmp(s, s, 2) with strcmp to properly translate zh
	      locales such as "zh_CN"
	  - (uim_get_language_name_from_locale): Add "zh_TW:zh_HK" style
	    locale handling
	  - (lang_code_to_lang_name_raw): New function
	  - (uim_init_util_subrs): Add initialization of
	    lang-code->lang-name-raw
	* uim/iso-639-1.def
	  - Add copyright header
	  - Add a comment about original specification information
	
2004-10-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/im-switcher-gtk.c:
	 - (create_switcher): Pack button box into right side.
	 - (create_switcher): GTK_STOCK_APPLY changed to GTK_STOCK_OK.
	
2004-10-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* sumika/gtk2/Makefile.am:
	 - Don't install sumika by default.
	
2004-10-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim-helper-client.c:
	 - (uim_helper_get_message): Added explicit (void) to the function definition.
	
2004-10-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/agent.c:
	  - Moved from top_srcdir.
	
2004-10-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (register-im, retrieve-im, find-im-for-locale): Optimize out
	    redundant im-name of each IM in im-list
	
2004-10-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Note almost Scheme API changes between 0.4.3 and 0.4.4 without
	    detailed description. The desctiption should also be described
	    before 0.4.4 release, if possible
	  - Add a new entry 'New i18n-related API for Scheme'
	  - Add a new entry 'short-desc argument has been added to register-im'
	  - Add a new entry 'New gettext API for Scheme'
	  - Add a new entry 'Additional romaji-kana conversion table has been added'
	  - Add a new entry 'New IM selection API for Scheme'
	  - Add a new entry 'New helper protocol messages for IM management'
	
2004-10-05 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (UTF8_Locale::compose_localename_from_lang) :
	  Handle zh_TW:zh_HK.
	* xim/convdisp.cpp (choose_default_fontset) : Ditto.
	* xim/main.cpp (init_supported_locales) : Ditto.  These hack for
	  locale handling in uim-xim should be rewritten after 0.4.4.
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Note all C API changes between 0.4.3 and 0.4.4 without detailed
	    description. The desctiption and Scheme API changes should also be
	    described before 0.4.4 release
	  - Add a new entry 'Format extension of language attribute of IM'
	  - Add a new entry 'Deprecation of preliminary uim-scm API'
	  - Add a new entry 'Fix a typo of an API function name'
	  - Add a new entry 'New IM-switching related API'
	  - Add a new entry 'New information retrival API'
	  - Add a new entry 'New surrounding text API'
	
	* README
	  - Fix 'International Phonetic Association' with 'International
	    Phonetic Alphabet'
	
2004-10-05 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/uim-helper-client.c (uim_helper_get_message) : Fix to terminate
	  at proper place.
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* ChangeLog
	  - Update
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - Define charset and str
	  - Remove unused iso639_lang_code definition
	  - Cosmetic changes
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-slib.scm
	  - New file
	  - Merged from test-macro.scm and test-ext.scm
	  - (test case): Replace 'uim' with 'uim-bool' to suppress the error
	    due to bug #617
	* test/test-macro.scm
	  - Merge into test-slib.scm
	* test/test-ext.scm
	  - Ditto
	
	* test/test-uim.scm
	  - Remove. Equivalent test is already included in test-util.scm
	
2004-10-05 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/im-switcher-gtk.c : Remove unncecessary "\n" for
	  uim_helper_send_message().
	* uim/uim-helper-client.c (uim_helper_get_message) : malloc with i+2
	  is sufficient.  Terminate buffer properly.
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/prime.scm
	  - (prime-command-register-conv-input): Replace obsolete
	    prime-proc-input-no-preedit with prime-push-key to fix crashing on
	    word-register mode by the patch posted in [Anthy-dev 1031] by
	    Masaki Yatsu. Thanks.
	
2004-10-05 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (init_modifier_keys) : Free strage allocated by
	  XGetModifierMapping() and XGetKeyboardMapping().
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit make uim "zh_TW:zh_HK:en:de:fr" style colon-separated
	  language acceptable. It may affect bridge implementations. Please
	  check.
	
	* uim/uim.c
	  - (uim_init_scm): Load default-im.scm after loader.scm to ensure
	    lowest preference
	* scm/im.scm
	  - Move (require "default-im.scm") into uim.c
	  - (find-im-for-locale):
	    * Accept language group expression using langgroup-covers?
	    * Remove fallback 'default' IM since the IM matches with any
	      languages by langgroup-covers?
	* test/test-im.scm
	  - (test find-im-for-locale):
	    * Replace IM for "zh" locale with m17n-zh-py in accordance with
	      the change of lang of pinyin-big5
	    * Passed all zh locale tests
	
	* scm/i18n.scm
	  - (langgroup-covers?): New predicate. Wildcard expression is
	    temporalily defined as "*", and "" is kept as 'matches nothing'
	    for ipa IM
	  - (lang-code->lang-name): Change default value "" to "-"
	  - (uim-get-language-name-from-locale): Accepts "zh_TW:zh_HK" format
	    and returns first language
	* test/test-i18n.scm
	  - (test langgroup-covers?): New test
	
	* scm/default-im.scm
	  - Replace the language "en" on register-im with "*"
	* scm/pyload.scm
	  - Replace the language "zh" on generic-register-im with "zh_TW:zh_HK"
	
2004-10-05 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp : Fix silly typo for sizeof(char).
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (find-default-im): Remove uim-default-im-engine in accordance with
	    [Anthy-dev 1108, 1115]
	* xim/main.cpp
	  - (main): Replace uim-default-im-engine in a comment with
	    default-im-name in accordance with the discontinuance of it
	
2004-10-05 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - Validated by test-im.scm except for zh_TW and zh_HK related issues
	  - (current-im): Remove as obsolete
	  - (register-im):
	    * Avoid duplicate register properly
	    * Remove current-im handling ramained as comment
	  - (find-im-for-locale): Fallback to 'default to provide IM for any
	    locale
	  - (find-default-im): Remove fallback current-im since
	    find-im-for-locale which fallbacks to 'default precedes current-im
	  - (find-im): Rename the arg 'lang' to 'localestr' in accordance with
	    locale string capability
	* test/test-im.scm
	  - (test im-record accessors): Remove because define-record ensures
	    proper accessor definition
	  - (test register-im):
	    * Remove current-im related tests
	    * Add duplicate register test
	  - (test retrieve-im): New test
	  - (test default-im-for-debug): New test
	  - (test find-im-for-locale):
	    * New test
	    * Currently fails for pinyin-big5 selection for zh_TW and
	      zh_HK. Implementation will be modified to conform to the test
	      result
	  - (test find-default-im): New test
	  - (test find-im):
	    * Remove current-im related tests
	    * Revised for new implementation involving find-im-for-locale
	  - (testcase im context management): Revise setup proc in accordance
	    with new im.scm implementation
	  - (test set-context-data!): Remove
	  - (test add-context (add as new id)): Remove
	  - (test add-context (duplicate id)): Remove
	  - (test register-context (add as new id)): New test. Revised from
	    test add-context
	  - (test register-context (duplicate id)): New test. Revised from
	    test add-context
	
	* uim/uim-func.c
	  - (im_register_im):
	    * Fix memory leak of short_desc
	    * Eliminate redundant string duplications
	
	* uim/uim.c
	  - (uim_switch_im): Add a comment related to the commit log of
	    r1400. I think that we should not add the API
	    uim_destroy_context()
	
2004-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim.c:
	 - (uim_switch_im): Call reset_context before creating new context. 
	   IMO we need a new api uim_destroy_context.
	
2004-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim-helper.c:
	 - (uim_helper_fd): Unmarked as static function.
	 
	* uim/uim-helper-client.c:
	 - (uim_helper_read_proc): Read all readable messages at once function call.
	
	
2004-10-04 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/context.h
	  - #include "gettext.h" to call gettext functions properly from
	    UIM_EVAL_STRING macros
	
	* uim/intl.c
	  - #include <locale.h> for setlocale(). The inclusion position among
	    gettext.h is appropriate
	
	* test/test-i18n.scm
	  - Add reivsion information of successfully tested
	
2004-10-04 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp : Add #include <locale.h> for setlocale(3).
	* xim/convdisp.cpp : Ditto.
	
2004-10-04 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/i18n.scm
	  - Validated by test-i18n.scm
	  - (locale-new):
	    * Fix invalid initialization from LC_ALL or LANG when it is
	      configured as "C" or "POSIX"
	    * Reject invalid locale strings such as "de_.UTF-8". See
	      test-i18n.scm to view various patterns
	  - (locale-str): Fix a typo over a variable name which crashes the
	    execution in the case returning only lang-territory part
	  - (locale-set-lang!, locale-set-territory!,
	    locale-lang-territory-str): Reorder swappable argument as popular
	    order
	* test/test-i18n.scm
	  - New file
	  - (testcase i18n locale): New testcase
	  - (test locale-new, locale-new native environment, locale-set-lang!,
	    locale-set-territory!, locale-lang-territory-str, locale-str,
	    locale-zh-awared-lang): New test
	  - (testcase i18n ISO 639-1 language code #1): New testcase
	  - (test lang-code->lang-name in en locale): New test
	  - (testcase i18n ISO 639-1 language code #2): New testcase
	  - (test lang-code->lang-name in ja_JP locale):
	    * New test
	    * Currently disabled due to strange execution error
	
	* uim/uim-util.c
	  - (c_setenv, c_unsetenv): New function
	  - (uim_init_util_subrs): Add setenv and unsetenv as new procedures
	* test/test-uim-util.scm
	  - (test setenv, test unsetenv): New test
	
	* scm/im.scm
	  - (find-im-for-locale):
	    * Rename a local variable
	    * Remove redundant logic
	
	* uim/Makefile.am
	  - Move '-D' definitions in libuim_la_CFLAGS to libuim_la_CPPFLAGS
	  - Add -DDEBUG to libuim_la_CPPFLAGS
	
2004-10-04 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp : Fix taipeifont entry for zh_TW fontset.
	
2004-10-04 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* doc/HELPER-CANDWIN : Fix typo.  Add description about message
	  format for sending.
	
2004-10-04 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* helper/im-switcher-gtk.c
	  - (parse_helper_str_im_list): Revert the change committed in r1392
	    since it should not be performed yet
	
2004-10-04 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (uim-get-im-short-desc): Returen "-" rather than "" if invalid
	    string has been gotten
	
	* helper/im-switcher-gtk.c
	  - (parse_helper_str_im_list): Disable get_text() since the string
	    has already been gettext'ed
	
2004-10-04 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit Adds i18n-ized short-desc feature
	
	* scm/im.scm
	  - (record im): Add a new member short-desc to allow time-by-time
	    gettext translation
	  - (register-im): Add short-desc arg to im-new
	  - (uim-get-im-short-desc): New procedure to get gettext'ed
	    short-desc from C
	
	* uim/uim.c
	  - (uim_get_im_short_desc): Add short-desc update which performs
	    gettext based on current locale and current client encoding
	  - (uim_switch_im): Add short_desc handling. But it is currently
	    disabled by #if 0 since I don't know when uc->short_desc is used
	
2004-10-04 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/Makefile.am : Add @LIBINTL@ for libuim_la_LIBADD.
	
2004-10-03 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-scm.h
	  - Add a comment that cautions the defective API
	
2004-10-03 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (PeLineWin::draw_segment) : Draw underline when
	  PE_UNDERLINE is on with root-style preedit window.
	
2004-10-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/im-switcher-gtk.c:
	 - (create_switcher_treeview): Added radio buttons.
	 - (change_input_method): New function.
	 - (sort_by_language_name): Removed.
	 - (sort_by_input_method_name): Removed.
	 - (change_this_text_area_only): Removed.
	 - (change_whole_desktop): Removed.
	 - (change_this_application_only): Removed.
	
2004-10-02 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (class ConvdispOv) : Add private variable
	  m_lang_changed for fontset selection hack.
	
2004-10-02 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/skk-dic.c
	 - add comments on each structure
	 - (find_border) avoid possibility of infinite loop.
	
2004-10-02 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* doc/XIM-SERVER : Update description about default im selection.
	* xim/ximpn.h : Translate some Japanese comments into English.
	* xim/xim.h : Ditto.
	* xim/ximtrans.cpp : Ditto.
	* xim/ximic.cpp : Ditto.
	* xim/ximim.cpp : Ditto.
	* xim/convdisp.cpp : Ditto.
	* xim/convdisp.h : Ditto.
	* xim/ximserver.cpp : Ditto.  Remove unused init_converter() and
	  global_finalize().
	* xim/canddisp.cpp : Update comment.
	* xim/locale.cpp : Add comment.
	* xim/main.cpp : Use uim_default_im_name() for default IM
	  selection.  Do init_convdisp() earlier.
	
2004-10-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-helper-client.c
	  - (BUFFER_SIZE): Increase to 64KB from 2KB to receive large message
	
	* scm/m17nlib.scm
	  - (m17nlib-register): Replace short-desc with proper one
	
2004-10-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/loader.scm
	  - Separate CKV languages from 'other languages'
	
	* scm/iso-639-1.scm
	  - Remove (require "i18n.scm") in accordance with the procedure
	    relocation
	  - (lang-code->lang-name, uim-get-language-name-from-locale): Move to
	    i18n.scm
	* scm/i18n.scm
	  - Add (require "iso-639-1.scm") in accordance with the procedure
	    relocation
	  - (lang-code->lang-name, uim-get-language-name-from-locale): Move
	    from iso-639-1.scm
	* scm/im.scm
	  - Remove (require "iso-639-1.scm") in accordance with the procedure
	    relocation
	
2004-10-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-util.c
	  - (uim_get_language_name_from_locale): Add NULL check for argument
	    to Scheme version of the function
	
2004-10-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (find-im-for-locale): Reflect preference-order for each language
	    by using load order
	
	* scm/loader.scm
	  - Reorder Japanese IMs to make ordinary IM (such as Anthy) be
	    selected as default
	
2004-10-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/slib.c
	  - (init_dbg): Rename the feature 'debugging to 'debug
	
	* scm/im.scm
	  - (debugging-default-im): Rename the strange name to default-im-for-debug
	  - (default-im-for-debug):
	    * Renamed from debugging-default-im
	    * Replace (feature? 'debugging) with (feature? 'debug)
	      inaccordance with the renaming about the feature
	  - (find-default-im): Follow the renaming of find-default-im
	
2004-10-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (current-im): Fix invalid default value. current-im must points to
	    im, not a im-name
	
2004-10-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit modifies an API function suggested in following message
	  http://freedesktop.org/pipermail/uim/2004-September/000646.html
	
	* uim/context.h
	  - (struct uim_im): Reorder members in accordance with the argument
	    reorder about short-desc
	  - (struct uim_context_): Fix a typo
	* uim/uim-func.c
	  - (im_register_im): Swap argument order 's_desc, enc' to 'enc,
	    s_desc' as I suggested in
	* scm/im.scm
	  - (register-im): Swap argument order 'short-desc encoding' to
	    'encoding short-desc' as I suggested in
	
	* scm/tutcode.scm
	* scm/prime.scm
	* scm/spellcheck.scm
	* scm/canna.scm
	* scm/anthy.scm
	* scm/skk.scm
	  - Follow the specification change of register-im
	  - Surround the short-desc by N_ as (N_ "short-desc") to prepare
	    message translation
	
	* scm/m17nlib.scm
	  - Follow the specification change of register-im
	  - Add a new short-desc as comment. It is not used for now due to the
	    bug #1502
	
	* scm/default-im.scm
	  - Follow the specification change of register-im
	  - Modify the short-desc  
	  - Surround the short-desc by N_ as (N_ "short-desc") to prepare
	    message translation
	
	* scm/generic.scm
	  - (generic-register-im): Follow the specification change of
	    register-im
	
	* scm/tcode.scm
	* scm/ipa.scm
	* scm/viqr.scm
	* scm/pyload.scm
	  - Follow the specification change of generic-register-im
	  - Surround the short-desc by N_ as (N_ "short-desc") to prepare
	    message translation
	
	* scm/hangul.scm
	  - (hangul-register-im): Follow the specification change of
	    register-im
	  - Follow the specification change of hangul-register-im
	  - Follow the specification change of generic-register-im
	  - Surround the short-desc by N_ as (N_ "short-desc") to prepare
	    message translation
	
2004-10-01 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/candwin
	  - make candwin understand display_limit message
	  - code clean up
	
2004-10-01 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp (main) : Again, do init_convdisp() here.
	* xim/convdisp.cpp (init_convdisp) : Do setlocale() for every CJK
	  fontset.  Set default CJK fontset with size 16 available from
	  /usr/X11R6/lib/X11/fonts/misc.
	(create_convdisp) : Move init_convdisp() to main from here.
	(PeLineWin::draw_segment) : Adjust to font size 16.
	
2004-09-30 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit renames an API function suggested in following message
	  http://freedesktop.org/pipermail/uim/2004-September/000646.html
	
	* uim/uim.h
	  - (uim_change_input_method_engine): Rename to uim_switch_im
	  - (uim_switch_im):
	    * Renamed from uim_change_input_method_engine
	    * Modify the function description
	* uim/uim.c
	  - (uim_change_input_method_engine): Rename to uim_switch_im
	  - (uim_switch_im): Renamed from uim_change_input_method_engine
	
	* gtk/gtk-im-uim.c
	  - (im_uim_parse_helper_str_im_change): Replace
	    uim_change_input_method_engine() with uim_switch_im()
	
	* qt/quiminputcontextplugin/src/qhelpermanager.cpp
	  - (parseHelperStrImChange): Ditto
	
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	  - (parseHelperStrImChange): Ditto
	
2004-09-30 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit fixes default IM selection algorithm in accordance with
	  [Anthy-dev 1104]
	
	* scm/i18n.scm
	  - (locale-new):
	    * Accept #f, "C" and "POSIX" as "en" locale. This resolved some
	      initialization problem
	    * Accept "" as native locale as like as performed in
	      setlocale(). It attempt to retrieve the locale information from
	      LC_ALL and LANG environment variable. If failed to retrieve the
	      information from the two variable, it defaults to "en". It does
	      not attempt to retrieve from particular locale category such as
	      LC_CTYPE or LC_MESSAGES since appropriate category for input
	      method does not exist
	
	* scm/default-im.scm
	  - Change 'lang' information for register-im to "en" from "*" to be
	    selected against "en" locales on the default IM selection process.
	    Although it should ideally be matched against several locales as
	    "en:fr:de" or "*", current implementation does not accept such
	    expressions. We should revise it later
	
	* scm/im.scm
	  - (current-im):
	    * Replace default value #f with 'default
	    * Mark as 'may be deprecated'
	  - (register-im): Comment out update of current-im. This makes
	    current-im permanently points to 'default IM
	
2004-09-30 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (find-default-im): Add symbol-bound? check for
	    uim-default-im-engine to avoid craching when the variable is not
	    defined
	
2004-09-30 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (find-default-im): Fix a typo over sexp
	
2004-09-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* japanese.scm:
	 - (ja-rk-rule): Splitted into two parts. ja-rk-rule-basic and 
	    ja-rk-rule-additional.
	
2004-09-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* xim/convdisp.cpp:
	 - (ConvdispOs::move_candwin): Added a comment.
	
2004-09-30 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit enables proper gettext handling within Scheme world,
	  adds locale object for Scheme, and adds an alternative
	  implementation of uim_get_language_name_from_locale() written in
	  Scheme
	
	* Although the codes for Scheme gettext is sufficient, automatic
	  update of po files involving scm files are not yet provided
	
	* configure.ac
	  - Fix localedir definition by replacing "${prefix}/share/locale"
	    with "${datadir}/locale"
	  - Define LOCALEDIR to properly expand ${datadir}. We should use more
	    safe macro such as AC_EXPAND_DIR later
	  - Add a comment about [ $prefix = NONE ] handling. I can't imagine
	    when prefix does not exist
	
	* uim/context.h
	  - #include "config.h" to know whther ENABLE_NLS is defined or not
	  - (uim_last_client_encoding): New decalaration for an
	    library-private variable
	  - Add a comment about why we don't use variadic macro
	    (i.e. __VA_ARGS__)
	  - (UIM_PREPARE_SAVING_TEXTDOMAIN_CODESET,
	    UIM_SWITCH_TEXTDOMAIN_CODESET, UIM_RESTORE_TEXTDOMAIN_CODESET):
	    New macros for gettext handling within UIM_EVAL_STRING macros
	  - (UIM_EVAL_STRING_INTERNAL): New macro to simplify UIM_EVAL_STRING
	    macros
	  - (UIM_EVAL_STRING, UIM_EVAL_FSTRING1, UIM_EVAL_FSTRING2,
	    UIM_EVAL_FSTRING3, UIM_EVAL_FSTRING4, UIM_EVAL_FSTRING5):
	    * Simplify using UIM_EVAL_STRING_INTERNAL()
	    * Add gettext handling
	
	* uim/uim.c
	  - (uim_last_client_encoding): New library-private variable
	  - (uim_create_context): Add client encoding saving for
	    bind_textdomain_codeset(). The value is used when
	    UIM_EVAL_STRING() is called without uim_context. The specification
	    assumes client always uses consistent encoding
	  - (uim_get_default_im_name): Replace the sexp template
	    "(find-default-im-name)" with "(uim-get-default-im-name)" in
	    accordance with the renaming
	  - (uim_init): Add initialization for uim_last_client_encoding
	  - (uim_quit): Add cleanup for uim_last_client_encoding
	
	* uim/uim-util.c
	  - (uim_scm_load_file): Simplify using UIM_EVAL_FSTRING1()
	  - (struct _locale_language_table, locale_language_table):
	    Temporalily comment out by #if 0
	  - (uim_get_language_name_from_locale):
	    * Temporalily replace interenal implementation with extended
	      alternative one written by Scheme
	    * It returns gettext'ed string converted for client encoding of
	      libuim rather than system locale encoding. For example, it
	      properly returns UTF-8 string for GTK+ environment even if
	      system locale is using different encoding such as EUC-JP
	    * We should implement such functionalities by Scheme to acquire
	      flexibility. In this case, we can also perform langcode ->
	      langname translation in Scheme world by the alternative
	      implementation. The replacement is performed temporalily by #if 0.
	    * I should know whether other requirement that requires C version
	      of implementation. In addition, the alternative implementation
	      requires API change (remove const from return value). Currently
	      it has a memory leak problem due to the API
	
	* uim/intl.c
	  - (intl_gettext_package): New function. It returns GETTEXT_PACKAGE
	    as a Scheme procedure gettext-package
	  - (intl_init_locale):
	    * Replace locale configuration involving environment variable with
	      simple setlocale(LC_ALL, ""). I believe that is's sufficient
	    * Configure gettext environment properly using compile-time
	      information. It has gotten ready to gettext
	  - (init_intl):
	    * Add definition of gettext-package
	    * Provide 'nls if ENABLE_NLS is defined
	
	* uim/slib.c
	  - (lreadr): Remove non-standard _"str" style syntax handling for
	    i18n. We use the form (_ "str") to represent gettext string to be
	    compatible with other lisp implementations
	
	* scm/Makefile.am
	  - Add i18n.scm and iso-639-1.scm to SCM_FILES
	
	* scm/im.scm
	  - Describe an abstract of this file as comment
	  - Additionaly require i18n.scm and iso-639-1.scm
	  - (locale-lang): Remove to replace with new locale handling
	    procedures defined in i18n.scm
	  - (find-im-for-locale): Make zh locales handling proper
	  - (find-default-im): Rename the arg to distinguish locale string and
	    locale object
	  - (find-default-im-name): Rename to uim-get-default-im-name to
	    indicate tight relationship with uim_get_default_im_name()
	  - (uim-get-default-im-name):
	    * Renamed from find-default-im-name
	    * Rename the arg to distinguish locale string and locale object
	
	* scm/i18n.scm
	  - New file for i18n functions
	  - (ugettext): New procedure. Convenience shorthand of runtime
	    translation
	  - (_): New procedure. It is an alias of ugettext, and also used as
	    the keyword for xgettext
	  - (N_): New procedure. It is only used as the keyword for xgettext
	  - (record locale): New record
	  - (locale-new-internal, locale-set-lang-internal!,
	    locale-set-territory-internal!): New aliases to preserve original
	    definitions defined by define-record
	  - (locale-new): New procedure. It accepts
	    language[_territory][.codeset] style locale string as argument
	  - (locale-set-lang!, locale-set-territory!): New procedures. They
	    adds a validation to original one defined by define-record
	  - (locale-lang-territory-str): New procedure. It returns
	    "language_territory" or "language" style string from locale object
	    in accordance with existence of 'territory' attribute
	  - (locale-str): New procedure. It returns
	    "language_territory.codeset" or locale-lang-territory-str style
	    string from locale object in accordance with existence of
	    'territory' and codeset attribute
	  - (locale-zh-awared-lang): New procedure. It returns language part
	    of locale object, but returns locale-lang-territory-str for zh
	    locale
	
	* scm/iso-639-1.scm
	  - New file for definition about ISO 639-1 language codes
	  - (iso-639-1-alist): New variable. This defines the translation
	    table with gettext keyword
	  - (lang-code->lang-name): New procedure. It translates the
	    two-letter language code into a human readable language name with
	    gettext translation
	  - (uim-get-language-name-from-locale): New procedure. It called from
	    uim_get_language_name_from_locale() as its actual implementation
	
2004-09-30 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/toolbar-common-gtk.c (button_destroy) : Use
	  gtk_widget_destroy instead of gtk_container_remove to remove
	  reference count of object.
	(uim_applet_fd_read_cb) : Use free instead of g_free.
	
2004-09-30 kzk <mover@hct.zaq.ne.jp>
	
	* Until this commit, all known bug of qtkde-helper
	  is fixed. It's ready to use I think. After testing
	  at my machine in a few days and it doesn't cause
	  aproblem, I'll release qtkde-helper.
	
	* candwin/uim-helper-candwin-qt.cpp
	  - handle utf-8 string properly
	  - handle candidate string properly
	  - fix the position to move
	  - fix wrong message reading
	  - remove unnecessary debug message
	
	* toolbar/uim-helper-toolbar-qt.cpp
	  - move to the proper position at startup
	    (not proper way)
	
	
2004-09-30 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - (checkHelperConnection): new function
	  - call uim_helper_client_get_prop_list() once widget
	    is created. This aims to avoid display "?" when
	    toolbar starts.
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.h
	  - (checkHelperConnection): new function
	  - declare following functions as protected
	    (parseHelperStr,propListUpdate,propLabelUpdate)
	
	* qt/qtkde-helper/src/applet/uimhelperapplet.cpp
	  - kill warning
	
	
2004-09-29 Masahito Omote <omote@utyuuzin.net>
	
	* uimcontainer.c, uimcontainer.h: Change UI interface.
	  - (uim_config_container_new): Use GtkTreeView lists for selecting
	    instead of tabs.
	  - (cb_treeview_cursor_changed): New callback when item is selected.
	
2004-09-29 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm : Recover the wrong behavior of index-hander with recent
	  scm changes.
	
2004-09-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-intl.scm
	  - Add (use file.util) to avoid environment dependent error
	  - (testcase intl): Add LC_ALL and implicit C locale handling to
	     avoid environment dependent error
	
2004-09-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds a test suite for intl.c. The patch has been
	  contributed by Kouhei Sutou by following message. Thank you for
	  cooperation.
	  http://lists.sourceforge.jp/mailman/archives/anthy-dev/2004-September/001088.html
	
	* test/test-intl.scm
	  - New file
	
2004-09-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (find-default-im): Complement a lacking close paren that enbuged
	    in r1359
	
2004-09-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/im.scm
	  - (find-default-im): Add existence check for uim-default-im-engine
	     to avoid startup error
	
2004-09-29 kzk <mover@hct.zaq.ne.jp>
	
	* helper/im-switcher-gtk.c
	  - enable sorting by clicking column header
	
2004-09-29 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (InputContext::focusIn) : Do setlocale() here
	  since different context may have im with different language.
	* xim/convdisp.cpp (gFontset_ja) : Revert Japanese default font
	  for the sake of safely.
	
2004-09-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/00INDEX
	  - Add 'COMPATIBILITY' as an entry
	
2004-09-29 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp : Change default fontset size as 16.
	
2004-09-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/toolbar-common-gtk.c
	 - (button_size_group): New global variable
	 - (helper_applet_prop_list_update): Use size group to synchronize
	   the size of buttons.
	
2004-09-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/ipa.scm: Fix short-desc as 'International Phonetic
	  Alphabet'. 'International Phonetic Association' is the organization
	  which provides the 'International Phonetic Alphabet' standard. Our
	  'IPA' means 'Alphabet'.
	
2004-09-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* configure.ac: Disable Sumika by default. It should not be installed
	  by default yet.
	
2004-09-28 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	  - update label related part
	
2004-09-28 kzk <mover@hct.zaq.ne.jp>
	
	* helper/im-switcher-gtk.c
	  - first argument type of gtk_box_set_spacing is
	    (GtkBox*)
	
2004-09-28 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/qhelpermanager.cpp
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	  - (sendImList): Handle utf8 string properly
	  - (update_prop_list_cb): Ditto
	  - (update_prop_label_cb): Ditto
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim.c
	  - (uim_get_default_im_name): Replace the implementation with
	    equivalent one written in Scheme. Such complex and ad-hoc handling
	    should be written in Scheme to acquire flexibility. 'Written in
	    Scheme' is a most important value of the uim.
	
	* uim/context.h
	  - (UIM_EVAL_STRING): New macro
	  - (UIM_EVAL_FSTRING1, UIM_EVAL_FSTRING2, UIM_EVAL_FSTRING3,
	    UIM_EVAL_FSTRING4, UIM_EVAL_FSTRING5): Make the argument uc
	    NULL-ready. repl_c_string() will be called instead of
	    uim_eval_string() when NULL is passed as uc. i.e. Can be called
	    without uim_context
	
	* scm/im.scm
	  - (create-context): Fix 'discard old context without invoking
	    release-handler' problem
	  - (retrieve-im): New procedure. Generalized from the local procedure
	    of find-im
	  - (debugging-default-im): New procedure. Performs getting default-im
	    from the environment variable for debugging purpose
	    "UIM_IM_ENGINE". It is performed only when compiled with
	    --enable-debug
	  - (find-default-im): New procedure. This procedure attempts
	    retrieving 'default IM' by several methods including evaluation
	    of Scheme variables default-im-name and uim-default-im-engine.
	    preexisting default-im-name should used instead of
	    uim-default-im-engine
	  - (locale-lang): New procedure. Extracts language part of locale
	  - (find-im-for-locale): lookup an arbitrary IM for specified
	    locale. Per-language special IM selection handling should be
	    written in here
	  - (find-default-im-name): New procedure. Written to be called by
	    uim_get_default_im_name()
	  - (find-im): Simplify and extend using new procedures. 'lang' is
	    now also used to find most suitable IM
	
2004-09-28 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/toolbar-common-gtk.c : Oops, cast GTK_BUTTON to GTK_WINDOW was 
	  invalid.  Revert it, but comment out using gtk_widget_size_request.
	
2004-09-28 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp :  Enable default im selection with
	  "uim-default-im-engine" in ~/.uim.
	* doc/XIM-SERVER : Update document for refrecting above change.
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-util.c
	  - (c_getenv): Fix SEGV on getting undefined environment
	    variable. Tested by test-uim-util.scm
	* test/test-uim-util.scm
	  - (test getenv): Add a test for non-existing environment variable
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/slib.c
	  - (provide): Add prototype declaration
	  - (init_dbg): Provide 'debugging
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/slib.c
	  - (featurep, provide): Fix broken variable evaluation. Corresponding
	    Scheme procedures 'feature?' and 'provide' has been able to be
	    used
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim.c
	  - (uim_change_input_method_engine):
	    * Fix invalid Scheme expression '#f (quoted #f). It was intended
	      to consist of quoted langname, but currently not used. So I
	      directly embed "#f" into the template string
	    * Add a comment about function renaming. I'll suggest this to the
	      mailinglist once im-switcher related implementation has been
	      refactored
	
2004-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/skk-dic.c:
	 - (do_search): Reverted to r1339, because that expression has no
	    problem. (Because min and max indicate offset from the base
	    dictionary address.)
		 
	
2004-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/skk-dic.c:
	 - (do_search): Fixed (min+max)/2 to min +(max-min)/2, because the 
	    former expression has tacit possibility of interger overflow.
	
2004-09-28 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/uim.c (uim_change_input_method_engine) : Plug leak.
	
2004-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim.c:
	 - (uim_check_im_exist): Replaced strstr with strcmp. I cannot
	   understand why I used strstr before.
	
2004-09-28 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/toolbar-common-gtk.c : One more removal of '*' from
	  gpointer...
	
2004-09-28 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	 * helper/toolbar-common-gtk.c : More removal of '*' from gpointer
	 argumetns.
	
2004-09-28 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/Makefile.am : Use install-exec-hook instead of
	  install-exec-local to make sure install-exec-hook-applet is
	  performed after install-libexecPROGRAMS.  Use DESTDIR for
	  install-exec-hook-applet.
	
	* helper/toolbar-common-gtk.c : Don't use fixed sized buttons,
	  as reported on [anthy-dev 1070].  Confirm behavior of the gnome
	  applet with middle and right click of im-switcher button.
	  Remove '*' from gpointer in some arguments.
	
	* sumika/Makefile.am : Don't compile sumika when configured with
	  --disable-sumika.
	* sumika/include/Makefile.am : Ditto.
	* sumika/gtk/Makefile.am : Ditto.
	* sumika/common/Makefile.am : Ditto.
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim.c
	  - (uim_check_im_exist):
	    * Make this unexposed function static
	    * Reform coding style to ordinary one
	    * Add a comment about specification. Why use strstr() rather than
	      strcmp()? In this implementation, "skk" will match against
	      another IM such as "skk-extreme".
	  - (uim_get_default_im_name):
	    * Fix inappropriate constness handling
	    * Make meaning of the code clear with a renaming of bad variable
	      name 'tmp'
	    * Reform coding style to ordinary one
	
	* uim/uim-util.c
	  - (uim_custom_value_as_symbol, uim_custom_ctype): Make failsafe
	  - (struct _locale_language_table): Remove useless and invalid
	    storage class specifier 'static'
	
	* uim/uim-func.c
	  - (uim_iconv_code_conv): Fix inappropriate constness handling
	
	* uim/uim-helper.c
	  - (uim_helper_fd_readable): Ignore this unused function at compile
	    time
	
	* uim/uim-helper-server.c
	  - (uim_helper_server_process_connection): Make this unexposed
	    function static
	
	* uim/uim-helper-client.c
	  - (get_server_command): Make this unexposed function static
	
	* uim/slib.c
	  - (dbg_curpos): Ignore this unused function declaration at compile
	    time
	
2004-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/toolbar-common-gtk.c:
	 -(hbox_hierarchy_changed):Marked as static.
	 - Added some function prototypes.
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - Generalize a definition as 'charset_specifier'
	  - Modify a description about the meaning of 'property' in computer
	    programming domain
	  - (prop_label_update): Describe a design decision of Hiroyuki
	    Tokunaga who said in 2004-06-16 in his diary
	  - (im_list):
	    * Describe well
	    * Fix wrong definition about imlang. It's not a ISO 639 language
	      code
	  - (im_list_get, im_change_this_text_area_only,
	    im_change_this_application_only, im_change_whole_desktop):
	    Describe well
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* helper/im-switcher-gtk.c
	  - (sort_by_language_name, sort_by_input_method_name): Fix a typo
	  - (send_message_im_change): Replace meaningless variable name 'tmp'
	    with 'msg'
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* gtk/gtk-im-uim.c
	  - Add #include <uim/uim-util.h>
	  - (im_uim_send_im_list):
	    * Fix C++ style variable declaration enbuged in r1329
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* gtk/gtk-im-uim.c
	  - (im_uim_send_im_list):
	    * Fix a possible memory leak
	    * Replace meaningless variable name 'tmp' with 'msg'
	    * Modify a comment to express original intention well
	    * Reform coding style
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Add a new entry 'Replace IM-specific context object definition by
	    define-record'
	  - Add some information to the entry 'Context object integration'
	  - Add new fields 'Updates' and 'Version'
	  - Rename a field name 'Changed' with 'Changes'
	  - Swap field order
	  - Modify some English expressions
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-util.h
	  - Add #ifndef _uim_util_h_included_
	
2004-09-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit declines C++ style pointer notation such as 'char*' or
	  'void*'. They have been replaced with traditional 'char *' or
	  'void *'. Even if it does not cause compile error, I think that such
	  coding style is a bad habit that leads a human error due to
	  misinterpretation about type declaration.
	
	  For example, a declaration 'char* a, b, c;' may sometimes be
	  interpreted as 'char* a; char* b; char* c;' by less-experienced
	  C/C++ programmers. But it of course results 'char* a; char b; char c;'.
	
	  So we should write pointers as 'char *' style. 'char *a, b, c;' will
	  not cause such misinterpretation. We should remind that the uim
	  library will be used by wide-range of programmers. We should
	  eliminate any source of human errors.
	
	  Since I don't know the coding style of GTK+ well, gtk-related codes
	  have been left untouched about such pointer notations. We should
	  also rewrite them if no recommendation about C++ style pointer
	  notation exists for GTK+.
	
	* uim/uim.h
	  - (uim_get_default_im_name, uim_ipc_send_command): Decline C++ style
	    pointer notation
	* uim/uim.c
	  - (uim_check_im_exist, uim_get_default_im_name): Ditto
	* uim/uim-ipc.c
	  - (uim_ipc_send_command): Ditto
	* uim/uim-util.h
	  - (uim_get_language_name_from_locale): Ditto
	* uim/uim-util.c
	  - (eucjp_string_to_list, uim_get_language_name_from_locale): Ditto
	* uim/uim-helper.c
	  - (uim_helper_get_pathname): Ditto
	* uim/uim-helper-client.c
	  - (get_server_command): Ditto
	* uim/uim-helper-server.c
	  - (proc_func): Ditto
	* uim/uim-table.c
	  - (find_line_head, find_next_linefeed, cut_off_line_from_table):
	    Ditto
	* uim/m17nlib.c
	  - (register_callbacks, get_left_of_cursor, get_right_of_cursor,
	    get_left_of_candidate, get_selected_candidate,
	    get_right_of_candidate, m17nlib_utf8_find_next_char): Ditto
	* uim/anthy.c
	  - (get_anthy_api): Ditto
	* uim/canna.c
	  - (struct canna_api): Ditto
	* uim/slib.c
	  - (lprin1g): Ditto
	* fep/callbacks.c
	  - (pushback_cb): Ditto
	
2004-09-28 kzk <mover@hct.zaq.ne.jp>
	
	* scm/prime.scm
	  - update list at proper timing
	  - (prime-prop-handler): fix unbound problem
	
2004-09-28 kzk <mover@hct.zaq.ne.jp>
	
	* scm/prime.scm
	  - fix unbound symbol problem occurred at r1304
	
2004-09-28 Masahito Omote <omote@utyuuzin.net>
	
	* scm/custom.scm(canna-server-name):
	  - Fix conflicted definition in string and bool.
	* sumika/gtk2/uimcontainer.c:
	  - Probably works.
	  - Drop dlopen completely.
	  - (uim_config_container_new): Drop hardcode widget creation on each
	    configurations.
	  - (uimconfig_create_custom_combobox_widget, uimconfig_uim_custom_widget_new):
	    Fix endless loops. 
	  - (uimconfig_uim_custom_widget_new_by_sym): New function for dynamic UI
	    creation for each IM's configuraion.
	    uimconfig_custom_widget_new will become obsolete.
	
2004-09-28 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/toolbar/Makefile.am
	  - rename uim-helper-toolbar-qt to uim-toolbar-qt
	
	* qt/qtkde-helper/src/systray/Makefile.am
	  - rename uimhelpersystray to uim-toolbar-qt-systray
	
	
2004-09-27 Masahito Omote <omote@utyuuzin.net>
	
	* uimcontainer.c(uimconfig_create_custom_combobox_widget):
	  Fix endless loop when 'lab_str == NULL' (currently default-input-method
	  becomes empty).
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (InputContext::update_prop_label) : Stop 
	  sending the label for "prop_engine_" method.
	
2004-09-27 Masahito Omote <omote@utyuuzin.net>
	
	* sumika/common/uimconfig.c, sumika/gtk2/uimconfig.c sumika/gtk2/Makefile.am:
	  Drop dlfcn loading of libuim. For transition, you can build the old one,
	  by compile with -DUSE_DLOPEN.
	* This change still does *not* works sumika properly.
	
2004-09-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - Modify fill-column and a English expression
	
2004-09-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/COMPATIBILITY
	  - New file
	  - Describe format
	  - Add 'Context object integration' as a entry
	
	* doc/HELPER-PROTOCOL
	  - modify indentation
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp (parse_helper_str_im_change) : Fix silly bug upon
	  receiving "im_change_whole_desktop".  Now changes all ximservers.
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* doc/XIM-SERVER : Update description.
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/xim.h : Use the name of conversion engine as a argument for
	  creating XimIC.
	* xim/ximic.cpp : Ditto.
	* xim/ximim.cpp (class XimIM_impl) : Add name of conversion engine
	  as a private variable.
	* xim/ximserver.cpp (XimServer::createContext) : Create new
	  context with explicitly selected conversion engine instead of
	  XimServer's global one.  This fixes im of newly created context
	  with the application whose im has been switch by "Change this
	  application only" method.
	
2004-09-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/slib.c:
	 -(vload): call dbg_lineinc() only when DEBUG_SCM enabled.
	
2004-09-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/m17nlib.scm
	  - (m17nlib-translate-ukey-to-mkey): Simplify
	
2004-09-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit fixes nested loading problem and extends debugging
	  capability of siod interpreter. The patch has been contributed by
	  Jun Inoue in following message. Thank you for cooperation.
	  http://lists.sourceforge.jp/mailman/archives/anthy-dev/2004-September/001081.html
	
	* uim/siod.h
	  - (struct obj): Replace C-oriented dbg_info implementation with lisp
	    object
	
	* uim/slib.c
	  - (_NEWCELL): New macro to preserve original implementation of
	    NEWCELL
	  - (NEWCELL): Switch implementation in accordance with DEBUG_SCM
	  - (dbg_readabrt, dbg_curpos): New function placeholder
	  - (dbg_curfile, dbg_curline): Remove to replace with dbg_pos
	  - (dbg_pos): New static variable
	  - (dbg_lineinc, dbg_linedec, init_dbg): New static
	    function
	  - (gc_protect): Add declaration
	  - (show_backtrace, vload, readtl, dbg_getc, dbg_ungetc,
	    dbg_readini, dbg_readend): Follow new dbg_info implementation
	  - (gc_mark): Also mark dbg_info in a lisp object
	  - (siod_init): Add invocation of init_dbg()
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (ConvdispOv::check_atr) : Fix to set initial
	  fontset information only once.
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/uim-util.h : Make uim_get_language_from_locale() available
	  for C++.
	* xim/main.cpp (get_uim_info) : Add short description.
	(send_im_list) : Fix to send language name and the description.
	* xim/ximserver.h (UIMInfo) : Add const char *desc.
	
2004-09-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit fixes a bug in uim-m17n which arbitrary limits a number
	  of candidates at once in candidate-window. The patch has been
	  contributed by Seiichi SATO by following message. Thank you for
	  cooperation.
	  http://lists.sourceforge.jp/mailman/archives/anthy-dev/2004-September/001080.html
	
	* scm/m17nlib.scm
	  - (m17nlib-update-candidate):
	    * Unbreak the limitation about number of candidate at once. The
	      patch has been modified in accordance with recent 'context
	      object integration' in r1304
	    * Fix a misidentification about id and mid
	
	* uim/m17nlib.c
	  - (get_nr_candidates): New function
	  - (get_nth_candidate): Extract candidates properly
	  - (uim_init_m17nlib): Add definition of m17nlib-lib-get-nr-candidates
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp (send_im_list) : Oops, this fixs compilation error of
	  previous commit.
	
2004-09-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/xim.h (class XimIM) : Add virtual method changeContext().
	(class XimIC) : Add changeContext().
	* xim/ximic.cpp (XimIC::changeContext) : New function to change
	  uim engine of its own InputContext.
	* xim/ximim.cpp (class XimIM_impl) : Add changeContext().
	(XimIM_impl::changeContext) : New function to change uim engine of
	  its XimIC.
	* xim/ximserver.cpp (XimServer::changeContext) : Renamed back from
	  changeWholeContext().
	(InputContext::update_prop_list) : Disable using "prop_engine_".
	(InputContext::update_prop_label) : Add more sanity check.
	* xim/main.cpp (parse_helper_str_im_change) : New function to
	  support im switching.
	(send_im_list) : Ditto.  Currently it only sends the name of
	  conversion engines, and need to add language and description
	  later.
	(helper_str_parse) : Support "im_list_get" and "im_change".
	* xim/ximserver.h (class XimServer) : Rename changeWholeContext()
	  back into changeContext().
	
2004-09-27 kzk <mover@hct.zaq.ne.jp>
	
	* helper/toolbar-common-gtk.c
	  - (calc_menu_position): consider button's height
	
2004-09-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit performs the 'context object integration' suggested in
	  the following message. This fixes bug #1450.
	  http://freedesktop.org/pipermail/uim/2004-September/000641.html
	
	  The modification changes the Scheme API for IM implementors.The
	  difference will be described in doc/COMPATIBILITY.
	
	* The context object for each IMs have inherit 'context' defined in
	  im.scm. This is performed by concatenating the 2 specs for
	  define-record. So the context object for each IMs have acquired 'id'
	  and 'im' members defined in 'context' and accessors for them
	
	* uim/uim-func.c
	  - (retrieve_uim_context): New static function. This function
	    performs retrieval of a uim_context by Scheme-side integrated
	    context object. This also accepts 'id' for backward
	    compatibility. This is not a uim API, so did not name as
	    uim_retrieve_context()
	  - (im_clear_preedit, im_pushback_preedit, im_update_preedit,
	    im_commit, im_commit_raw, im_set_encoding, im_clear_mode_list,
	    im_pushback_mode_list, im_update_mode_list, im_update_prop_list,
	    im_update_prop_label, im_update_mode,
	    im_activate_candidate_selector, im_select_candidate,
	    im_shift_page_candidate, im_deactivate_candidate_selector,
	    im_request_surrounding, im_delete_surrounding): Replace
	    uim_find_context() with retrieve_uim_context() to accept the
	    integrated context object as first argument
	
	* scm/util.scm
	  - (define-record): Add partial initialization feature of *-new. The
	    feature has been tested by test/test-util.scm
	* test/test-util.scm
	  - (test define-record record definition): Add new tests for partial
	    initialization of *-new
	
	* scm/im.scm
	  - (context-rec-spec): New variable to define-record context object
	  - (context-id, context-im): Replace with define-record
	  - (context-data, set-context-data!): Remove unneeded procedures to
	    follow the context object integration
	  - (add-context): Remove to replace with register-context
	  - (register-context): New procedure which replaces add-context. This
	    procedure don't perform context object creation
	  - (invoke-handler): Replace id with context in arguments for handler
	  - (create-context):
	    * Manually call im-init-handler instead of using invoke-handler to
	      follow specification change of init-handler
	    * Replace add-context with register-context
	  - (key-press-handler, key-release-handler, prop-handler): Replace
	    some id with context
	  - (default-push-back-mode, default-init-handler,
	    default-release-handler, default-key-press-handler,
	    default-key-release-handler, default-reset-handler,
	    default-mode-handler, default-get-candidate-handler,
	    default-set-candidate-index-handler, default-prop-handler): Move
	    to new file default-im.scm
	  - Add (require "default-im.scm")
	
	* scm/Makefile.am
	  - Add default-im.scm
	
	* scm/default-im.scm
	  - New file
	  - (default-context-rec-spec): New variable to define-record context
	    object
	  - (record default-context): New record
	  - (default-push-back-mode, default-release-handler,
	    default-key-press-handler, default-key-release-handler,
	    default-reset-handler, default-mode-handler,
	    default-get-candidate-handler,
	    default-set-candidate-index-handler, default-prop-handler):
	    * Move from im.scm
	    * Integrate the context objects
	  - (default-init-handler):
	    * Move from im.scm
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	  - (default-key-release-handler):
	    * Move from im.scm
	    * Integrate the context objects
	    * Add lacking im-commit-raw to properly through user input
	
	* scm/generic.scm
	  - (record generic-context): Inherit 'context' defined in im.scm
	  - (generic-context-rec-spec): New variable to define-record context
	    object
	  - (generic-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	  - (generic-init-handler):
	    * Add argument 'im'
	    * Add argument 'im' to actual init-handler
	    * Follow the specificatoin change of init-handler
	    * Integrate the context objects
	  - (generic-update-preedit, generic-commit-raw,
	    generic-proc-input-state, generic-proc-converting-state,
	    generic-proc-off-mode, generic-key-press-handler,
	    generic-key-release-handler, generic-reset-handler,
	    generic-mode-handler, generic-get-candidate-handler,
	    generic-set-candidate-index-handler, generic-prop-handler,
	    generic-update-prop-label, generic-update-prop-list): Integrate
	    the context objects
	  - (generic-register-im): Rename short_desc to short-desc to conform
	    to lisp culture
	
	* scm/hangul.scm
	  - (hangul-proc-on-mode, hangul-key-press-handler): Integrate the
	    context objects
	  - (hangul-register-im): Rename short_desc to short-desc to conform
	    to lisp culture
	  - (hangul2-init-handler, hangul3-init-handler, romaja-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	    * Integrate the context objects
	  - Modifiy a comment for hangul3 IM
	
	* scm/pyload.scm
	  - (py-init-handler, pyunihan-init-handler, pinyin-big5-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	    * Integrate the context objects
	
	* scm/viqr.scm
	  - (viqr-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	
	* scm/ipa.scm
	  - (ipa-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	
	* scm/tcode.scm
	  - (tcode-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	
	* scm/tutcode.scm
	  - (record tutcode-context): Inherit 'context' defined in im.scm
	  - (tutcode-context-rec-spec): New variable to define-record context
	    object
	  - (tutcode-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	  - (tutcode-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	  - (tutcode-update-mode, tutcode-proc-on-mode, tutcode-proc-off-mode,
	    tutcode-key-press-handler, tutcode-key-release-handler,
	    tutcode-mode-handler, tutcode-prop-handler,
	    tutcode-update-prop-label, tutcode-update-prop-list,
	    tutcode-update-prop-list, tutcode-reset-handler,
	    tutcode-get-candidate-handler,
	    tutcode-set-candidate-index-handler): Integrate the context
	    objects
	
	* scm/m17nlib.scm
	  - Insert missing license header
	  - (record m17nlib-context):
	    * Inherit 'context' defined in im.scm
	    * Rename the member 'id' to 'mc-id' to avoid conflict with
	      context-id
	  - (m17nlib-context-rec-spec): New variable to define-record context
	    object
	  - (m17nlib-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	  - (m17nlib-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	  - (m17nlib-update-preedit, m17nlib-update-candidate,
	    m17nlib-release-handler, m17nlib-mode-handler, m17nlib-push-key,
	    m17nlib-press-key-handler, m17nlib-release-key-handler,
	    m17nlib-reset-handler, m17nlib-get-candidate-handler,
	    m17nlib-set-candidate-index-handler, m17nlib-prop-handler):
	    Integrate the context objects
	
	* scm/anthy.scm
	  - (record anthy-context): Inherit 'context' defined in im.scm
	  - (anthy-context-rec-spec): New variable to define-record context
	    object
	  - (anthy-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	  - (anthy-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	    * Integrate the context objects
	  - (anthy-commit-raw, anthy-release-handler, anthy-mode-handler,
	    anthy-update-preedit, anthy-proc-raw-state,
	    anthy-proc-input-state-no-preedit,
	    anthy-proc-input-state-with-preedit, anthy-proc-input-state,
	    anthy-pushback-preedit-segment-rec, anthy-compose-state-preedit,
	    anthy-input-state-preedit, anthy-do-commit, anthy-move-candidate,
	    anthy-reset-candidate-window, anthy-resize-segment,
	    anthy-proc-compose-state, anthy-proc-wide-latin,
	    anthy-press-key-handler, anthy-release-key-handler,
	    anthy-reset-handler, anthy-get-candidate-handler,
	    anthy-set-candidate-index-handler, anthy-prop-handler,
	    anthy-update-prop-label, anthy-update-mode,
	    anthy-update-prop-list): Integrate the context objects
	
	* scm/canna.scm
	  - Remove unneeded (require "generic-key.scm")
	  - (record canna-context): Inherit 'context' defined in im.scm
	  - (canna-context-rec-spec): New variable to define-record context
	    object
	  - (canna-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	  - (canna-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	    * Integrate the context objects
	  - (canna-commit-raw, canna-mode-handler, canna-update-preedit,
	    canna-proc-input-state-no-preedit,
	    canna-proc-input-state-with-preedit, canna-proc-input-state,
	    canna-pushback-preedit-segment-rec, canna-compose-state-preedit,
	    canna-input-state-preedit, canna-do-commit, canna-release-handler,
	    canna-mode-handler, canna-move-candidate,
	    canna-reset-candidate-window, canna-resize-segment,
	    canna-proc-compose-state, canna-proc-wide-latin,
	    canna-press-key-handler, canna-release-key-handler,
	    canna-reset-handler, canna-get-candidate-handler,
	    canna-set-candidate-index-handler, canna-prop-handler,
	    canna-proc-raw-state, canna-update-prop-label, canna-update-mode,
	    canna-update-prop-list): Integrate the context objects
	
	* scm/skk.scm
	  - (record skk-context): Inherit 'context' defined in im.scm
	  - (skk-context-rec-spec): New variable to define-record context
	    object
	  - (skk-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	    * Integrate the context objects
	  - (skk-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	    * Integrate the context objects
	  - (skk-current-context): Remove unneeded procedure
	  - (skk-commit-raw, skk-commit-raw-with-preedit-update, skk-commit,
	    skk-prepare-commit-string, skk-begin-conversion,
	    skk-begin-completion, skk-do-update-preedit, skk-update-mode,
	    skk-update-preedit, skk-commit-editor-context,
	    skk-proc-state-direct-no-preedit, skk-proc-state-direct,
	    skk-proc-state-kanji, skk-setup-child-context,
	    skk-check-candidate-window-begin, skk-change-candidate-index,
	    skk-reset-candidate-window, skk-back-to-kanji-state,
	    skk-change-completion-index, skk-proc-state-completion,
	    skk-proc-state-converting, skk-proc-state-okuri,
	    skk-proc-state-latin, skk-proc-state-wide-latin, skk-push-key,
	    skk-press-key-handler, skk-release-key-handler, skk-reset-handler,
	    skk-mode-handler, skk-get-candidate-handler,
	    skk-set-candidate-index-handler, skk-prop-handler,
	    skk-update-prop-label, skk-update-prop-list): Integrate the
	    context objects
	
	* scm/skk-editor.scm
	  - (record skk-editor): Remove unneeded member 'id'
	  - (skk-editor-new, skk-editor-commit-raw): Integrate the context
	    objects
	
	* scm/prime.scm
	  - (record prime-context): Inherit 'context' defined in im.scm
	  - (prime-context-rec-spec): New variable to define-record context
	    object
	  - (prime-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	  - (prime-init-handler):
	    * Add argument 'im'
	    * Follow the specificatoin change of init-handler
	    * Integrate the context objects
	  - (prime-uim-candwin-get-range, prime-command-commit-raw,
	    prime-command-register-mode, prime-command-wide-latin-input,
	    prime-command-conv-next, prime-command-register-conv-next,
	    prime-command-conv-prev, prime-command-conv-cancel,
	    prime-command-conv-commit, prime-command-register-conv-commit,
	    prime-command-conv-select, prime-command-register-conv-select,
	    prime-command-conv-input, prime-command-register-conv-input,
	    prime-command-preedit-cancel, prime-command-preedit-backspace,
	    prime-command-preedit-delete, prime-command-preedit-commit,
	    prime-command-register-preedit-commit,
	    prime-command-preedit-cursor-left-edge,
	    prime-command-preedit-cursor-right-edge,
	    prime-command-preedit-cursor-left,
	    prime-command-preedit-cursor-right, prime-command-preedit-input,
	    prime-command-preedit-commit-candidate,
	    prime-command-register-preedit-commit-candidate,
	    prime-command-preedit-convert,
	    prime-command-preedit-convert-reversely, prime-command-fund-input,
	    prime-command-fund-space, prime-command-fund-altspace,
	    prime-command-fund-commit-ja-direct,
	    prime-command-register-fund-backspace,
	    prime-command-register-fund-delete,
	    prime-command-register-fund-cancel,
	    prime-command-register-fund-commit,
	    prime-command-register-fund-cursor-left-edge,
	    prime-command-register-fund-cursor-right-edge,
	    prime-command-register-fund-cursor-left,
	    prime-command-register-fund-cursor-right, prime-push-key,
	    prime-commit-raw, prime-commit-without-learning,
	    prime-commit-word-data, prime-commit-candidate,
	    prime-commit-to-register-buffer, prime-convert-selection-move,
	    prime-begin-conversion-internal, prime-begin-conversion-reversely,
	    prime-begin-conversion, prime-update, prime-update-state,
	    prime-update-history, prime-update-preedit,
	    prime-register-state-update-preedit,
	    prime-preedit-state-update-preedit, prime-display-preedit,
	    prime-display-preedit-cursor, prime-update-prediction,
	    prime-update-candidate-window, prime-press-key-handler,
	    prime-release-key-handler, prime-reset-handler, prime-mode-set,
	    prime-mode-handler, prime-get-candidate-handler,
	    prime-set-candidate-index-handler, prime-prop-handler,
	    prime-update-prop-label, prime-update-prop-list): Integrate the
	    context objects
	
	* scm/spellcheck.scm
	  - (record spell-context): Inherit 'context' defined in im.scm
	  - (spell-context-rec-spec): New variable to define-record context
	    object
	  - (spell-context-new):
	    * Add arguments 'id' and 'im'
	    * Initialize 'context' part of the object
	  - (spell-init-handler):
	    * Add argument 'im'
	  - (spell-begin-conversion, spell-update-preedit, spell-update-mode,
	    spell-update-candidate-window, spell-proc-input-no-preedit,
	    spell-proc-input-with-preedit, spell-proc-state-converting,
	    spell-proc-mode-latin, spell-push-key, spell-press-key-handler,
	    spell-release-key-handler, spell-reset-handler,
	    spell-mode-handler, spell-get-candidate-handler,
	    spell-set-candidate-index-handler): Integrate the context objects
	  - Add a short-desc to register-im
	
2004-09-27 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/candwin/uim-helper-candwin-qt.cpp
	  - fix prime's infinite loop
	    (corresponding change of r1225)
	
2004-09-27 kzk <mover@hct.zaq.ne.jp>
	
	* This is the big change of qtkde-helper.
	  Equivalent to recent changes of gtk's toolbar.
	
	* quimhelpertoolbar.cpp
	* quimhelpertoolbar.h
	  - proper charset parsing
	  - add whatsthishelp to popupMenu item
	  - add tooltip to button
	  - add switcher exec button
	  - fix memory leak
	  - (class QHelperButton): renamed from HelperButton
	  - fix message sending bug
	  - (class QHelperPopupMenu): renamed from HelperPopup
	  - add const prefix to proper function
	  - (signal messageSendDone): deleted
	  - (slot slotMessageSendDone): deleted
	
2004-09-27 kzk <mover@hct.zaq.ne.jp>
	
	* This commit fixes wrong message after "branch" tag.
	
	* scm/canna.scm
	  - fix wrong message described before
	  - fix typo
	* scm/anthy.scm
	  - fix wrong message described before
	
2004-09-27 kzk <mover@hct.zaq.ne.jp>
	
	* scm/generic.scm
	  - update prop-list when prop-handler is invoked
	
2004-09-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* japanese.scm (load-azik-table) :
	 - change azik mode binding
	   see [anthy-dev 1073]. Thanks OHASHI-san.
	
2004-09-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* configure.ac
	* Makefile.am
	  - add --enable-debug option to store scheme file and line number information.
	* uim/siod.h uim/slib.c
	  - store file name and linenumber to scheme object, if DEBUG_SCM is turned on.
	    see [anthy-dev 1077]. Thanks Inoue-san.
	
2004-09-26 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp : Remove ustring_to_euc_str() and
	Locale::uStringToCtext().	
	(ustring_to_utf8_str) : New function.  Replaces old
	  ustring_to_euc_str().
	(createLocale) : Renamed from getLocale() and take language name
	  as a argument.  Return UTF-8 locale to support multiple
	  languages.
	(class UTF8_Locale) : New class to handle UTF-8.
	(UTF8_Locale::UTF8_Locale) : Constructor using language name to
	  set internal locale name.
	(UTF8_Locale::compose_localename_from_lang) : Return UTF-8 locale
	  name for corresponding language name.  At the moment, it only
	  contains CJK and vi locale names, and should be fixed later.
	(UTF8_Locale::set_localename_from_lang) : Set internal UTF-8
	  locale name from language name.
	* xim/connection.h : Remove redundant include of <list>.
	* xim/main.cpp (supported_locales) : New static variable for
	  selection target locales.
	(notifyLocale) : Use supported_locales variable as a selection
	  target locales instead of using "ja_JP" only.
	(get_uim_info) : Use UTF-8 instead of EUC-JP for
	  uim_create_context().
	(init_supported_locales) : New function to get supported locale
	  list from uim engine's language information.
	(main) : Remove setlocale(), and this will be done in
	  InputContext::createUimContext() later.  Check supported locales
	  just after getting uim information.  Don't do init_convdisp()
	  here since it needs language information to draw correct
	  characters.
	* xim/ximserver.cpp : Remove str_to_ustring().
	(print_ustring) : Change to handle UTF-8 string instead of EUC-JP.
	(XimServer::Ximserver) : Don't copy language name.
	(XimServer::changeWholeContext) : Renamed from changeContext().
	(XimServer::strToUstring) : Change to handle UTF-8 string instead
	  of EUC-JP.
	(XimServer::getLocale) : New function.
	(XimServer::set_im) : Change internal language and locale names
	 upon changing back-end conversion engines.
	(get_im_lang_from_engine) : New function to get language name from
	  corresponding uim back-end conversion engine's name.
	(InputContext::InputContext) : Now InputContext has current
	  context's conversion engine's name.  The name is copied with
	  strdup() since it may be different from ximserver's one.
	(InputContext::~InputContext) : Free mEngineName.
	(InputContext::createUimContext) : Do setlocale() with
	  corresponding locale name while creating uim context.  Use UTF-8
	  instead of EUC-JP for uim_create_context().
	(InputContext::changeContext) : Renamed from changeUimContext.
	  This function changes InputContext's uim back-end engine, and
	  set language of its preedit window.
	(InputContext::update_prop_list) : Change to use dynamic memory
	  allocation for message buffer.
	(InputContext::update_prop_label) : Ditto.
	(InputContext::get_engine_name) : New function to return
	  conversion engine's name of the context.
	* xim/canddisp.cpp : Include "uim/uim.h" instead of <uim/uim.h>.
	(Canddisp::activate) : Send messages for uim-candwin-gtk with
	  UTF-8 string.
	* xim/convdisp.cpp : Add default fontset for zh_CN, zh_TW, and ko.
	(init_convdisp) : Create fontset for zh_CN, zh_TW, and ko.
	(class PeWin) : Now constructor handles language name for
	  argument.
	(class PeLineWin) : Ditto.
	(class PeOvWin) : Ditto.
	(class ConvdispOv) : Add virtual method set_lang().  Add private
	  variables m_initial_fontset and m_initial_lang.
	(create_convdisp) : Do initi_convdisp() here.
	(PeWin::PeWin) : Handles language name for argument.  Set initial
	  fontset considering with language.
	(PeWin::draw_char) : Change to handle UTF-8 string.
	(PeLineWin::PeLineWin) : Handles language name for argument.
	  Make window height a bit smaller.
	(PeLineWin::draw_segment) : Remove spaces between characters.
	(PeLineWin::calc_extent) : Make window height a bit smaller.
	(PeOvWin::PeOvWin) : Handles language name for argument.
	(Convdisp::Convdisp) : Set language name from its context's
	  conversion engine.
	(Convdisp::set_lang) : New function.
	(ConvdispRw::ConvdispRw) : Change to use dynamic creation and
	  destruction of root  style preedit window.
	(ConvdispRw::~ConvdispRw) : Ditto.
	(ConvdispRw::update_preedit) : Ditto.
	(ConvdispRw::clear_preedit) : Ditto.
	(ConvdispRw::move_candwin) : Don't check focus.  Remove redundant
	  code.
	(ConvdispOv::ConvdispOv) : Remember language name.
	(ConvdispOv::~ConvdispOv) : Free the language name.
	(ConvdispOv::set_lang) : New function to set correct fontset from
	  the displayed language.
	(ConvdispOv::do_draw_preedit) : Fix typo in comment.
	(ConvdispOv::check_win) : Add language information for creating
	  PeOvWin.
	(ConvdispOv::check_atr) : Set initial fontset with corresponding
	  language is ICA_FontSet is not available.  If ICA_FontSet is
	  available, remember it.
	(ConvdispOv::layoutCharEnt) : Change to handle UTF-8 string.
	(ConvdispOs::move_candwin) : Don't check focus.
	* xim/ximserver.h : Include "uim/uim.h" instead of <uim/uim.h>.
	  Change the type of uchar from int to wchar_t.  Remove prototype
	  of str_to_ustring().  Rename prototype of getLocale() to
	  createLocale().  Add prototype of get_im_lang_from_engine().
	(class InputContext) : Add public method get_engine_name().
	  Rename method name changeUimContext() to changeContext().  Add
	  private variable mEngineName.
	(class Locale) : Mark uStringToCtext() as pure virtual method.
	  Add prototype of set_locale_from_lang() and
	  compose_localename_from_lang().  Add private variable
	  mLocaleName.
	(class XimServer) : Rename changeContext() into
	  changeWholeContext().  Add public method getLocale().  Make
	  mLang const.
	* convdisp.h (class Convdisp) : Add virtual method set_lang().
	  Add protected variable mLang.
	
2004-09-26 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	  - (im_list): add selectedflag information
	
2004-09-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* scm/prime.scm:
	 -(prime-context-history-set!): Fixed the lack of the first argument of 
	    prime-context-set-history!
	
2004-09-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/input-pad-ja.c:
	 -(buttontable_create): Removed calling gtk_widget_size_request.
	
2004-09-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit fixes compilation-time problems. No actual codes are
	  modified
	
	* Makefile.am
	  - Remove unused and invalid DEFS which masks autoconf'ed one
	
	* uim/Makefile.am
	  - Remove invalid DEFS which masks autoconf'ed one. Definition are
	    move into an user variable and included via per_exec_CPPFLAGS
	  - Move invalid -I in per_exec_CFLAGS into per_exec_CPPFLAGS
	
	* helper/Makefile.am
	  - Remove invalid CFLAGS which masks autoconf'ed one. Definition are
	    move into an user variable and included via per_exec_CPPFLAGS
	  - Move invalid -I in per_exec_CFLAGS into per_exec_CPPFLAGS
	
	* gtk/Makefile.am
	  - Move invalid -I in per_exec_CFLAGS into per_exec_CPPFLAGS
	
	* xim/Makefile.am
	  - Move invalid -I in per_exec_CFLAGS into per_exec_CPPFLAGS
	  - Add uim_xim_CFLAGS for failsafe for future
	
	* fep/Makefile.am
	  - Move invalid -I in per_exec_CFLAGS into per_exec_CPPFLAGS
	
	* sumika/common/Makefile.am
	  - Rename deprecated INCLUDES to AM_CPPFLAGS
	* sumika/gtk2/Makefile.am
	  - Rename deprecated INCLUDES to AM_CPPFLAGS
	  - Move -D in AM_CFLAGS to AM_CPPFLAGS appropriately
	  - Remove redundant -DHAVE_CONFIG_H which automatically included in
	    DEFS
	
	* uim/uim.c
	* uim/uim-ipc.c
	* uim/uim-helper.c
	* uim/uim-helper-server.c
	* uim/uim-helper-client.c
	* uim/getpeereid.c
	* uim/uim-sh.c
	  - Replace #include <> with "" to appropriately include the files in
	    local directly
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin
	* qt/quiminputcontextplugin-qt4
	  - disable immodule layer implemented IM-switching
	  - (sendImList): add "selected" flag
	    (Now uim-im-switcher is available for this purpose)
	
2004-09-24 Masahito Omote <omote@utyuuzin.net>
	
	* helper/dict-main-gtk.c:
	  - (parse_arg): Use getopt. But this entry is now in comment entry.
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/qhelpermanager.cpp
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	  - (parseHelperStr): Fix message handling of
	    prop_update_custom to be complied with the intended
	    specification. It should be processed even if not focused
	
	  - this change corresponds to gtk-immodule's change at r1287
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - Fix a typo
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - Describe a new chapter 'Network topology and message passing'
	  - Describe about the protocol into 'Message format in BNF'
	  - Describe about the name 'property' into 'Property messages'
	  - (prop_custom_update): Describe a design decision
	  - (commit_string): Describe reasonably
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* gtk/gtk-im-uim.c
	  - (im_uim_parse_helper_str): Fix message handling of
	    prop_update_custom to be complied with the intended
	    specification. It should be processed even if not focused
	
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - (focus_in, focus_out): Describe well
	  - (prop_update_custom): Fix a message definition
	    bug. prop_update_custom uses "\n" as argument delimiter to allow
	    "\t" as value
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - (prop_label_update): Describe as reasonable
	  - (prop_list_update): Describe well
	  - Fix menucommand_name definition
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - (prop_label_get, prop_list_get): Describe well
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/qhelpermanager.cpp
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	  - fix wrong if condition for "im_change_*" message
	
2004-09-24 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/xim.h (class Connection) : Add new function prototype,
	  is_xim_sync_reply_timeout() and clear_pendign_rx().  Add new
	  private variable, mSyncStartTime.
	* xim/ximtrans.cpp (Connection::setSyncFlag) : Record the time of
	  setting flag.
	(Connection::xim_forward_event) : Handle XIM protocol error
	  situation as XIM library won't return XIM_SYNC_REPLY after
	  some time interval.  Hopefully this is the last modification
	  about XIM event flow of uim-xim.
	(Connection::is_xim_sync_reply_timeout) : New function.  Set
	  timeout interval with 5 second for now.
	(Connection::clear_pending_rx) : New function.
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	* qt/quiminputcontextplugin/src/qhelpermanager.cpp
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	  - replace all of "this_context" with "this_text_area"
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - Fix message delimiter definition. "\n\n" does not mean session
	    termination but message boundary. See uim_helper_get_message()
	  - (prop_label_update): Replace label_string and tooltip_string with
	    iconic_label and menulabel_string in accordance with anthy.scm and
	    toolbar-common-gtk.c. Fix it if my understanding is wrong
	  - (prop_list_update): Give branch arguments semantic names
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* helper/toolbar-common-gtk.c
	  - (helper_applet_prop_label_update): Rename tmp and tmp2 with
	    'lines' and 'pair' to indicate what it means. It helps to
	    recognize the helper protocol definition
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - (prop_activate): Describe well
	  - (prop_list_update): Rename icon_name to iconic_label
	  - Define menucommand_name in accordance with my knowledge. Fix if
	    wrong.
	
2004-09-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/HELPER-PROTOCOL
	  - Describe 'prop_update_custom' message well
	  - Categorize messages as 'Focus notification messages', 'Property
	    messages', 'IM management messages' and 'Other messages'
	  - Add some definitions
	  - Form as structured document
	
2004-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c: All of "this widget" was renamed to "this text area".
	
2004-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im-switcher-gtk.c: all of "this widget" was renamed to "this text area".
	
2004-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im.scm: Rewrited short description of default im.
	
2004-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im-switcher-gtk.c:
	 -(parse_arg): New function. Renamed from arg_parse from the point of view
	   of consistency.
	 -(parse_helper_str_im_list): Interpret "selected" flag.
	
	
2004-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk/gtk-im-uim.c:
	 -(im_uim_send_im_list): Send im infomation with "selected" flag when 
	    the input method is selected.
	
2004-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim.h: Added new function, uim_get_current_im_name.
	* uim/uim.c: Added new function, uim_get_current_im_name.
	
	* uim/context.h: Added new struct member current_im_name to uim_context.
	
2004-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-helper-server.c: Added some comments.
	
2004-09-24 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* uim/intl.c : Use LANG instead of LC_ALL.
	* uim/gettext.h : Enable compilation if nls is disabled.
	
2004-09-24 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximtrans.cpp (Connection::xim_forward_event) : Add received
	  XIM_FORWARD packet to pending queue while synchronous flag is
	  on.
	(Connection::xim_sync_reply) : Handle pending Rx event upon
	  receiving XIM_SYNC_REPLY.
	(Connection::~Connection) : Update.
	* xim/connection.cpp (XConnection::writeProc) : Use pending Tx
	  packet queue just for XIM_FORWARD event consecutive to
	  XIM_COMMIT.
	* xim/xim.h : Add new definition copyRxPacket().
	(class Connection) : Add new list for pending RxQ.  Delete
	  pending queue for mPTxQ which is now unused.
	* xim/ximpacket.cpp (class RxPacket_impl) : Add copy constructor.
	(RxPacket_impl::RxPacket_impl) : Implement copy constructor.
	(copyRxPacket) : New function.  Return duplicated Rx packet.
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* helper/toolbar-common-gtk.c
	  - (switcher_button_create): new function
	  - (switcher_button_pressed): renamed from (switch_button_clicked_cb)
	  - add tooltip for switcher-exec button
	
	* added the code for using icon (switcher.png) in
	  (switcher_button_create) function. But corrently,
	  this code is commented out. Once icon is committed,
	  please use the code.
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* helper/input-pad-ja.c
	  - update message
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* helper/toolbar-common-gtk.c
	  - prevent multiple "sw" button creation.
	    (add sw button to the menu_button list and
	    make it deleted in list-updating)
	  - add tooltip to the label
	
2004-09-24 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/src/qhelpermanager.cpp
	  - (parseHelperStr): Changed condition of calling
	   parseHelperStrImChange. This change enables
	   some messages. (im_change_whole_desktop).
	
	  - this commit corresponds to gtk's change at r1259
	
	
2004-09-23 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/util.scm
	  - (define-record): Fix default value copying
	* uim/slib.c
	  - (siod_init): Add NIL initilization of sym_else
	
2004-09-23 kzk <mover@hct.zaq.ne.jp>
	
	* This commit adds data/icon directory for icon support
	
	* helper/Makefile.am
	  - define UIM_DATADIR and add it to CFLAG
	
	* configure.ac
	  - add "data/Makefile" and "data/icons/Makefile" to AC_CONFIG_FILES
	
	* Makefile.am
	  - define data directory as subdirectory
	
	* data/
	  - the directory to store icons or other datas.
	    (alphabet_a.png is the experimental one)
	
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* toolbar-common-gtk.c:
	 -(switch_button_clicked_cb): New function.
	 -(helper_applet_prop_list_update): Add a button to exec switcher.
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-fep.c: Some comments were translated into English.
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c:
	 -(im_uim_parse_helper_str): Changed condition of calling
	   im_uim_parse_helper_str_im_change. This change enables
	   some messages. (im_change_whole_desktop).
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* dict-anthy-gtk.c:
	 -(anthy_add_window_necessary_create): New function.
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/Makefile.am: Removed uncreated rule uim-pref.
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/: Added uim-dict.
	 dict-main-gtk.c: New file.
	 dict-anthy.c: New file.
	 dict-util.c: New file.
	 dict-anthy-gtk.c: New file.
	
2004-09-22 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	  - fix typo
	  - rename "str" to more semantic name
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac Makefile.am:
	  Added a new directory sumika.
	
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* sumika/: Now we can compile sumika. But I've used many #if 0,
	           it wouldn't works properly.
	
2004-09-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* sumika/: Merged sumika. (This will not work yet.)
	
2004-09-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* gtk/gtk-im-uim.c : treat Kanji key same as Zenkaku-Hankaku key
	* xim/ximserver.cpp : Ditto.
	
2004-09-21 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp : Update changes of r1249.  Make modifier
	  values static to prevent calculation upon every key press.
	* xim/ximserver.h : Ditto.
	
2004-09-21 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cp (keyState::keyState) : Check modifier keys with
	  corresponding keysyms.
	(keyState::check_modifier) : New function.  Return correct UMod
	  values from keysyms.
	(init_modifier_keys) : New function to check current modifier map.
	* xim/main.cpp (main) : Do init_modifier_keys() at startup.
	* xim/ximserver.h : Add prototype of init_modifier_keys().  Add
	  new lists for modifier keysyms: gShiftMask, gLockMask,
	  gControlMask, gMod1Mask, gMod2Mask, gMod3Mask, gMod4Mask,
	  gMod5Mask.
	
2004-09-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/util.scm
	  - (else): Move into slib.c
	* uim/slib.c
	  - (sym_else): New static variable
	  - (init_storage_1): Add initialization of sym_else
	  - (leval_case): Clean up using sym_else
	
	* uim/uim.c
	  - (uim_init_scm): Add comments to siod_argv values
	
2004-09-21 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximic.cpp (XimIC::setFocus) : Move candidate window before
	  updating.
	
2004-09-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*po/ja.po: Added some translations.
	
2004-09-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* po/ja.po: Added some translations.
	
2004-09-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* po/uim.pot: Updated pot file.
	
2004-09-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* POTFILES.in: Added some files to translate.
	
2004-09-21 kzk <mover@hct.zaq.ne.jp>
	
	* scm/anthy.scm
	  - fix ambiguous helper message for tooltip
	
2004-09-21 kzk <mover@hct.zaq.ne.jp>
	
	* helper/toolbar-common-gtk.c
	  - introduce tooltip message.
	    add "prop_tooltip" list and use it.
	
2004-09-21 kzk <mover@hct.zaq.ne.jp>
	
	* helper/toolbar-common-gtk.c
	  - fix memory leak introduced r1140
	
2004-09-21 kzk <mover@hct.zaq.ne.jp>
	
	* tables/Makefile.am: remove trailing "/"
	
2004-09-20 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (ConvdispOv::move_candwin) : Give
	  ICA_FocusWindow priority over ICA_Client_Window.  Add some more
	  hack for flashplayer plugin.
	(ConvdispOv::validate_area) : Give ICA_FocusWindow priority.
	(ConvdispOv::do_draw_preedit) : Ditto.
	(ConvdispOv::check_win) : Ditto.
	
2004-09-20 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (ConvdispOv::do_draw_preedit) : Fix silly bug
	  introduced in r1213.
	
2004-09-20 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (keyState::keyState) : Remove check for mod2 mask.
	-This line, and those below, will be ignored--
	
	M    xim/ximserver.cpp
	
2004-09-20 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/canddisp.cpp : Include <unistd.h> for read(2).
	
2004-09-20 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/helper-candwin-gtk.c : Make candidate window style
	  compatible with gtk immodule's one (many code copied from
	  gtk/uim-candidate-windoe.c).  Handle display_limit value while
	  activating candidate window.
	
	* doc/HELPER-CANDWIN : Add description about display_limit value.
	
	* xim/connection.cpp : Separate XConnection class definition into
	  connection.h.
	* xim/connection.h : New file.
	* xim/xim.h (class XimIC) : Add new prototype force_send_packet().
	* xim/ximic.c (XimIC::force_send_packet) : New function to send
	  packet queue without X event.
	* xim/main.cpp (add_fd_watch) : Remove static.
	* xim/ximserver.cpp : Handle shift_page_cb.
	(InputContext::InputContext) : set initial values for mNumPage and
	  mDisplayLimit.
	(InputContext::createUimContext) : Add candidate_shift_page_cb
	  callback.
	(InputContext::candidate_shift_page_cb) : New function.
	(InputContext::candidate_activate) : Handle display_limit while
	  activating the candidate window.  Set candidate page number
	  properly.
	(InputContext::candidate_update) : Handle display_limit.
	(InputContext::candidate_select) : Set current candidate page.
	(InputContext::candidate_shift_page) : New function of shift_page
	  implementation.
	* xim/canddisp.cpp (canddisp_singleton) : Add handler to receive
	  message from helper-cand-win-gtk.
	(Canddisp::activate) : Send display_limit value while activating
	  candidate window.
	(Canddisp::candwin_read_cb) : New function.  Receive message from
	  uim-candwin-gtk.  Set candidate index upon receiving "index".
	* xim/ximserver.h (class InputContext) : Add new prototype
	  candidate_shift_page and candidate_shift_page_cb.  Add new
	  private menber mDisplayLimit, mNumPage, and current_page.
	* xim/canddisp.h (class Canddisp) : Change prototype of
	  activate().
	
2004-09-20 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	  - rewrite to BNF style (assigned by bug1420)
	    please check.
	
2004-09-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-im.scm
	  - Describe which revision is tested by this test
	* test/test-util.scm
	  - Likewise
	
	* scm/util.scm
	  - (define-record): Add a comment about what it does
	
2004-09-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit refactors im.scm
	
	* scm/util.scm
	  - (filter): New SRFI procedure. Tested by test-util.scm
	  - (define-record): Add a comment which describes a design
	    consideration about rec-spec
	
	* test/test-util.scm
	  - (test map): Comment out 2 tests due to bug #617 'boolean value
	    representation is inconsistent'
	  - (test filter): New test
	  - (test filter-map): Add 3 tests
	
	* scm/im.scm
	  - Refactored with test-im.scm
	  - (preedit-attr?, register-im, next-im, find-context,
	    remove-context, add-context, create-context, release-context,
	    key-press-handler, key-release-handler, reset-handler,
	    mode-handler, get-candidate, set-candidate-index): Refactor
	  - (find-im-by-name-rec, remove-context-rec): Remove as result of the
	    refactoring
	  - (select-im): Renamed to find-im to avoid being regarded as
	    'switch-im'
	  - (find-im): Renamed from select-im and refactored
	  - (invoke-handler): New procedure
	  - (im-name, im-init-arg, im-init-handler, im-release-handler,
	    im-key-press-handler, im-encoding, im-key-release-handler,
	    im-reset-handler, im-mode-handler, im-get-candidate-handler,
	    im-set-candidate-index-handler, im-prop-handler): Replace with
	    define-record
	  - (make-im): Replace with define-record'ed im-new
	
	* test/test-im.scm
	  - Replace select-im with find-im in accordance the renaming
	  - (test im-record accessors): Replace make-im with im-new
	  - (test make-im, test find-im-by-name-rec): Remove as result of
	    the refactoring
	  - (testcase im handlers): Add entry point for invoke-handler. The
	    test is not written yet
	
2004-09-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-im.scm
	  - (testcase im im-management): Add 'short-desc' arg to register-im
	    in accordance with specification change in r1190
	* scm/im.scm
	  - (register-im): Rename short_desc to short-desc to conform to lisp
	    culture
	
2004-09-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/anthy.scm
	  - (record anthy-context): Fix invalid list expression
	* scm/canna.scm
	  - (record canna-context): Fix invalid list expression
	* scm/skk.scm
	  - (record skk-context): Fix invalid list expression
	* scm/prime.scm
	  - (record prime-context, prime-context-new): Fix invalid list
	    expression
	
2004-09-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit replaces boring context definitions with define-record
	  to make maintenance easy, avoid human errors and know what members
	  are defined at a glance. See test/test-util.scm to know what
	  define-record does. Developers, remove unused members in
	  define-record definitions which is named as "unused-nth" if truely
	  unused. They are temporarily existing as comment to preserve
	  original definition information
	
	* scm/generic.scm
	  - (generic-context-set-rk-context!, generic-context-rk-nth,
	    generic-context-set-rk-nth!, generic-context-on,
	    generic-context-set-on!, generic-context-candidate-op-count,
	    generic-context-set-candidate-op-count!,
	    generic-context-raw-commit, generic-context-set-raw-commit!,
	    generic-context-converting, generic-context-set-converting!):
	    Replace with define-record
	  - (generic-context-new-internal): New alias of generic-context-new
	    that implicitly defined by define-record
	  - (generic-context-new): Replace value initialization with
	    generic-context-new-internal
	
	* scm/rk.scm
	  - (rk-context-rule, rk-context-set-rule!, rk-context-seq,
	    rk-context-set-seq!, rk-context-immediate-commit,
	    rk-context-set-immediate-commit!, rk-context-back-match,
	    rk-context-set-back-match!): Replace with define-record
	  - (rk-context-new-internal): New alias of rk-context-new that
	    implicitly defined by define-record
	  - (rk-context-new): Replace value initialization with rk-context-new-internal
	
	* scm/anthy.scm
	  - (anthy-context-id, anthy-context-set-id!): Remove these invalid
	    and unused definitions
	  - (anthy-context-on, anthy-context-set-on!, anthy-context-state,
	    anthy-context-set-state!, anthy-context-ac-id,
	    anthy-context-set-ac-id!, anthy-context-left-string,
	    anthy-context-set-left-string!, anthy-context-right-string,
	    anthy-context-set-right-string!, anthy-context-rkc,
	    anthy-context-set-rkc!, anthy-context-index-list,
	    anthy-context-set-index-list!, anthy-context-cur-seg,
	    anthy-context-set-cur-seg!, anthy-context-candidate-window,
	    anthy-context-set-candidate-window!,
	    anthy-context-candidate-op-count,
	    anthy-context-set-candidate-op-count!, anthy-context-wide-latin,
	    anthy-context-set-wide-latin!, anthy-context-kana-mode,
	    anthy-context-set-kana-mode!, anthy-context-commit-raw,
	    anthy-context-set-commit-raw!, anthy-context-input-rule,
	    anthy-context-set-input-rule!, anthy-context-left-raw-string,
	    anthy-context-set-left-raw-string!,
	    anthy-context-right-raw-string,
	    anthy-context-set-right-raw-string!): Replace with define-record
	  - (anthy-context-new-internal): New alias of anthy-context-new that
	    implicitly defined by define-record
	  - (anthy-context-new): Replace value initialization with
	    anthy-context-new-internal
	
	* scm/canna.scm
	  - (canna-context-id, canna-context-set-id!): Remove these invalid
	    and unused definitions
	  - (canna-context-on, canna-context-set-on!, canna-context-state,
	    canna-context-set-state!, canna-context-cc-id,
	    canna-context-set-cc-id!, canna-context-left-string,
	    canna-context-set-left-string!, canna-context-right-string,
	    canna-context-set-right-string!, canna-context-rkc,
	    canna-context-set-rkc!, canna-context-index-list,
	    canna-context-set-index-list!, canna-context-cur-seg,
	    canna-context-set-cur-seg!, canna-context-candidate-window,
	    canna-context-set-candidate-window!,
	    canna-context-candidate-op-count,
	    canna-context-set-candidate-op-count!, canna-context-wide-latin,
	    canna-context-set-wide-latin!, canna-context-kana-mode,
	    canna-context-set-kana-mode!, canna-context-commit-raw,
	    canna-context-set-commit-raw!, canna-context-input-rule,
	    canna-context-set-input-rule!): Replace with define-record
	  - (canna-context-new-internal): New alias of canna-context-new that
	    implicitly defined by define-record
	  - (canna-context-new): Replace value initialization with
	    canna-context-new-internal
	  - (canna-proc-input-state-no-preedit): Replace invalid
	    canna-type-hankana with multi-segment-type-hankana
	
	* scm/skk.scm
	  - (skk-context-completion-nth, skk-context-set-completion-nth!,
	    skk-context-commit-raw, skk-context-set-commit-raw!,
	    skk-context-latin-conv, skk-context-set-latin-conv!,
	    skk-context-editor, skk-context-set-editor!,
	    skk-context-parent-context, skk-context-set-parent-context!,
	    skk-context-child-context, skk-context-set-child-context!,
	    skk-context-candidate-window, skk-context-set-candidate-window!,
	    skk-context-candidate-op-count,
	    skk-context-set-candidate-op-count!, skk-context-rk-context,
	    skk-context-set-rk-context!, skk-context-nth,
	    skk-context-set-nth!, skk-context-okuri, skk-context-set-okuri!,
	    skk-context-okuri-head, skk-context-set-okuri-head!,
	    skk-context-set-head!, skk-context-head, skk-context-kana-mode,
	    skk-context-set-kana-mode!, skk-context-state,
	    skk-context-set-state!): Replace with define-record
	  - (skk-context-new-internal): New alias of skk-context-new that
	    implicitly defined by define-record
	  - (skk-context-new): Replace value initialization with
	    skk-context-new-internal
	* scm/skk-editor.scm
	  - (skk-editor-context, skk-editor-set-context!, skk-editor-id,
	    skk-editor-set-id!, skk-editor-left-string,
	    skk-editor-set-left-string!, skk-editor-right-string,
	    skk-editor-set-right-string!): Replace with define-record
	  - (skk-editor-new-internal): New alias of skk-editor-new that
	    implicitly defined by define-record
	  - (skk-editor-new): Replace value initialization with skk-editor-new-internal
	
	* scm/prime.scm
	  - (prime-context-set-register-line!,
	    prime-context-set-preedit-line!, prime-context-last-word,
	    prime-context-set-last-word!, prime-context-mode,
	    prime-context-set-mode!, prime-context-candidates,
	    prime-context-set-candidates!, prime-context-nth,
	    prime-context-set-nth!, prime-context-set-learning-word!,
	    prime-context-learning-word, prime-context-state,
	    prime-context-set-state!): Replace with define-record
	  - (prime-context-new-internal): New alias of prime-context-new
	    that implicitly defined by define-record
	  - (prime-context-new): Replace value initialization with
	    prime-context-new-internal
	  - (prime-context-history-set!): Rewrite the implementation using
	    prime-context-set-history!
	  - (prime-context-history-get): Replace the implementation with
	    prime-context-history
	  - (prime-context-get-register-line): Replace the implementation with
	    prime-context-register-line
	  - (prime-context-get-preedit-line): Replace the implementation with
	    prime-context-preedit-line
	  - (prime-mode): Replace magic numbers with symbolic variable
	
	* scm/m17nlib.scm
	  - (m17nlib-context-id, m17nlib-context-set-id!,
	    m17nlib-context-showing-candidate,
	    m17nlib-context-set-showing-candidate!): Replace with define-record
	  - (m17nlib-context-new-internal): New alias of m17nlib-context-new
	    that implicitly defined by define-record
	  - (m17nlib-context-new): Replace value initialization with
	    m17nlib-context-new-internal
	
	* scm/tutcode.scm
	  - (tutcode-context-on?): Replace with alias of tutcode-context-on
	  - (tutcode-context-katakana-mode?): Replace with alias of
	    tutcode-context-katakana-mode
	  - (tutcode-context-rk-context, tutcode-context-set-rk-context!,
	    tutcode-context-set-on!, tutcode-context-set-katakana-mode!):
	    Replace with define-record
	  - (tutcode-context-new-internal): New alias of tutcode-context-new
	    that implicitly defined by define-record
	  - (tutcode-context-new): Replace value initialization with
	    tutcode-context-new-internal
	
	* scm/spellcheck.scm
	  - (spell-context-set-immediate-commit!, spell-context-last-word,
	    spell-context-set-last-word!, spell-context-mode,
	    spell-context-set-mode!, spell-context-left-string,
	    spell-context-set-left-string!, spell-context-right-string,
	    spell-context-set-right-string!, spell-context-candidates,
	    spell-context-set-candidates!, spell-context-candidate-window,
	    spell-context-set-candidate-window!,
	    spell-context-candidate-op-count,
	    spell-context-set-candidate-op-count!, spell-context-rk-context,
	    spell-context-set-rk-context!, spell-context-nth,
	    spell-context-set-nth!, spell-context-tail,
	    spell-context-set-tail!, spell-context-set-head!,
	    spell-context-head, spell-context-kana-mode,
	    spell-context-set-kana-mode!, spell-context-state,
	    spell-context-set-state!): Replace with define-record
	  - (spell-context-new-internal): New alias of spell-context-new that
	    implicitly defined by define-record
	  - (spell-context-new): Replace value initialization with
	    spell-context-new-internal
	
	* scm/hk.scm
	  - (hk-context-table-id, hk-context-set-table-id!,
	    hk-left-string-list, hk-set-left-string-list!,
	    hk-context-right-string-list, hk-context-set-right-string-list!):
	    Replace with define-record
	  - (hk-context-new-internal): New alias of hk-context-new that
	    implicitly defined by define-record
	  - (hk-context-new): Replace value initialization with
	    hk-context-new-internal
	  - (hk-left-string-append, hk-get-left-string, hk-get-right-string):
	    Replace dangerous numeric access to hk-context with symbolic
	    accessors
	
2004-09-19 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontext/src
	  - update label when index is set
	
2004-09-19 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminutcontext/src
	  - add uim project's copyright
	  - enable "commit_string" helper message
	
2004-09-19 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontext/src/candidatewindow.cpp
	  - fix prime's infinite loop bug reported by UTUMI-san.
	    thank you! :-)
	
2004-09-19 Masanari Yamamoto <h013177b@ice.nuie.nagoya-u.ac.jp>
	
	* fep/callback.c (shift_page_cb): bugfix shift page doesn't work
	
	* fep/{draw.c,escseq.c,uim-fep.c}: refactoring
	
2004-09-19 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-helper.h
	  - (uim_helpler_fd_writable): Rename to uim_helper_fd_writable to fix
	    a typo
	  - (uim_helper_fd_writable): Renamed from uim_helpler_fd_writable to
	    fix a typo
	* uim/uim-helper.c
	  - (uim_helpler_fd_readable): Rename to uim_helper_fd_readable to fix
	    a typo
	  - (uim_helper_fd_readable): Renamed from uim_helpler_fd_readable to
	    fix a typo
	  - (uim_helpler_fd_writable): Rename to uim_helper_fd_writable to fix
	    a typo
	  - (uim_helper_fd_writable): Renamed from uim_helpler_fd_writable to
	    fix a typo
	* uim/uim-helper-server.c
	  - (parse_content): Fix a function name uim_helpler_fd_writable()
	    with uim_helper_fd_writable()
	
2004-09-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/Makefile.am:
	  - Added dummy install-exec-local-applet & install-exec-local-gtk2
	
	
2004-09-18 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm : Support next-page-key and prev-page-key.
	
2004-09-17 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	  - add "commit_string" message
	
2004-09-17 kzk <mover@hct.zaq.ne.jp>
	
	* gtk/gtk-im-uim.c
	  - enable "commit_string" message
	    Now input-pad-ja works well.
	
2004-09-17 kzk <mover@hct.zaq.ne.jp>
	
	* helper/input-pad
	  - rename uim-input-pad --> uim-input-pad-ja
	  - rename input-pad.c --> input-pad-ja.c
	  - delete language selector list (seems ugly way)
	
	
2004-09-17 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/helper-candwin-gtk.c : Make candidate window shrinkable
	  by using GTK_TREE_VIEW_COLUMN_AUTOSIZE.
	
2004-09-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* test-ext.scm:
	 - Fixed test case. Thanks to Jun Inoue.
	
2004-09-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac:
	 - Fixed broken localedir setting.
	
2004-09-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* japanese-azik.scm:
	 - Added some rules.
	   Thanks to OHASHI Hideya    ohashi <at> kinkei co jp
	
2004-09-16 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp : Add dirty workaround for *over-the-spot*
	  style of flashplayer plugin for Linux (version 7.0.25.0).  This
	  hack ensures preedit area shown within the player's window.
	
2004-09-16 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* japanese-azik.scm: Rule format was wrong.
	  "." is wrong, " " is OK.
	
	
2004-09-15 Takuro Ashie <ashie@homa.ne.jp>
	
	* toolbar-standalone-gtk.c: Never expand button size.
	  - (size_request_cb): New callback function. Force set window size to
	    requested size.
	  - (main): Set above callback function for the toolbar window.
	
2004-09-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-util.h: some typo fixes
	
2004-09-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*anthy.scm (anthy-proc-input-state-with-preedit): some style fix related to 'if form
	
2004-09-14 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	  - add five new commands around im-switcher
	
	
2004-09-14 kzk <mover@hct.zaq.ne.jp>
	
	* This commit is Qt4 version of r1206
	
2004-09-14 kzk <mover@hct.zaq.ne.jp>
	
	* This commit enables "im_change" and "im_list_get"from helper.
	  and decide "uim" as default locale im
	
	* src/plugin.cpp
	  - (create): regard "uim" key as locale default im
	  - (createImList): append "uim" key
	  - (createLanguageList): append language for "uim" key
	
	* src/quiminputcontext.h
	  - add short_desc member to struct UIMInfo
	
	* src/quiminputcontext.cpp
	  - add QPtrList<QUimInputContext> contextList
	
	* src/qhelpermanager.h
	  - (parseHelperStrImChange): new function
	  - (sendImList): new function
	
	* src/qhelpermanager.cpp
	  - enable "uim_list_get" message
	  - enable "im_change" message
	  - (parseHelperStrImChange): new function
	  - (sendImList): new function
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Used AC_DEFINE_UNQUOTED instead of AC_DEFINE.
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/: Added ignore propset.
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Makefile.am: a line EXTRA_DIST moved.
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Added ignore propset.
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim.c:
	 -(uim_get_default_im_name): Added a feature to get default input method
	   name from scheme world.
	 -(uim_check_im_exist): New function.
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c:
	 -(im_uim_send_im_list): call uim_get_language_name_from_locale to
	   get long language name.
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* iso-639-1.def: New file including ISO 639-1 name <-> language name 
	   converting talble.
	   
	* uim-util.c:
	 -(uim_get_language_name_from_locale): New function.
	
2004-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c: Reverted some code to rev1194, because switcher doesn't
	  have enough quality now. But I'll remove this code until 0.4.4.
	 -(im_module_list): list modules both of "uim" and "uim-??".
	
2004-09-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/im-switcher-gtk.c: Fixed some compile time warnings.
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim.c: Removed a line "#include languages.h" because this file doesn't exist.
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk/gtk-im-uim.c:
	 -(im_uim_send_im_list): New function.
	 -(im_uim_parse_helper_str_im_change): New function.
	 -(im_module_list): Changed to list one IM "uim" only.
	 !!!!Note, you MUST call gtk-query-immodules-2.0!!!!
	
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im-switcher-gtk.c:
	 -(get_selected_im_name): New function.
	 -(send_message_im_change): New function.
	 -(change_this_widget_only): Changed to call send_message_im_change.
	 -(change_whole_desktop): Implemented. 
	 -(change_this_application_only): Implemented.
	
2004-09-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* toolbar-common-gtk.c
	  - (prop_button_released): Return FALSE on func end to propagate the
	    button_release event to button widget.
	
2004-09-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/toolbar-common-gtk.c:
	 - (helper_applet_prop_list_update)
	 - (uim_helper_toolbar_new):
	   Set button relief as GTK_RELIEF_NONE.
	
	* helper/toolbar-standalone-gtk.c
	 - (main): Added shadow for the window edge.
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/context.h
	 -(REQUEST_SURROUNDING_CB): macro -> enum
	 -(DELETE_SURROUNDING_CB):  macro -> enum
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim.c:
	 -(uim_change_input_method_engine): New API.
	 -(uim_get_im_short_desc):          New API.
	 -(uim_get_default_im_name):        New API.
	   
	* uim/uim-func.c
	 -(im_register_im): An argument added. short_desc is a description
	   of registered input method.
	
	* scm/im.scm
	 -(register-im): An argument added. short_desc is a description.
	   All caller changed.
	
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im-switcher-gtk.c:
	 -(change_this_widget_only): Fixed a memory leak.
	
2004-09-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* context.h, uim-func.c: add new callback functions.
	 - REQUEST_SURROUNDING_CB, DELETE_SURROUNDING_CB
	
2004-09-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/uim.c, uim.h, context.h: 1st step to implement surrounding text.
	 - uim_set_surrounding_text_cb: new API
	 - uim_set_surrounding_text: new API
	
2004-09-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/toolbar-standalone-gtk.c: Handle window moving more smartly.
	  - (button_press_event_cb): Renamed from button_press_event.
	  - (helper_win_set_position):
	    New function. Ensure to move whole window into screen.
	  - (motion_notify_event_cb): New callback function.
	  - (size_allocate_cb): New callback function.
	  - (button_release_event_cb): New callback function.
	  - (main): Set default window position to right bottom corner of
	    the screen.
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im-switcher-gtk.c
	 -(change_this_widget_only): Second argument of gtk_tree_selection_get_selected
	   is a pointer of pointer of GtkTreeModel.
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/: Renamed silly filename typo. toobar-standalone-gtk.c -> too*l*bar-standalone-gtk.c
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Added AC_DEFINE(GNOMELOCALEDIR)
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/: Renamed some files for consistency.
	 helper-toolbar-gtk.c ->         toolbar-standalone-gtk.c
	 helper-toolbar-gtk-systray.c -> toolbar-systray-gtk.c
	 helper-applet.c ->              toolbar-applet-gnome.c
	 helper-toolbar-common-gtk.c ->  toolbar-common-gtk.c
	 
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper-toolbar-common-gtk.c:
	 -(helper_applet_prop_list_update): Used gtk_widget_set_size_request
	    to button widgets.
	
2004-09-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* configure.ac: Show some configture results.
	
2004-09-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/helper-applet.c
	  - (PANEL_APPLET_BONOBO_FACTORY): Removed needless semicolon.
	
2004-09-12 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/helper-toolbar-gtk.c: Added a handle.
	  - (hadle_expose_event): New function for drawing handle.
	  - (main): Added a drawing area for the handle.
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*im-switcher-gtk.c:
	 -(parse_helper_str_im_list): Reduced unneeded treeview updating.
	    Fixed memory leaking.
	
	
2004-09-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im-switcher-gtk.c: New function.
	 -(reload_im_list): New function.
	 -(parse_helper_str): New function.
	 -(parse_helper_str_im_list): New function.
	 -(change_this_widget_only): New function.
	 -(change_whole_desktop): New function.
	 -(change_this_application_only): New function.
	 -(create_switcher_treeview): Renamed from switcher_treeview_create
	    for consistency.
	
2004-09-11 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/connection.cpp : Change TRANSPORT_MAX from 100 to 20 in
	  order to make Emacs's XIM happy.
	(XConnection::writeProc) : Use pending Tx queues to enable
	  synchronous XIM Protocol event flow.
	
	* xim/xim.h (class Connection) : Adding new protected functions;
	  setSyncFlag, unsetSyncFlag, hasSyncFlag,
	  setPreeditStartSyncFlag, unsetPreeditStartSyncFlag, and
	  hasPreeditStartSyncFlag.  Adding new protected lists;
	  mPendingTxQ, and mPPendingTxQ.  Adding new private function
	  xim_sync_reply.  Adding new private variables; mSyncFlag, and
	  mPreeditStartSyncFlag.
	
	* xim/ximtrans.cpp (Connection::OnRecv) : Handle XIM_SYNC_REPLY
	  and XIM_PREEDIT_START_REPLY upon receive.
	(Connection::setSyncFlag) : Implement.
	(Connection::unsetSyncFlag) : Ditto.
	(Connection::hasSyncFlag) : Ditto.
	(Connection::setPreeditStartSyncFlag) : Ditto.
	(Connection::unsetPreeditStartSyncFlag) : Ditto.
	(Connection::hasPreeditStartSyncFlag) : Ditto.
	(Connection::xim_open) : Change synchronous-event-mask so that XIM
	  client not sending synchronous flag to XIM server.
	(Connection::xim_sync_reply) : Implement.  Unset the synchronous
	  flag and then send pending Tx packets.
	(Connection::xim_preedit_start_reply) : Ditto, but this is not
	  enabled for the moment since XIM_PREEDIT_START_REPLY is not sent
	  synchronously by XIM library on some circumstances.
	
	* xim/ximic.cpp (XimIC::OnKeyEvent) : Push XIM_COMMIT event when
	  receiving UPDATE_MODE by InputContext::pushKey().
	(XimIC::send_key_event) : Use push_packet.
	
	* xim/ximim.cpp (XimIM_impl::forward_event) : No need to send
	  XIM_SYNC_REPLY because of change of synchronous-event-mask.
	
	* xim/convdisp.cpp (ConvdispOs::update_preedit) : Use
	  push_passive_packet() again.
	
	* xim/ximserver.h : Indentation fixes.
	
2004-09-11 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/README
	* qt/quiminputcontextplugin/INSTALL
	  - documentation update
	
2004-09-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* test/run-test.scm:
	 -(add-load-path): Added "." to the load path.
	* test/test-ext.scm: Added test name.
	
2004-09-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* input-pad.c: Added language selector.
	  - (language_selector_create): New function.
	  - (input_table_create): New function.
	  - (input_pad_create): Renamed from inputpad_create for consistency.
	
2004-09-10 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin
	  - commit autotoolized version of UimQt
	
2004-09-10 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextpluing
	  - temporary delete UimQt
	
2004-09-10 Takuro Ashie <ashie@homa.ne.jp>
	
	* configure.ac: Fixed typo.
	
2004-09-09 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*uim/siod.h, uim/slib.c: implement `case'. Thanks to Jun Inoue. 
	*test/test-ext.scm: new file. test `case'
	
2004-09-09 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*helper/Makefile.am: add -f flag to rm. Thanks to Jun Inoue.
	
2004-09-09 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/Makefile.am: do not include autogenerated config.h in EXTRA_DIST
	
2004-09-09 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/connection.cpp (writeProc) : Finally fixes the occasional
	  crash of uim-xim.
	* xim/xdispatch.h (class WindowIf) : Indentation fixes.
	
2004-09-09 kzk <mover@hct.zaq.ne.jp>
	
	* This commit aims to follow the API change of
	  Qt-immodule r123.
	
	* quiminputcontext.h, quiminputcontext.cpp
	  - change "virtual QCString identifierName()" to "virtual QString identifierName()"
	  - change "virtual QCString language()" to "virtual QString language()"
	  - now (m_imname) is QString
	  - now (m_lang) is QString
	
2004-09-09 kzk <mover@hct.zaq.ne.jp>
	
	* helper/input-pad.c
	  - use tab widget (GtkNotebook)
	  - add hiragana & katakana table
	  - (buttontable_create): add empty str check
	
2004-09-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* input-pad.c:
	 -(buttontable_create): Used GtkTable instead of GtkHButtonBox.
	
2004-09-08 kzk <mover@hct.zaq.ne.jp>
	
	* helper/input-pad.c
	  - initial commit of input-pad
	
2004-09-08 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm :	(skk-append-okuri-string) : New function to allow
	  (("A" "a") ("X" "x") ..) style result of rk-push-key! 
	(skk-proc-state-direct) : Allow (("A" "a") ("X" "x") ..) style
	  result of rk-push-key! 
	(skk-proc-state-kanji) : Ditto.
	(skk-proc-state-okuri) : Ditto.
	
2004-09-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* canna.scm: allow (("A" "a") ("X" "x") ..) style result of rk-push-key!
	
2004-09-08 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm (skk-proc-state-direct-no-preedit) : Change to
	  handle symbol? key lastly.  Thanks to Masaki Yatsu
	  <yatsu@yatsu.info>.
	(skk-proc-state-direct) : Ditto.
	
2004-09-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* xim/Makefile.am: LOCALEDIR is now defined at configure.ac, so removed from Makefile.am.
	
2004-09-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/im-switcher-gtk.c: Added mock up functions.
	 - (load_configration): New function.
	 - (save_configration): New function.
	
2004-09-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*anthy.scm(anthy-proc-input-state-with-preedit): allow (("A" "a") ("X" "x") ..) style result of rk-push-key!
	
2004-09-07 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/rk.scm (rk-proc-tail) : Comment out the code using
	  rk-merge-seqs for the moment.
	* scm/skk.scm : Revert r1151 changes.
	
2004-09-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* scm/rk.scm: add comments, fix non EUC-JP char
	
2004-09-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/skk-dic.c: check if skk_dic is null or not.
	
2004-09-07 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/rk.scm (rk-merge-seqs) : New function to combine two lists.
	(rk-proc-tail) : Use rk-merge-seqs to get "n1" sequence as "$B$s(B1".
	  Thanks to Jun Inoue <jun0@nerdshack.com>.
	* scm/skk.scm (skk-proc-state-direct) : Remove hackish code to get
	  "n1" as "$B$s(B1".
	(skk-proc-state-kanji) : Ditto.
	
2004-09-07 kzk <mover@hct.zaq.ne.jp>
	
	* scm/canna.scm
	  - this commit relates to r1140 (Extending HELPER-PROTOOL
	    and add radio button to the helper menu).
	
	
2004-09-07 kzk <mover@hct.zaq.ne.jp>
	
	* helper/Makefile.am: fix typo
	
2004-09-07 kzk <mover@hct.zaq.ne.jp>
	
	* scm/skk.scm
	  - this commit relates to r1140 (Extending HELPER-PROTOOL
	    and add radio button to the helper menu).
	
2004-09-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im-switcher-gtk.c: New file. Mock up for input method switcher.
	
2004-09-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-helper-candwin-gtk -> uim-candwin-gtk (renamed.)
	* uim-helper-toolbar-gtk -> uim-toolbar-gtk (renamed.)
	* uim-helper-toolbar-gtk-systray -> uim-toolbar-gtk-systray (renamed.)
	
	Old name such as uim-helper-candwin-gtk will be replaced with symbolic
	link. But I'm not confident in my install-exec-local target. Please test
	it.
	
	
2004-09-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Added AC_MSG_RESULT.
	
2004-09-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/intl.c: new file to support gettext.
	* uim/intl.h: new file to support gettext.
	Thanks to Kouhei Sutou <kou@cozmixng.org>
	
2004-09-06 kzk <mover@hct.zaq.ne.jp>
	
	* UimQt: added "thread" parameter to qmake's project file
	
2004-09-05 kzk <mover@hct.zaq.ne.jp>
	
	* scm/skk.scm: fixed typo
	
2004-09-05 kzk <mover@hct.zaq.ne.jp>
	
	* helper/helper-toolbar-common-gtk.c
	  - indentation fix
	  - draw radio button only when state data is available
	
2004-09-05 kzk <mover@hct.zaq.ne.jp>
	
	* This commit add radio button to helper-toolbar for
	  indicating the current state of IM. To achieve this,
	  I extend the HELPER-PROTOCOL. Please look at the change
	  of the document. This function is now for only generic-im
	  and anthy.
	
	* helper/helper-toolbar-common-gtk.c
	  - use GTK_CHECK_MENU_ITEM and draw_as_radio
	
	* generic.scm, anthy.scm
	  - update prop-list at the appropriate timing
	  - add "*" to message
	
2004-09-05 kzk <mover@hct.zaq.ne.jp>
	
	* scm/generic.scm
	  - fix wrong helper message of (generic-update-prop-list)
	
2004-09-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*  slib.c: move backtrace link to leval function.
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Release 0.4.3
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* AUTHORS, gnuify-changelog.pl: Added new committer's names!
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* canna.scm: Update property label in canna-mode-handler.
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* generic.scm: Update property label in generic-mode-handler.
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac : Removed a commented line.
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.scm: update label property in anthy-mode-handler.
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm: update label property in skk-mode-handler.
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm: Updated with Hiroyuki Komatsu's new version.
	 - Fixed some bugs related on tcode.
	 - Fixed a bug misaligned candidate window.
	 - Default setting changed. prime-pseude-mode-cursor? #t -> #f.
	
2004-09-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* tutcode.scm: Update label propertyin mode-handler.
	
2004-09-02 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (ConvdispOs::update_preedit) : use
	  push_packet() instead of push_passive_packet() to prevent
	  getting XIM_ERROR from some clients.
	
2004-09-02 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (ConvdispOs::move_candwin) : Set candidate
	  window near the spotlocation in case ICA_SpotLocation is
	  available.
	(ConvdispRw::move_candwin) : Ditto.
	
2004-09-02 Takuro Ashie <ashie@homa.ne.jp>
	
	* japanese.scm:
	  - (ja-raw-string-to-valid-roma): Removed needless code.
	
2004-09-02 Takuro Ashie <ashie@homa.ne.jp>
	
	* Added kana->roma conversion on F9 and F10 pressing on uim-anthy.
	  But at this time, this feature does not consider about ja-kana-rule
	  and ja-azik-rule yet. At least, it does not work well with
	  ja-kana-rule. I'll fix it later.
	
	* anthy.scm: Modified to store raw key string for kana->roma conversion.
	  - (anthy-context-left-raw-string): New procedure.
	  - (anthy-context-set-left-raw-string!): New procedure.
	  - (anthy-context-right-raw-string): New procedure.
	  - (anthy-context-set-right-raw-string!): New procedure.
	  - (anthy-context-new): Added two new entries for buffering raw key
	    string to anthy context.
	  - (anthy-make-raw-string): New procedure.
	  - (anthy-make-whole-raw-string): New procedure.
	    Make valid whole roma-ji string from bufferd key string.
	  - (anthy-flush): Clear raw string.
	  - (anthy-proc-input-state-no-preedit): Added raw-string handling
	    functions.
	  - (anthy-proc-input-state-with-preedit): Added raw-string handling
	    functions and some comments.
	
	* japanese.scm:
	  - (ja-rk-rule): Added ("l" "t" "u") and ("l" "t" "s" "u") entry.
	  - (ja-vowel-table): New table. For detecting vowel in a string.
	  - (ja-consonant-table): New table. For detecting consonant in a string.
	  - (ja-default-small-tsu-roma): New variable.
	    Added for auto kana->roma conversion.
	  - (ja-vowel?): New procedure.
	    Detect whether the character is vowel or not.
	  - (ja-consonant?): New procedure.
	    Detect whether the character is consonant or not
	  - (ja-string-list-to-wide-alphabet): New procedure.
	    Convert characters in string-list to multi-byte alphabet.
	  - (ja-raw-string-to-valid-roma): New procedure.
	    Fix a broken roma-ji string to valid one.
	  - (ja-raw-string-list-to-valid-roma): New procedure.
	    Fix a broken roma-ji string list to valid one.
	  - Added some comments.
	
2004-09-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* pyload.scm:
	 -(pinyin-big5): indicate locale "zh".
	
2004-09-01 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-helper.c, uim-helper-server.c, uim-helper.h, uim-table.c: fix warnings
	
2004-08-31 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm (skk-proc-state-direct-no-preedit) : Move
	  key handlings without preedit state from skk-proc-state-direct.
	  Remove unnecessary skk-update-mode.
	
	(skk-proc-state-direct) : Move key handlings without preedit state
	  to skk-proc-state-direct-no-preedit.  Add skk-wide-latin-key?,
	  skk-latin-key?, skk-latin-conv-key?, skk-kanji-mode-key?,
	  skk-hankaku-kana-key?, and skk-kana-toggle-key? key handlings
	  according to ddskk's behavior.  Remove redundant code.  Fix a
	  bug that preedit was not updated correctly with commit-raw when
	  key is symbol?.  Handle "n1" sequence properly.
	
	(skk-proc-state-kanji) : Add some comments.  Remove unnecessary
	  skk-update-mode.  Handle "n1" sequence properly.
	
2004-08-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/uim-ipc.c
	 - rename FILE * type _handler to _fp
	 - close fp in case of feof
	
2004-08-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm (skk-proc-state-kanji) : Add two lines for
	skk-kanji-mode-key? condition, which was missed to commit in
	r1118.
	
2004-08-27 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm (skk-special-midashi-key?) : New key definition for
	  supporting Setsubi-ji and Settou-ji conversion.  The name of
	  definition is taken from "skk-special-midashi-char-list" in
	  original skk.
	(skk-proc-state-kanji) : Change some behavior according to ddskk
	  (With skk-begin-conv-key?, don't do kanji conversion unless
	  skk-context-head have some strings, otherwise just do
	  flush. With skk-kanji-mode-key?, commit string and create a new
	  conversion state.  Add alphabet key checking for checking
	  shift-key-mask for okuri state. With skk-kana-toggle-key?, don't
	  flush the context unless skk-contex-head have some strings). Add
	  Settou-ji conversion with skk-special-midashi-key?.
	(skk-proc-state-converting) : Add Setsubi-ji conversion.
	
2004-08-26 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontextplugin: disable debug and warning as default
	
2004-08-26 kzk <mover@hct.zaq.ne.jp>
	
	* doc/HELPER-PROTOCOL
	  - fix trivial mistake
	  - add the rule around IMEngine-switching
	
2004-08-25 Masanari Yamamoto <h013177b@ice.nuie.nagoya-u.ac.jp>
	
	* fep/ new option -o: on the spot style
	
2004-08-25 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontextplugin-qt4/plugin.h
	* quiminputcontextplugin-qt4/plugin.cpp
	  - rename QSimpleInputContextPlugin to UimInputContextPlugin
	    (the pained remains of porting...)
	
2004-08-25 kzk <mover@hct.zaq.ne.jp>
	
	* This commit aims to add temporal candidate window.
	  Qt4-tp1 seems not provide the widget for candwin,
	  so I decide not to implement candwin until qt4-tp2 release.
	  All the codes except GUI part is moved from uim-qt3.
	
	* quiminputcontextplugin-qt4/quiminputcontextplugin.pro
	  - add candidatewindow.h and candidatewindow.cpp
	* quiminputcontextplugin-qt4/quiminputcontext.h
	  - restore candwin around code
	* quiminputcontextplugin-qt4/quiminputcontext.cpp
	  - restore candwin around code
	* quiminputcontextplugin-qt4/candidatewindow.h
	  - added
	* quiminputcontextplugin-qt4/candidatewindow.cpp
	  - added
	* quiminputcontextplugin-qt4/qhelpermanager.cpp
	  - small loop refactoring
	
	* quiminputcontextplugin-qt4/edittest/main.cpp
	  - remove copyright
	
2004-08-25 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontextplugin/candidatewindow.cpp
	  - more valid candidate data's clear
	
2004-08-24 kzk <mover@hct.zaq.ne.jp>
	
	* This commit is small refactoring. The contents of uim-qt isn't
	  changed.
	
	* quiminputcontextplugin/quiminputcontext.cpp
	  - remove unnecessary #include
	  - move the codes of deactivating candwin to candidatewindow.cpp
	
	* quiminputcontextplugin/candidatewindow.cpp
	  - remove unnecessary #include
	  - implement deactivateCandwin()
	
	* quiminputcontextplugin/candidatewindow.h
	  - remove unnecessary #include
	  - remove unnecessary class
	  - remove (setCandidateIndex)
	  - declare (slotCandidateSelected) as protected
	
2004-08-24 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/candwin/uim-helper-candwin-qt.h
	* qt/qtkde-helper/src/candwin/uim-helper-candwin-qt.h
	  - move codes from qt-uim's candidate window
	
	  - (FOUNDED BUG): the position of candwin is invalid.
	    Possibly my misunderstanding of mapToGlobal(),
	    mapFromGlobal(), etc.
	
2004-08-24 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin-qt4/plugin.cpp
	* qt/quiminputcontextplugin-qt4/quiminputcontext.cpp
	* qt/quiminputcontextplugin-qt4/qhelpermanager.h
	* qt/quiminputcontextplugin-qt4/plugin.h
	* qt/quiminputcontextplugin-qt4/edittest
	* qt/quiminputcontextplugin-qt4/edittest/edittest.pro
	* qt/quiminputcontextplugin-qt4/edittest/main.cpp
	* qt/quiminputcontextplugin-qt4/edittest/README
	* qt/quiminputcontextplugin-qt4/quiminputcontext.h
	* qt/quiminputcontextplugin-qt4/quiminputcontext_with_slave.cpp
	* qt/quiminputcontextplugin-qt4/install
	* qt/quiminputcontextplugin-qt4/README.ja
	* qt/quiminputcontextplugin-qt4/COPYING
	* qt/quiminputcontextplugin-qt4/quiminputcontext_with_slave.h
	* qt/quiminputcontextplugin-qt4/qhelpermanager.cpp
	* qt/quiminputcontextplugin-qt4/quiminputcontextplugin.pro
	* qt/quiminputcontextplugin-qt4/README.en
	  - this is the initial commit of uim-qt for 'qt4' with Yamaken's
	    qt-x11-immodule-qt4.0.0-tp1-20040822.diff.gz.
	    Because of the big API change between qt3 and qt4, we cannot
	    port CandidateWindow directly. So this commit doesn't include
	    CandidateWindow. Now I'm working on it.
	
	  - edittest is the program for test inputting
	
	  - (FOUNDED BUG): cannot activate IM on QTextEdit
	
2004-08-23 kzk <mover@hct.zaq.ne.jp>
	
	* scm/skk.scm
	  - no need to commit string when uim_set_candidate_index is called.
	    (NOTE) this commit is possibly unsafe, but fixes the problem of
	    using uim-skk via uim-qt. I confirm this change doesn't affect
	    the behavior of uim-gtk.
	
2004-08-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/m17nlib.c (init_m17nlib): add null check of imlist
	
2004-08-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/context.h: add declaration of uim_init_m17nlib(), uim_quit_m17nlib()
	
2004-08-21 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontextplugin/install
	  - the name of IM related plugin's dir was changed
	
2004-08-21 Masanari Yamamoto <h013177b@ice.nuie.nagoya-u.ac.jp>
	
	* fep/uim-fep.c (set_signal_handler):
	  Add initialization of sigaction#sa_flags.
	
2004-08-21 Masanari Yamamoto <h013177b@ice.nuie.nagoya-u.ac.jp>
	
	* fep/escseq.c (set_attr): Fix the bug enbuged at 1102.
	
2004-08-21 Masanari Yamamoto <h013177b@ice.nuie.nagoya-u.ac.jp>
	
	* fep/str.c
	  - (width2byte, width2byte2): bug fix
	
	* fep/escseq.c
	  - (set_attr): bug fix
	
	* fep/draw.c
	  - (draw_statusline): Add NULL check.
	
2004-08-20 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/main.cpp (get_uim_info) : Add uim_release_context() after
	  getting uim engine information.  It seems that uim-xim didn't do
	  this from the very early version until now...
	
2004-08-19 kzk <mover@hct.zaq.ne.jp>
	
	* This commit aims to cut out the cost of recreating temporal uim_context
	
	* quiminputcontextplugin/ChangeLog
	  - obsolete
	
	* quiminputcontextplugin/quiminputcontext.h
	  - (createUimInfo): new function
	  - (UIMInfo): new struct
	
	* quiminputcontextplugin/quiminputcontext.cpp
	  - (uimInfo): new variable
	  - (createUimInfo): new function
	
	* quiminputcontextplugin/qhelpermanager.cpp
	  - use uimInfo instead of recreating temporal uim_context
	
2004-08-19 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/xim.h (class RxPacket) : Add destructor.
	(class XimIC) : Change the declaration of destructor as not virtual. 
	* xim/ximic.cpp (release_font_set) : Plug leak.
	* xim/ximpacket.cpp : Mark all the virtual functions as "virtual".
	(RxPacket_impl::~Rxpacket_impl) : Plug leak.
	* xim/ximim.cpp (class XimIM_impl) : Mark all the virtual
	  functions as "virtual".
	* xim/main.cpp (main) : Suppress warning.
	* xim/ximserver.cpp (InputContext::get_preedit_string) : Ditto.
	* xim/canddisp.h (class Canddisp) : Change the declaration of
	  destructor as not virtual.
	* xim/canddisp.cpp (canddisp_singleton) : Make char *command as
	  static to prevent calling candwin_command() every time.
	* xim/convdisp.h (class Convdisp) : Mark some functions as pure
	  virtual method.
	* xim/convdisp.cpp (class PeWin) : Mark virtual function as
	  "virtual".
	(class ConvdispOv) : Delete set_focus() and unset_focus(), and use
	  parent class's one.
	(class ConvdispOs) : Ditto.
	(class ConvdispRw) : Add move_candwin().
	(Convdisp::set_focus) : Move from child classes.
	(Convdisp::unset_focus) : Ditto.
	
2004-08-18 kzk <mover@hct.zaq.ne.jp>
	
	* This change aims to enable IM switching from helper toolbar
	
	* quiminputcontextplugin/quiminputcontext.h, quiminputcontext.cpp
	  - (changeUimContext) : new function
	  - (createUimContext) : rename from createUC
	
	* quiminputcontextplugin/qhelpermanager.cpp
	  - add codes to enable IM switching from helper toolbar
	
2004-08-17 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (updatePreedit) Revert a wrong change in r1093. It had caused
	    weird update about selection moving. We must always commit preedit
	    string although the new string is equivalent to old one. Consider
	    preedit attributes
	* qt/quiminputcontextplugin/ChangeLog
	  - Update. Is this file obsolete?
	
2004-08-17 kzk <mover@hct.zaq.ne.jp>
	
	* doc/00INDEX
	  - add HELPER-CANDWIN and HELPER-PROTOCOL
	
	* doc/HELPER-PROTOCOL: initial commit
	  (NOTE: when you create new helper protocol,
	   please add your rule to this file.)
	
2004-08-17 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* doc/XIM-SERVER : Change description about uim-xim according to
	  new feature.
	* README.ja : Ditto.
	
2004-08-17 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/locale.cpp (getLocale) : Constify.
	* xim/ximserver.cpp (XimServer::XimServer) : Constify.
	(XimServer::createContext) : Add context to ic_list.
	(XimServer::deleteContext) : New function.  Remove selected
	  context from ic_list.
	(XimServer::changeContext) : New function.  Change uim engine of
	  all context belonging to the XimServer with selected engine.
	(XimServer::setupConnection) : Conditionalize to setup @server=uim
	  for default uim engine.
	(XimServer::getIMName) : New function.
	(XimServer::getIMLang) : New function.
	(XimServer::set_im) : New function.
	(InputContext::InputContext) : Constify.  Change sequence of
	  initialization.
	(InputContext::~InputContext) : Delete context.
	(InputContext::createUimContext) : Constify.
	(InputContext::changeUimContext) : New function.
	(InputContext::update_prop_list) : Add uim engine selection property.
	(InputContext::update_prop_label) : Add uim engine selection property.
	* xim/main.cpp (version_name) : Constify.
	(usage) : Constify.  Add --list and --engine=ENGINE.
	(uim_info) : New list containing information about uim engines.
	(get_uim_info) : New function.
	(print_uim_info) : New function.
	(parse_args) : Add default uim engine selection feature with
	  --engine=ENGINE, and show available uim engines with --list.
	(helper_str_parse) : Change the uim context when reading
	  "prop_engine_".
	(main) : Setup default server @im=uim.
	* xim/ximserver.h : Constify.  Add some new prototype.
	
2004-08-15 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontextplugin/candidatewindow.h, quiminputcontextplugin/candidatewindow.cpp
	  - (deactivateCandwin): new function
	  - (activateCandwin): renamed from activateCandidate
	
	* quiminputcontextplugin/quiminputcontext.cpp
	  - not send IMCompose event when new preedit and old preedit is same
	
	* quiminputcontextplugin/quiminputcontext.h
	  - avoid unnecessary object copying
	
2004-08-14 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Follow new API of the immodule for Qt
	
	* qt/quiminputcontextplugin/quiminputcontext.h
	  - (filterEvent) Change the argument to const to follow the API change
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (filterEvent) Change the argument to const to follow the API change
	
2004-08-12 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* scm/skk.scm (skk-commit) : Delete annotation-removing code since
	  this has already been done in skk-prepare-commit-string.
	(skk-proc-state-direct) : Fix typo in comment.
	(skk-proc-state-converting) : Remove redundant code.
	
2004-08-12 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximim.cpp (XimIM_impl::forward_event) : Fix endian
	  conversion on xevent forwarding.  This fixes XIM behavior on gtk+2
	  text widget.
	
2004-08-10 Masahito Omote <omote@utyuuzin.net>
	
	* uim/prime.c(primer, primew): Initialize as NULL.
	
2004-08-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/: Fixed a color related bug. Thanks to Masanari Yamamoto.
	
2004-08-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c:
	 -(focus_in):  Install snooper if not installed.
	 -(focus_out): Remove snooper if installed.
	
2004-08-10 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontextplugin/plugin.cpp
	  - use QUimInputContextWithSlave instead of QUimInputContext
	* quiminputcontextplugin/quiminputcontext.cpp
	  - remove unnecessary #include
	  - event handling refactoring
	* quiminputcontextplugin/AUTHORS
	  - add Yamaken's name
	* quiminputcontextplugin/THANKS
	  - add pakager's name
	* quiminputcontextplugin/quiminputcontext_with_slave.[cpp,h]
	  - the class to deal with dead/multi key with using QSimpleInputContext
	* quiminputcontextplugin/quiminputcontextplugin.pro
	  - add two files
	
2004-08-04 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximic.cpp (XimIC::setFocus) : Don't update preedit, and only
	  update candidate window.
	(XimIC::reset_ic) : Implement sending uncommitted strings on
	  XIM_RESET_IC_REPLY. Clear input context after sending the
	  strings.
	* xim/ximserver.cpp (InputContext::get_preedit_string) : New
	  procedure.
	(InputContext::clear) : Implement, and change the type of return
	  value.
	(InputContext::candidate_deactivate) : Add condition check.
	* xim/convdisp.cpp (Convdisp::clear_preedit) : New procedure.
	(Convdisp::move_candwin) : Divided from update_preedit()
	(Convdisp::get_pe) : New procedure to get preedit strings
	* xim/Makefile.am : Remove AM_CPPFLAGS and add its content to
	  uim_xim_CPPFLAGS.
	* xim/ximserver.h : (InputContext) : Add get_preedit_string() as a
	  member.  Change the type of return value for clear().
	* xim/convdisp.h (Convdisp) : Add get_pe(), clear_preedit() and
	  move_candwin() as a member.
	
2004-08-04 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/connection.cpp : More indentation fixes. Hopefully this
	  would	be the last one.
	* xim/xim.h : Ditto
	* xim/ximtrans.cpp : Ditto
	* xim/main.cpp : Ditto
	* xim/ximpacket.cpp : Ditto
	* xim/xdispatch.h : Ditto
	* xim/ximic.cpp : Ditto
	* xim/convdisp.cpp : Ditto
	* xim/ximserver.h : Ditto
	
2004-08-04 Takuro Ashie <ashie@homa.ne.jp>
	
	* uim.pc.in:
	  - Added -L{libdir}. Thanks to Seiichi SATO <ssato@sh.rim.or.jp>.
	
2004-08-04 Takuro Ashie <ashie@homa.ne.jp>
	
	* uim/uim.c
	  - (uim_get_mode_name): Added range check for uc->modes.
	
2004-08-04 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/candidatewindow.cpp
	  - revert the change of candidate window height handling
	
2004-08-03 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Follow new API of the immodule for Qt
	
	* qt/quiminputcontextplugin/plugin.cpp
	  - (description): New function to follow new immodule API
	  - (displayName): Add language indication
	
2004-08-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/: You can assign preedit fore/back ground color by -C option.
	        E.G. $uim-fep -C white:black -e jed 
	
	
2004-08-02 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/helper-candwin-gtk.c (read_cb) : Add code which closes fd and
	exit program upon reading end-off-file.
	
2004-08-02 kzk <mover@hct.zaq.ne.jp>
	
	* developer's document: update comment of shift_page_cb
	
2004-08-02 kzk <mover@hct.zaq.ne.jp>
	
	* src/quiminputcontextplugin/candidatewindow
	  - avoid flicker when popup() is called
	  - more proper caluculation of candwin's height
	  - change column's resizing mode
	
2004-08-02 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximserver.cpp (InputContext::InputContext) : Set focused
	context while InputContext is constructed, since some clients
	(rxvt, kterm) don't call XIM_SET_IC_FOCUS initially.
	
2004-08-02 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontext.cpp, qhelpermanager.cpp
	  - implement proper focusedInputContext handling
	    (this commit fixes helper messaging problem)
	* quiminputcontext.h
	  - delete unnecessary slot
	
2004-08-02 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper
	  - delete unnecessary files around autotools
	  - add bootstrap script
	
2004-08-02 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/convdisp.cpp (ConvdispOv::update_preedit) : Move
	candidates window only when the context has focus.
	(ConvdispOs::update_preedit) : Ditto.
	
2004-08-02 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin
	  - implement shift_page_cb
	  - implement proper destructor of CandidateWindow
	  - some indentation fixes
	
2004-08-02 Takuro Ashie <ashie@homa.ne.jp>
	
	* scm/anthy.scm
	  - (anthy-update-prop-label): Fixed indent.
	
	* scm/canna.scm
	  - Enabled to switch input rule between "roma" and "kana".
	    Changes are almost same with anthy.
	  - Some minor bug fix.
	
2004-08-01 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* xim/ximic.cpp (XimIC::set_ic_attr) : Tidy up a bit.
	
	* xim/convdisp.cpp (ConvdispOs::update_preedit) : Make candidates
	window present at lower-left corner of client window when
	on-the-spot style conversion.
	
2004-08-01 kzk <mover@hct.zaq.ne.jp>
	
	* This commit is in accordance with Takuro's refactoring of uim-gtk
	
	* This will fix these problems
	  - label doesn't sync on mouse cliking.
	  - selection is gone on selecting empty row by mouse clicking.
	    (surplus items aren't added now)
	  - performance improvement
	
	* But adjustWindowSize() doesn't properly deal with list width
	
2004-08-01 Takuro Ashie <ashie@homa.ne.jp>
	
	* scm/anthy.scm
	  - (anthy-update-prop-label): Now helper toolbar will be synchronized
	    with anthy-context-input-rule value.
	
2004-08-01 Takuro Ashie <ashie@homa.ne.jp>
	
	* scm/anthy.scm
	  - Enabled to switch input rule between "roma" and "kana" by selecting
	    it from helper toolbar. But helper toolbars aren't synchronized
	    with its state yet.
	  - (anthy-context-input-rule, anthy-context-set-input-rule):
	    New procedures.
	  - (anthy-input-rule-roma, anthy-input-rule-kana,
	    anthy-input-rule-azik): New constants.
	  - (anthy-context-new): Added a flag for input rule.
	  - (anthy-make-whole-string, anthy-proc-input-state-no-preedit,
	    anthy-proc-input-state-with-preedit): Replaced using-kana-table?
	    with anthy-context-input-rule.
	  - (anthy-prop-handler): Set input rule for rk context.
	
2004-08-01 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* slib.c: preliminary implementation of backtrace. (this can be backed out later.)
	
2004-07-31 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* slib.c: some indent fix. mark some functions static
	
2004-07-31 Takuro Ashie <ashie@homa.ne.jp>
	
	* gtk/gtk-im-uim.c
	  (cand_activate_cb): Removed unused variables.
	
2004-07-31 Takuro Ashie <ashie@homa.ne.jp>
	
	* gtk/gtk-im-uim.c
	  - (cand_activate_cb): Removed needless code.
	  - (im_module_list): Fixed indent.
	
2004-07-31 Takuro Ashie <ashie@homa.ne.jp>
	
	* gtk/gtk-im-uim.c
	  - Fixed indent.
	
2004-07-31 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/helper-candwin-gtk.c : include <sys/types.h> and <unistd.h>
	for read(2).
	
2004-07-31 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/helper-candwin-gtk.c (read_cb) : Change to use read()
	instead of fgets() and not to return at line containing only "\n".
	This changes make all the input buffer read while the callback is
	in action.
	
	* xim/main.cpp (helper_str_parse) : Hide candidate window when
	when getting "focus_in" message from some other input contexts via
	helper.
	
	* xim/ximic.cpp (setFocus) : When input context get focus, update
	and show its candidate window if the context has active
	candidates, and hide if there is no active candidate with the
	context.
	
	* xim/ximserver.h : Add candidate status with InputContext.
	(candidate_update) : New
	(hasActiveCandwin) : New
	(mCandwinActive) : New
	(current_cand_selection) : New
	(active_candidates) : New
		
	* xim/ximserver.cpp : Add candidate status with Input Context.
	(KeyState::keyState) : Simplify.  Add
	UKey_Shift_key, UKey_Control_key, UKey_Alt_key, UKey_Super_key,
	UKey_Hyper_key.
	
2004-07-31 Etsushi Kato <ekato@ees.hokudai.ac.jp>
	
	* helper/helper-candwin-gtk.c : indentation fixes
	* xim/connection.cpp : indentation fixes
	* xim/locale.cpp : indentation fixes
	* xim/xim.h : indentation fixes
	* xim/ximtrans.cpp : indentation fixes
	* xim/ximic.cpp : indentation fixes
	* xim/ximim.cpp : indentation fixes
	* xim/main.cpp : indentation fixes
	* xim/ximserver.cpp : indentation fixes
	* xim/canddisp.cpp : indentation fixes
	* xim/convdisp.cpp : indentation fixes
	* xim/ximpacket.cpp : indentation fixes
	* xim/ximserver.h : indentation fixes
	* xim/convdisp.h : indentation fixes
	* xim/xdispatch.h : indentation fixes
	
2004-07-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.4.2.1
	
2004-07-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Makefile.am: Added $(top_builddir)
	
2004-07-31 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* AUTHORS: fix spell commiter -> committer
	
2004-07-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm: Removed obsolute comments.
	
2004-07-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/Makefile.am, gtk/Makefile.am, xim/Makefile.am, helper/Makefile.am
	 - Used $(top_builddir)
	
	
2004-07-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* AUTHORS: New commiter Etsushi Kato added to the list.
	
2004-07-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/Makefile.am: Used CFLAGS instead of INCLUDES.
	
2004-07-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper/Makefile.am: CFLAGS is used instead of INCLUDES.
	
2004-07-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk/Makefile.am, fep/Makefile.am, xim/Makefile.am:
	  - CFLAGS is used instead of INCLUDES. (I don't have confident in 
	    this change.)
	
2004-07-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/config.h.in: Removed uneed file from repository.
	
2004-07-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Some space was eliminated.
	
2004-07-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.c: Replaced () with (void).
	
2004-07-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 -(convert_mtext2str): New function.
	
2004-07-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/callbacks.c
	 -(select_cb):     Added range check of index. 
	 -(shift_page_cb): Added range check of index. 
	 -(get_candidate): Added NULL check.
	
2004-07-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* generic.scm:
	 (generic-proc-input-state): generic-proc-on-mode is splitted into 2 procedures.
	 (generic-proc-converting-state): generic-proc-on-mode is splitted into
	                                  2 procedures.
					    
	 * hangul.scm:
	 (hangul-proc-on-mode): generic-proc-on-mode was renamed to generic-proc-input-state.
	
2004-07-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim.c:
	 (uim_init_scm): siod_verbose_level should be configurable.
	
2004-07-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm:
	  Argument of m17nlib-lib-preedit-changed?, m17nlib-lib-compose-mode?,
	  m17nlib-lib-get-commit-string is mid, not mere id.
	
	
2004-07-28 Takuro Ashie <ashie@homa.ne.jp>
	
	* Separated candidates window related functions to new files to share
	  the code with uim-helper-candwin-gtk.
	
	* gtk/Makefile.am: Added uim-cand-win-gtk.[ch].
	* gtk/uim-cand-win-gtk.[ch]
	  - New files. Fixed some odd behavior of candidates window.
	  - The bug that sometimes it could switch to invalid page has been
	    fixed.
	  - The bug that selection was gone by clicking emty row has been
	    fixed.
	  - The bug that label didn't sync with current state when clicked a
	    row has been fixed.
	  - Performance improvement.
	  - Plugged some memory leaks.
	* gtk/gtk-im-uim.c
	  - Moved most code for the candidates window to the new file.
	  - Use strstr() instead of strncmp() to detecting messages from helper
	    server (This code was removed by rescent rewiding, so I revived it).
	
2004-07-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Follow new API of the immodule. In the API, two query functions
	  languages() and displayName() are added. I think that current
	  index-based query API of uim for language and input method name is
	  useless and should be redesigned. I will suggest the change in
	  future
	
	* plugin.cpp
	  - Remove #include <stdio.h>
	  - (create):
	    * Follow new QUimInputContext constructor interface
	    * Move createUC into QUimInputContext constructor
	    * Replace stdc functions with Qt functions
	  - (languages): New function to follow new immodule API
	  - (displayName): Remove excessive "uim-" prefix
	  - (createLanguageList): New function
	
	
	* quiminputcontext.h
	  - (class QUimInputContext): Add Q_OBJECT to follow new API
	  - (QUimInputContext): Add imname and lang args
	  - (name): Remove to follow new API
	  - (identifierName): New function to follow new API
	  - (isPreeditRelocationEnabled): Move to public from protected to
	    follow new API
	  - (createUC): Move to protected from public
	  - (m_imname, m_lang): New variables
	
	* quiminputcontext.cpp
	  - (QUimInputContext):
	    * Add imname and lang args
	    * Move createUC from QInputContextPlugin
	  - (name): Remove to follow new API
	  - (identifierName): New function. Properly implemented
	  - (language): Implement properly
	
2004-07-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.scm:
	 (anthy-proc-compose-state): PageUp/Down key should be ignored if 
	                             candidate window is not opened.
	
2004-07-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac, fep/Makefile.am:
	 - Add configure option --disable-uim-fep.
	 
	
2004-07-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm:
	 (skk-conv-wide-latin): New function.
	
2004-07-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*uim.h: Updated comments.
	
2004-07-27 Takuro Ashie <ashie@homa.ne.jp>
	
	* uim/uim.c
	 - (uim_release_context): Plugged memory leak.
	
2004-07-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	 * qt/quiminputcontextplugin/qhelpermanager.cpp                                                                                 
	 * qt/qtkde-helper/src/common/quimhelpertoolbar.cpp                                                                             
	 * gtk/gtk-im-uim.c                                                                                                             
	 * helper/helper-toolbar-common-gtk.c                                                                                           
	 * uim/uim-helper.c                                                                                                             
	 * uim/uim-helper-server.c                                                                                                      
	 * uim/uim-helper.h                                                                                                             
	 * uim/uim-helper-client.c                                                                                                      
	 * xim/main.cpp                                                                                                                 
	 * xim/ximserver.cpp 
	
	  Cancelled changes between -r 962:963, bacause they broke API/ABI.
	
	
2004-07-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c: Fixed indentations.
	
	* scm/m17nlib.scm:
	 (m17nlib-press-key-handler): Don't discard a key event if commit string is "".
	
2004-07-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm: Fix indentations with tab. Remove redundant setting of 'skk-state-direct
	           after skk-flush. Remove unnecessary skk-update-mode.
	  (skk-go-left-key?)  : New procedure.
	  (skk-go-right-key?) : New procedure.
	  (skk-next-completion-key?) : Appended skk-begin-completion-key?
	  (skk-proc-state-direct) : Handle preceding "n" correctly when key is pressed with 
	                            shift key.
	  (skk-sokuon-shiin-char?) : Renamed from shiin-char?  exclude 'n'.
	  (skk-proc-state-kanji) : Show correct preedit character in skk-context-latin-conv
	                           with katakana and hankana mode.
	  (skk-proc-state-completion) : enable support for multiple completion buffers.
	
	* skk-editor.scm : Fixed typo in comment.
	  (skk-editor-commit-raw) : handle cursor movement on recursive learning preedit.  
	                            Do a skk-editor-flush when cancel key is pressed.
	
	
2004-07-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/skk-dic.c:
	  (skk_comp_array) : enable support for multiple completion buffers.
	  (skk_make_comp_array_from_cache) : enable support for multiple completion buffers.
	  (find_comp_array)    : enable support for multiple completion buffers.
	  (skk_get_completion) : enable support for multiple completion buffers.
	  (skk_get_nth_completion) : enable support for multiple completion buffers.
	  (skk_get_nr_completions) : enable support for multiple completion buffers.
	  (skk_clear_completions)  : enable support for multiple completion buffers.
	  (move_line_to_cache_head) : Remove unnecessary variable.
	  (add_line_to_cache_last)  : Remove unnecessary variable.
	
2004-07-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim/uim-util.c
	  (charcode2string) : Fixed indentation.
	  (string2charcode) : Fixed indentation.
	  
	
2004-07-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm: Used new procedure, m17nlib-lib-commit.
	
	
2004-07-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 -(struct ic_): Removed unused structure member 'str'.
	
2004-07-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c: Removed debug messages.
	
2004-07-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*m17nlib.c:
	 -(candidates_draw_cb): Removed a debug message.
	
2004-07-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	-(commit): New function.
	
2004-07-24 Masahito Omote <omote@utyuuzin.net>
	
	* uim/canna.c:
	  - Use uim_scm_c_int instead of get_c_int.
	  - Use uim_scm_c_str instead of get_c_string.
	
2004-07-24 Masahito Omote <omote@utyuuzin.net>
	
	* uim/uim-util.c,uim-scm.h: New function uim_scm_reverse and uim_scm_nreverse.
	* uim/slib.c (reverse): remove static.
	
2004-07-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/uim-func.c:
	  - backout previous patch
	* uim/context.h:
	  - backout previous patch
	* uim/uim.c:
	  - do not notify pre-edit in reset_context
	
2004-07-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/context.h: change declaration of uim_release_segments
	* uim/uim-func.c: uim_release_segments to return the number of segments
	* uim/uim.c: do not update preedit segments, if there's no change in uim_reset_context
	
2004-07-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* skk.scm: do not reset in latin mode
	
2004-07-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm: Changed wrong symbol literal. Backspace -> BackSpace
	
	
2004-07-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 -(get_candidate_index): New function. It corresponds to m17nlib-lib-get-candidate-index.
	
	
2004-07-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm:
	 -(m17nlib-context-showing-candidate): New procedure.
	 -(m17nlib-context-set-showing-candidate!): New procedure.
	 -(m17nlib-update-candidate): New procedure.
	 -(m17nlib-get-candidate-handler): Implemented.
	 
	
2004-07-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 -(candidate_showp)  : New function. It corresponds to m17nlib-lib-candidate-show?
	 -(get_nth_candidate): New function. It corresponds to m17nlib-lib-get-nth-candidate
	
2004-07-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/uim-helper.c:
	  - add propert #includes
	* uim/uim-helper.h, uim/uim-helper-client.c:
	  - move declaration of uim_helper_send_message_fd to header
	* uim/uim-key.c:
	  - (uim_init_key_subrs) add void argument
	* uim/uim-func.c:
	  - remove some warnings
	
2004-07-20 kzk <mover@hct.zaq.ne.jp>
	
	* uim/prime.c
	  - uim_ipc_send_command is already declared in uim.h
	
2004-07-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim.c, context.h:
	  - move some global functions declarations to header file.
	
2004-07-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/uim-ipc.c, uim/uim.h:
	  - add declaration of uim_ipc_send_command
	  - add proper include files.
	
2004-07-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/README
	 - Updated documentation
	 
	* fep/README.ja
	 - Updated documentation
	
	* fep/INSTALL
	 - Updated documentation
	 
	
2004-07-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm: 
	- (skk-begin-completion-key?): Added <Control>i and <Control>I to the key bind.
	
2004-07-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/getpeerid.c: add include files to surpress warnings
	
2004-07-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* slib.c: mark internal functions static
	
2004-07-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/uim-helper-client.c:
	  - (get_server_command): mark static
	
2004-07-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/slib.c:
	  - remove some unused variables
	  - remove functions err0, pr, and prp to remove name space pollution.
	
2004-07-18 Masahito Omote <omote@utyuuzin.net>
	
	* scm/canna.scm:
	  - (canna-off-key?, canna-latin-key?): Add generic-off-key?.
	  - (canna-on-key?): Add generic-on-key?.
	
2004-07-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm:
	 - (shiin-char?): New procedure.
	 Added a process of shiin character when they inputted as okurigana.
	 Thanks to Etsushi Kato, Jun Mukai.
	
2004-07-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-fep: We got new uim-fep which can be compiled on Solaris.
	
2004-07-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* anthy.scm
	 - add quote to definition of anthy-latin-key?
	
2004-07-16 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* key.scm
	  - (enable-emacs-like-key-prefix?): New config variable
	  - (valid-key-symbols): New variable. Update this if you add new key
	    definition to key_tab
	  - (intern-key-symbol): New procedure
	  - (parse-key-prefix): According to enable-emacs-like-key-prefix?
	  - (parse-key-str): Add key-symbol validation using intern-key-symbol
	  - (valid-key-str?): New procedure
	  - (valid-strict-key-str?): New procedure
	* test/test-key.scm
	  - (test intern-key-symbol): New test
	  - (test valid-key-str?): New test
	  - (test valid-strict-key-str?): New test
	
	* custom.scm
	  - (key-definition?): Implement using valid-strict-key-str?
	  - (prefix-tag-style-key-str?): Remove unnecessary procedure
	* test/test-custom.scm
	  - (test key-definition?): New test
	
2004-07-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/skk-dic.c: patch [anthy-dev 924]. fix memory leak on skk's completion.
	
2004-07-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/skk-dic.c: add completion cache
	* scm/skk.scm: add completion state
	  - patch [anthy-dev 919]
	
2004-07-14 Takuro Ashie <ashie@homa.ne.jp>
	
	* gtk/gtk-im-uim.c
	  - (set_client_window): Fixed typo.
	* helper/helper-candwin-gtk.c
	  - (cb_tree_view_destroy): new function.
	  - (init_candidate_win): Plugged memory leak.
	
2004-07-14 Takuro Ashie <ashie@homa.ne.jp>
	
	* gtk/gtk-im-uim.c:
	  - Reference count of uim->win was broken.
	
2004-07-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* scm/anthy.scm: use generic-off-key? for anthy-latin-key? instead of generic-on-key?
	
2004-07-14 kzk <mover@hct.zaq.ne.jp>
	
	* uim/helper-candwin-gtk.c
	  - force candidate window to be in the screen
	
2004-07-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm
	  - (custom-define-group, custom-group-rec, custom-group-label,
	     custom-group-desc, custom-group-subgroups): Replace 'sym' with
	    'gsym' to distinguish ordinary custom variable and group
	
	* test/test-custom.scm
	  - All test have been written except for custom value broadcasting
	    and key binding
	  - (test custom-define-group, custom-group-rec): Rename variables
	  - (testcase custom custom-group methods): New testcase
	  - (test custom-group-label): New test
	  - (test custom-group-desc): New test
	  - (test custom-group-subgroups): New test
	  - (testcase custom methods): New testcase
	  - (test custom-valid?): New test
	  - (test custom-value): New test
	  - (test custom-set!): New test
	  - (test custom-default?): New test
	  - (test custom-default-value): New test
	  - (test custom-groups): New test
	  - (test custom-type): New test
	  - (test custom-type-attrs): New test
	  - (test custom-range): New test
	  - (test custom-label): New test
	  - (test custom-desc): New test
	  - (test custom-canonical-value-as-string): New test
	  - (test custom-canonical-definition-as-string): New test
	
2004-07-13 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* scm/generic.scm: implement preliminary reset-handler
	
2004-07-13 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* scm/skk.scm: add preliminary reset handler.
	
2004-07-13 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* scm/skk.scm: [anthy-dev 914] properly update preedit in conversion mode. Thanks Kato-san.
	
2004-07-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* scm/anthy.scm: implement reset handler.
	
2004-07-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This comit removes uim_eval_string() with arbitrary size buffer
	  allocation. It increases safety, make sexps always rewritable to
	  follow future development
	
	* uim-key.c
	  - (handle_key): Replace uim_eval_string() with
	    UIM_EVAL_FSTRING4(). But arbitrary keybuf[20] is still remaining
	
	* uim.c
	  - (uim_create_context): Replace uim_eval_string() with UIM_EVAL_FSTRING3()
	  - (uim_reset_context): Replace uim_eval_string() with UIM_EVAL_FSTRING1()
	  - (uim_release_context): Replace uim_eval_string() with UIM_EVAL_FSTRING1()
	  - (uim_prop_activate): Replace uim_eval_string() with UIM_EVAL_FSTRING2()
	  - (uim_set_mode): Replace uim_eval_string() with UIM_EVAL_FSTRING2()
	  - (load_conf): Acculately calculate buffer size using
	    uim_sizeof_sexp_str() etc
	  - (uim_get_candidate): Replace uim_eval_string() with UIM_EVAL_FSTRING3()
	  - (uim_set_candidate_index): Replace uim_eval_string() with
	    UIM_EVAL_FSTRING2()
	
2004-07-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* siod.h
	  - (STRINGP): New macro
	  - (NSTRINGP): New macro
	
	* uim-func.c
	  - (im_commit):
	    * Replace NFALSEP() with STRINGP()
	    * Avoid uim_schedule_cb() if STRINGP() failed
	  - (im_return_str): Replace NFALSEP() with STRINGP()
	  - (im_return_str_list): Replace NFALSEP() with STRINGP()
	
	* uim-util.c
	  - (string2charcode): Replace NIL with false_sym to resolve bug #642
	  - (nthcdr):
	    * Replace NIL with false_sym to resolve bug #642
	    * Add explicit NULLP() to check null?
	  - (rk_find_seq): Replace null? check with NNULLP() instead of (x != NIL)
	  - (rk_find_partial_seq): Replace null? check with NNULLP() instead
	    of (x != NIL)
	  - (rk_expect_seq): Add explicit NNULLP() to check null?
	  - (uim_scm_symbol_value_int): Replace null? check with NNULLP()
	    instead of (x != NIL)
	  - (uim_scm_symbol_value_str): Replace null? check with NNULLP()
	    instead of (x != NIL)
	
2004-07-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-util.c (im_return_str_list): Replace NFALSEP() with NNULLP() to
	  fix the code enbuged in r983
	
2004-07-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-func.c
	  - uim-func.c have been bug #642 free. But unit test for the
	    procedures are cannot be written as Scheme, so I have done it by
	    my own eyes
	  - (TRUEP): New macro. copied from uim-util.c
	  - (FALSEP): New macro. copied from uim-util.c
	  - (NTRUEP): New macro. copied from uim-util.c
	  - (NFALSEP): New macro. copied from uim-util.c
	  - (im_clear_preedit): Replace NIL with false_sym to resolve bug #642
	  - (im_pushback_preedit): Replace NIL with false_sym to resolve bug #642
	  - (im_update_preedit): Replace NIL with false_sym to resolve bug #642
	  - (im_commit):
	    * Replace NIL with false_sym to resolve bug #642
	    * Replace null check with NFALSEP()
	  - (im_commit_raw): Replace NIL with false_sym to resolve bug #642
	  - (im_get_raw_key_str): Replace NIL with false_sym to resolve bug #642
	  - (im_set_encoding): Replace NIL with false_sym to resolve bug #642
	  - (im_clear_mode_list): Replace NIL with false_sym to resolve bug #642
	  - (im_pushback_mode_list): Replace NIL with false_sym to resolve bug #642
	  - (im_update_mode_list): Replace NIL with false_sym to resolve bug #642
	  - (im_update_prop_list): Replace NIL with false_sym to resolve bug #642
	  - (im_update_prop_label): Replace NIL with false_sym to resolve bug #642
	  - (im_update_mode): Replace NIL with false_sym to resolve bug #642
	  - (im_register_im):
	    * Replace NIL with false_sym to resolve bug #642
	    * Replace siod_true_value() with true_sym
	  - (im_activate_candidate_selector): Replace NIL with false_sym to
	    resolve bug #642
	  - (im_select_candidate): Replace NIL with false_sym to resolve bug #642
	  - (im_shift_page_candidate):
	    * Replace NIL with false_sym to resolve bug #642
	    * Replace null check with FALSEP()
	  - (im_deactivate_candidate_selector): Replace NIL with false_sym to
	    resolve bug #642
	  - (im_return_str):
	    * Replace NIL with false_sym to resolve bug #642
	    * Replace null check with NFALSEP()
	  - (im_return_str_list):
	    * Replace NIL with false_sym to resolve bug #642
	    * Replace null check with NFALSEP()
	    * Add NFALSEP() check to each string elements
	
2004-07-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim/uim.c: uim_reset_context to remove preedit segments
	* uim/context.h: add declaration of uim_update_preedit_segments()
	* uim/uim-func.c: rename update_preedit_segments to uim_update_preedit_segments
	
2004-07-12 kzk <mover@hct.zaq.ne.jp>
	
	* uim/m17nlib.c
	  - fix memory leak: free the return str of uim_get_c_string
	
2004-07-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*uim/context.h: add preedit segment field to struct uim_context_
	*uim/uim.c: add initialization and release of preedit segment
	*uim/uim-func.c: compose preedit segment array in C
	 - This change guarantees order of preedit callbacks and make it easy to implement input context reset.
	
2004-07-12 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - more correct handling of QSocketNotifier enabling and disabling
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin/qhelpermanager.cpp
	  - correct handling of QSocketNotifier enabling and disabling
	
2004-07-11 Masahito Omote <omote@utyuuzin.net>
	
	* uim/canna.c: Fix bug on uim_quit_canna.
	* uim/uim-util.c, uim/uim-scm.h: New 4 function for custom API.
	  (uim_custom_label, uim_custom_desc, uim_custom_type, uim_custom_default_value)
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* gtk/gtk-im-uim.c
	  - use strstr instead of strncmp to avoid using fixed value
	* xim/main.cpp
	  - use strcmp instead of strncmp to avoid using fixed value
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* helper/helper-toolbar-common-gtk.c, qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - fix calling uim_helper_client_get_prop_list() before calling uim_helper_init_client()
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp: fix memory leak
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm: 
	 - (m17nlib-append-modifiers): New procedure.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-helper-server.c:
	 -(proc_func): Marked as static function.
	 -(uim_helper_server_process_connection): Marked as static function.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 -(commit_segment): Removed unused function.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 -(get_commit_string): New function.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c: Fixed a silly bug. 'p = 0' should be '*p = 0'.
	
	
2004-07-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* slib.c: remove no_interrput()
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* xim/main.cpp
	  - fix wrong if condition
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* xim/ximserver.cpp: fix mistaken if condition
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* uim/uim-helper.c
	  - forget to commit. rename "uim_helper_send_message" into "uim_helper_send_message_fd"
	  - fix typo uim_help'l'er_
	* uim/uim-helper-server.c
	  - fix typo uim_help'l'er_
	* uim/uim-helper.h
	  - fix typo uim_help'l'er_
	  - export uim_helper_fd_readable
	
	
2004-07-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* gtk-im-uim.c: remove some obvious warnigs.
	
2004-07-11 kzk <mover@hct.zaq.ne.jp>
	
	* This is the API change of Helper System
	
	* uim/uim-helper.h, uim/uim-helper-client.c
	  - change "int uim_helper_init_client_fd(void (*disconnect_cb)(void))" into "int uim_helper_init_client(void (*disconnect_cb)(void))"
	  - change "void uim_helper_close_client_fd(int)" into "void uim_helper_close_client(void)"
	  - add function "int  uim_helper_get_client_fd(void)"
	  - change "char *uim_helper_send_message(int fd, const char *message)" into "void uim_helper_send_message(const char *message)"
	  - add doxygen-style description to each function
	
	  * Basically, this change make clients not to handle static fd privately.
	  * But, each client must handle "connect or not connect".
	  * This is the same situation, I think. More Enhancement is needed.
	  
	  * We'll abolish uim_helper_read_proc function
	
	* qt/quiminputcontextplugin/qhelpermanager.cpp
	  - corresponds to the change
	* qt/qtkde-helper/src/common/quimhelpertoolbar.cpp
	  - corresponds to the change
	* gtk/gtk-im-uim.c
	  - corresponds to the change
	* helper/helper-toolbar-common-gtk.c
	  - corresponds to the change
	* xim/main.cpp
	  - corresponds to the change
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm:
	 -(m17nlib-push-key): New procedure.
	
2004-07-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-util.c
	  - (rk_expect_seq):
	    * Rename a variable and rewrite code for easy recognition
	    * Add a comment
	  - (uim_split_string): Replace NIL as #f with false_sym to fix bug #642
	
	* test/test-uim-util.scm
	  - Complete for uim-util.c except for EUC-JP test of string-to-list
	  - (test getenv): New test
	  - (test string-split): New test
	  - (test string-to-list): New test. EUC-JP tests are disabled for now because
	    of encoding conversion problem between uim-sh and gosh
	  - (test string=?): Add empty string comparison
	  - (test str-seq-equal?): New test
	  - (test str-seq-partial?): New test
	  - (testcase uim-util rk): New testcase
	  - (test rk-lib-find-seq): New test
	  - (test rk-lib-find-partial-seq): New test
	  - (test rk-lib-expect-seq): New test
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 -(push_symbol_key): Return true value if key event was consumed.
	 -(push_key):        Return true value if key event was consumed.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Removed an unnecessary line( AC_CHECK_LIB([gnugetopt], [getopt_long])).
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.4.1.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.scm:
	 -(anthy-hankaku-kana-key?): Disabled key bind <Control>Q.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: Added AC_CHECK_LIB([gnugetopt], [getopt_long]) for uim-fep.
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/str.c: Replaced () with (void)
	* fep/str.h: Replaced () with (void)
	
2004-07-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/Makefile.am: Removed unnecessary ld flag "-lncurses".
	
2004-07-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* qt/quiminputcontextplugin/quiminputcontext.h
	  - (x11FilterEvent): Remove unnecessary X11 dependent alternative of
	    filterEvent() to simplify the implementation
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (x11FilterEvent): Remove unnecessary X11 dependent alternative of
	    filterEvent() to simplify the implementation
	
2004-07-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit is intended to fix compilation error on some platforms. Thanks
	  540-san of 'Anthy/uim thread 3'.
	
	* configure.ac
	  - Add "--enable-debug". Default configuration has been changed to disabled
	  - Add "-std=gnu89" to CFLAGS
	* Makefile.am, uim/Makefile.am
	  - Remove CFLAGS that hides configured CFLAGS
	  - Move "-std=gnu89" of CFLAGS to configure.ac
	  - Remove "-pedantic-errors" of CFLAGS to use "-pedantic" in configure.ac
	  - Add DEFS instead of CFLAGS to define a macro
	
2004-07-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.4.0
	
2004-07-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm: Replaced with Hiroyuki Komatsu's new version.
	
2004-07-08 Masahito Omote <omote@utyuuzin.net>
	
	doc/XIM-SERVER: Add description about UIM_CANDWIN_PROG environment variable.
	
2004-07-08 Takuro Ashie <ashie@homa.ne.jp>
	
	* gnuify-changelog.pl:
	  - Added my name.
	
2004-07-08 Masahito Omote <omote@utyuuzin.net>
	
	* configure.ac: Add AC_ARG_WITH for Canna. You can handle by --with(out)-canna
	  wheather you build uim/canna.c or not. configure checks 
	  $(includedir)/canna/Rk.h only, because uim don't link against libcanna.so.
	
	  I do not confident with this change. If trouble, please revert.
	
2004-07-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm:
	 - (m17nlib-translate-ukey-to-mkey): New procedure.
	
2004-07-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c:
	 - (push_symbol_key): New function.
	
2004-07-07 Takuro Ashie <ashie@homa.ne.jp>
	
	* helper/helper-toolbar-gtk.c
	  - Now the helper window starts drag-move only on GDK_BUTTON_PRESS
	    event because GTK clashes by double clicking. It may Gtk+'s bug.
	
2004-07-07 Takuro Ashie <ashie@homa.ne.jp>
	
	* uim/Makefile.am: Added AM_CONDITIONAL for Canna, but it's still ad-hoc way.
	  I think we also should add AC_ARG_WITH for Canna.
	* uim/canna.c: Removed dummy code.
	
2004-07-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.scm:
	 - (m17nlib-update-preedit): New procedure.
	
2004-07-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c: Introduced following new functions.
	 - (compose_modep): New function.
	 - (preedit_changedp): New function.
	 - (get_left_of_cursor): New function.
	 - (get_right_of_cursor): New function.
	 - (get_left_of_candidate): New function.
	 - (get_selected_candidate): New function.
	 - (get_right_of_candidate):  New function.
	
2004-07-07 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Almost of modifications are done by [Anthy-dev 831]
	  uim-siod-to-r5rs-20040518.diff by Kouhei Sutou-san. Thanks. All
	  necessary flagments of [Anthy-dev 831] for test/*.scm have been
	  merged. Unnecessary uim-bool replacement is rejected for now. The
	  changes will be performed after bug #617 is fixed
	
	* test/run-test.scm
	  - (main): Modify regex to filter out improper files
	
	* test/uim-test-utils.scm
	  - Make progress information unbuffered
	  - Add version check of GaUnit (currently 0.0.6 or later). Done by
	    [Anthy-dev 831]
	  - (uim-sh-read): Add error handling. Done by [Anthy-dev 831]
	  - (uim-bool): Keep untouched against [Anthy-dev 831]. The function
	    is required until bug #617 is fixed
	
	* test/test-custom.scm 
	  - (testcase custom custom-symbol): Make assert-error forms
	    proper. Done by [Anthy-dev 831]
	  - (testcase custom custom-group):
	    * Replace 'require' with 'load'. Done by [Anthy-dev 831]
	    * Remove unnecessary asserts for procedural forms. Done by
	      [Anthy-dev 831]
	  - (testcase custom hooks):
	    * Remove unnecessary asserts for procedural forms. Done by
	      [Anthy-dev 831]
	  - (testcase custom get and set hooks):
	    * Remove unnecessary asserts for procedural forms. Done by
	      [Anthy-dev 831]
	  - (testcase custom canna-server-name):
	    * Remove unnecessary asserts for procedural forms. Done by
	      [Anthy-dev 831]
	
	* test/test-util.scm 
	  - (testcase util Siod specific procedures): Make assert-error form
	    proper. Done by [Anthy-dev 831]
	
	* ChangeLog: Update
	
2004-07-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/ All () in function definition wad replaced with (void) to avoid warnings.
	
2004-07-06 kzk <mover@hct.zaq.ne.jp>
	
	* uim-fep/README: translate README to English partly.
	
2004-07-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Translated README file to English a bit, but not completed yet.
	
2004-07-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c(push_key): cast unsigned char* to char* to fix comple error.
	
2004-07-06 kzk <mover@hct.zaq.ne.jp>
	
	* scim/japanese.scm
	  - add entries from picking up kinput2's rule.roma
	
2004-07-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* slib.c
	  - (undefine): Add second arg "LISP env" to avoid function type
	    mismatch
	  - (init_subrs): Revert to init_fsubr rather than init_lsubr for
	    undefine()
	  - (subrcons): Remove 'static' to according to corresponding decl in
	    sioh.h
	
2004-07-06 kzk <mover@hct.zaq.ne.jp>
	
	* helper/helper-toolbar-common-gtk.c
	  - kill warning "comparison between signed and unsigned int
	* uim/uim-sh.c
	  - remove ununsed variable null_list
	
2004-07-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-func.c
	  - (im_get_raw_key_str):
	    * Fix size of buf[]
	    * Add comment to explicit shift modifier assumption
	
2004-07-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm:
	 - skk-commit-raw-with-preedit-update: New procedure. Some skk-commit-raw 
	   caller changed to call this procedure.
	   Thanks to Etsushi Kato <ekato@ees.hokudai.ac.jp>.
	
2004-07-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c: Now third arg of mplist_add need cast to (void*)
	
2004-07-06 kzk <mover@hct.zaq.ne.jp>
	
	* uim/uim-sh.c
	  - Porting to C89 standards, but not confident. Plz revert if problem.
	
2004-07-06 kzk <mover@hct.zaq.ne.jp>
	
	* uim/canna.c: ISO C forbids an empty source file, so need to have dummy function
	
2004-07-06 Masahito Omote <omote@utyuuzin.net>
	
	* (uim-util.c, uim-helper.c, uim-table.c, canna.c, anthy.c, slib.c):
	  Porting to C89 standards. But this work will make us tried badly.
	
	* I'm not confident in these modifications. If problem, please revert.
	
2004-07-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-func.c:
	 - true_sym, false_sym: Introduced to represent #t and #f
	 - uim_flush_cb: Size of array was wrong
	
	I'm not confident in these modifications. Please check.
	
	
2004-07-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/Makefile.am: Add "-std=gnu89 -pedantic-errors" to CFLAGS to
	  reject C99 features. Thanks 379-san for the suggestion. We must
	  support non-C99 compilers for many platforms such as some versions
	  of *BSD, Zaurus, and many of embedded platforms. Some libraries such
	  as glibc requires GNU extensions to work, so I use "-std=gnu89"
	  rather than "-ansi". Some serious errors that possibly causes
	  crashes have been discovered by the options (and stop
	  compilation). We must fix them.
	
	* Makefile.am: Add "-std=gnu89 -pedantic-errors" to CFLAGS
	
2004-07-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-util.c
	  - some of fixes are done by [Anthy-dev 831]
	    uim-siod-to-r5rs-20040518.diff by Kouhei Sutou-san. Thanks. All
	    necessary flagments of [Anthy-dev 831] for uim-util.c have been
	    merged. Inappropriate modifications such as for rk_expect_seq()
	    are rejected
	  - (rk_find_seq):
	    * Replace NIL with false_sym by [Anthy-dev 831] to fix bug #642
	    * Add NFALSEP() to str_seq_equal() to fix bug #642
	    * Rename variables and rewrite code for easy recognition
	  - (rk_find_partial_seq):
	    * Replace NIL with false_sym by [Anthy-dev 831] to fix bug #642
	    * Rename variables and rewrite code for easy recognition
	  - (rk_expect_seq): Add comment about return value
	  - (c_getenv): Replace NIL with false_sym by [Anthy-dev 831] to fix
	    bug #642
	  - (uim_scm_symbol_value): Replace NIL with false_sym by [Anthy-dev
	    831] to fix bug #642
	  - (uim_scm_f): Replace NIL with false_sym by [Anthy-dev 831] to fix
	    bug #642
	  - (uim_scm_string_equal): Replace NFALSEP with TRUEP by [Anthy-dev
	    831]
	
2004-07-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* README of uim-fep: Translated to English from Japanese. (Not completed yet.)
	
2004-07-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Added author of uim-fep
	
2004-07-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* japanese.scm: Added 5 new entries. small aiueo.
	
2004-07-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* screen-uim: Say good-by to screen-uim.
	
2004-07-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac, Makefile.am : Added fep/ directory.
	
2004-07-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* fep/ : Added uim-fep. We should modify some defects. Documentation update,
	         Translation to English from Japanese, setting default IM, and so on.
	
2004-07-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c(cand_select_cb):  uim_set_candidate_index should not be 
	                                 called in this function.
	
	
2004-07-05 kzk <mover@hct.zaq.ne.jp>
	
	* configure.ac: version 0.3.9 has already released
	
2004-07-03 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* skk.scm: prpoerly remove annotation. Thanks 458, 399.
	
2004-06-27 kzk <mover@hct.zaq.ne.jp>
	
	* configure.ac
	  - add many warning flags. thank you 379-san and 381-san.
	* gtk/gtk-im-uim.c
	  - to be able to build on gcc2.x. thank you 371-san
	
2004-06-26 Masahito Omote <omote@utyuuzin.net>
	
	* xim/canddisp.cpp:
	  - Enabled handling uim-helper-candwin-{gtk,qt,xaw} and so on in uim-xim.
	    You can handle them by setting UIM_CANDWIN_PROG environment variable.
	    If not defined, uim-helper-candwin-gtk(--with-gtk2) or NULL(--without-gtk2)
	    is used as default.
	  - This change possibly makes memory leak. If so, please revert this change.
	
2004-06-25 kzk <mover@hct.zaq.ne.jp>
	
	* doc/api-doc/uim-devel.db: initial commit of uim developer's manual
	
2004-06-23 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (filterEvent): Add isascii() check for Qt::Key to fix
	    misunderstand of isprint()
	
2004-06-23 YamaKen <yamaken@bp.iij4u.or.jp>
	
	2004-06-23  YamaKen  <yamaken@bp.iij4u.or.jp>
		* corresponding to the new API of the immodule for Qt
	          qt-x11-immodule-bc-qt3.3.2-20040622.diff snapshot
	        
	        * qt/quiminputcontextplugin/plugin.cpp
	          - (create): Follow API change of QWidget *w removal
	
2004-06-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Removed SKK-like key bindings.
	
2004-06-15 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* corresponding to the new API of the immodule for Qt 20040615 snapshot
	
	* qt/quiminputcontextplugin/quiminputcontext.h
	  - (QUimInputContext): Remove QWidget *w arg to follow API change
	  - (filterEvent): Remove QWidget *keywidget arg to follow API change
	  - (setFocus): Remove QWidget *newFocusWidget arg to follow API change
	  - (isPreeditRelocationEnabled): New method to follow API change
	  - (isPreeditPreservationEnabled): New method
	  - (sendIMEvent): Remove to follow API change
	  - (isImStarted): Remove to replace with new isComposing() API function
	  - (cpos, sellen): Remove to use new preedit relocation function of
	    QInputContext
	
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (QUimInputContext):
	    * Remove variables from initializer list
	    * Replace w with 0 for passing to CandidateWindow as parent
	  - (filterEvent): Remove QWidget *keywidget arg to follow API change
	  - (setFocus):
	    * Remove QWidget *newFocusWidget arg to follow API change
	    * Remove preedit preservation and relocation to follow API
	      change. They are moved to QInputContext as generarization
	  - (unsetFocus):
	    * Remove unnecessary QInputContext::unsetFocus()
	    * Add preedit preservation code
	  - (setMicroFocus): Follow API change that replaces relative
	    coordinate with global one
	  - (reset): Add appropriate reset process. It is required to
	    implement reset-handlers in uim world to work properly. Reset in
	    Qt world seems good
	  - (name): Return "uim" as temporary implementation. FIXME!
	  - (language): Return "ja" as temporary implementation. FIXME!
	  - (commitString, updatePreedit):
	    * Replace isImStarted with isComposing()
	    * Remove qDebug(). Equvalent debug message is now put by
	      sendIMEvent()
	  - (pushbackPreeditString): Replace isImStarted with isComposing()
	  - (sendIMEvent): Remove to follow API change
	  - (isPreeditRelocationEnabled): New function to follow API change.
	  - (isPreeditPreservationEnabled): New function. This indicates that
	    whether preedit state should be preserved or not when focusing out
	    the widget
	
	* qt/quiminputcontextplugin/plugin.cpp
	  - (create): Remove QWidget *w from QUimInputContext() to follow API
	    change
	  - (createImList): Remove trailing "\n" from qDebug()
	
	* qt/quiminputcontextplugin/ChangeLog
	  - Fix QUimInputContext::sendIMEvent() with
	    QInputContext::sendIMEvent() in 2004-06-09
	
2004-06-14 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim.c (uim_create_context): Replace invalid () with #f
	
2004-06-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm: Rpelaced with Hiroyuki Komatsu's prime.scm.
	
2004-06-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c (tree_selection_changed): Added NULL check. 
	
2004-06-13 kzk <mover@hct.zaq.ne.jp>
	
	* uim/uim-helper-server.c, uim/uim-helper-client.c
	  - more valid initialization of sockaddr_un struct
	
2004-06-13 kzk <mover@hct.zaq.ne.jp>
	
	* gtk/gtk-im-uim.c, qt/quiminputcontextplugin/quiminputcontext.cpp
	  - call uim_set_candidate_index when the callback select_cb(void *ptr, int index) is called.
	
2004-06-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim.c
	  - (uim_prop_list_update, uim_prop_label_update): Fix user
	    preserved pointer passing. Fixed by the patch from James
	    Su-san. Thanks
	
2004-06-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Makefile.am(EXTRA_DIST): Removed some files which don't exist.
	
2004-06-10 kzk <mover@hct.zaq.ne.jp>
	
	* uim/uim.h: add @return description of uim_press_key() and uim_release_key()
	
2004-06-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (filterEvent): Cosmetic cleanup
	
2004-06-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* corresponding to the immodule for Qt 20040609 snapshot
	
	* qt/quiminputcontextplugin/quiminputcontext.h
	  - (sendIMEvent): New method
	
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (sendIMEvent): New method. Overrides
	    QUimInputContext::sendIMEvent() to transparently remember
	    composing state for focus transition
	  - (setFocus): Fix preedit porting on focus transition
	
	* qt/quiminputcontextplugin/ChangeLog: Fix a copy-and-paste error at
	  2004-06-08
	
2004-06-08 kzk <mover@hct.zaq.ne.jp>
	
	* uim/uim.h
	  - fix typo
	  - add comments around property list and label
	
2004-06-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* corresponding to the new API of the immodule for Qt 20040608 snapshot
	
	* qt/quiminputcontextplugin/quiminputcontext.h
	  - (candwinIsActive): New variable
	
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - (QUimInputContext):
	    * Add candwinIsActive to initializer list
	    * Move isImStarted to initializer list
	  - (setFocus): Popup candidate window when focused again
	  - (unsetFocus): Hide candidate window when focused out
	  - (setFocus): Reimplement to follow new API
	  - (unsetFocus): Reimplement to follow new API
	  - (candidateActivate, candidateDeactivate): Remember candidate
	    window activity for UI-driven hiding/showing
	
2004-06-08 kzk <mover@hct.zaq.ne.jp>
	
	* uim/uim.h: add API comments around im and candidate in doxygen style
	
2004-06-06 kzk <mover@hct.zaq.ne.jp>
	
	* doc/
	  - 00INDEX: remove LIB
	  - LIB: contents move to uim/uim.h
	* uim/
	  - uim.h: adding doxygen-style description of some APIs which was written at doc/LIB. I want descriptions of all APIs in doxygen-style.
	
	
2004-06-06 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* doc/HELPER-CANDWIN: add some description about what the helper is.
	
2004-06-06 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* helper/helper*.c: change path uim/config.h to config.h.
	
2004-06-05 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* xim/main.cpp, xim/ximserver.cpp: kill warning.
	* xim/canddisp.cpp: change path of config.h to allow off tree build
	
	
2004-06-05 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper/src/candwin
	  - add size handling function (adjustWindowSize() )
	  - fix wrong number indexing 
	
2004-06-05 kzk <mover@hct.zaq.ne.jp>
	
	* doc
	  - 00INDEX: updated
	  - HELPER-CANDWIN: describing the message which is sent by uim-xim to candidate program
	
	* qt/qtkdehelper
	  - uim-helper-candwin.h, uim-helper-candwin-qt.cpp: change the WFlags
	
2004-06-05 kzk <mover@hct.zaq.ne.jp>
	
	*qt/qtkde-helper
	  - initial commit of uim-helper-candwin-qt
	
2004-06-04 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* corresponding to the new API of the immodule for Qt 20040604 snapshot
	
	* qt/quiminputcontextplugin/quiminputcontext.h
	  - (QUIM_NO_DIRECT_X11_EVENT): New macro. Define this to switch to
	    X11 independent filter function
	  - (name): New method
	  - (language): New method
	  - (x11FilterEvent): Change args to follow new API
	  - (filterEvent): Change args to follow new API
	  - (setFocus): Change args to follow new API
	  - (setFocusHint): Remove to follow new API
	  - (setMicroFocus): New method
	  - (mouseHandler): New method
	  - (getPreeditString): Be private
	  - (getPreeditCursorPosition): Be private
	  - (getPreeditSelectionLength): Be private
	  - (lastKeyWidget): Remove to follow new API
	  - (mLastKeyWidget): Remove to follow new API
	  - (preeditString): New variable. Moved from a static variable which
	    has same name
	  - (cpos): New variable
	  - (sellen): New variable
	
	* qt/quiminputcontextplugin/quiminputcontext.cpp
	  - Isolate X11 specific code by #ifdef
	  - Remove trailing "\n" from qDebug()
	  - (preeditString): Remove to fix multi-context conflict. Moved to
	    member variable of QInputContext
	  - (QUimInputContext):
	    * Remove IMState from initializer of QInputContext
	    * Add cpos, sellen to initializer list
	  - (x11FilterEvent): Fix printable ASCII range comparison to exclude
	    DEL (ASCII 127)
	  - (filterEvent): Implement to follow new API
	  - (setFocus): Reimplement to follow new API
	  - (unsetFocus): Reimplement to follow new API
	  - (setFocusHint): Remove to follow new API
	  - (setMicroFocus): copied from setFocusHint and reimplement to
	    follow new API
	  - (mouseHandler): New method. Placeholder with debugging print for
	    now
	  - (name): New method. Just a placeholder for now
	  - (language): New method. Just a placeholder for now
	
	  - (commitString): Simplify by using new API
	  - (pushbackPreeditString): Simplify by using new API
	  - (updatePreedit): Simplify by using new API
	  - (candidateActivate): Remove setFocus() to cooperate with new
	    CandidateWindow behavior
	
	* qt/quiminputcontextplugin/candidatewindow.cpp
	  - (candidateFlag):
	    * Change WType to WType_TopLevel from WType_Popup to fix odd
	      behavior such as accidential hiding
	    * Add WStyle_Tool to gain proper window behavior
	    * Add WX11BypassWM to avoid unnecessary focusing
	  - (slotCandidateSelected): Remove setFocus() to follow proper window
	    behavior by WX11BypassWM
	
2004-06-02 Masahito Omote <omote@utyuuzin.net>
	
	* canna.scm
	 - (canna-proc-input-state-with-preedit):
	   Support beginning-of-preedit and end-of-preedit key.
	 - (canna-context-new): Remove 'if canna-init-lib-ok?'.
	 - (canna-proc-input-state-with-preedit): Remove 'if canna-init-lib-ok?'.
	 - (canna-proc-compose-state): Use cond instead of if.
	
2004-06-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c (update_candidate): Removed unused variable char *buf.
	
2004-06-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c: Removed GtkCList and introduced GtkTreeView. This will fix
	                the bug #626, but new bugs will be introduced...
			Remained bugs: Candidate window doesn't shrink.
	
2004-06-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper-candwin-gtk.c:
	 - (m_view): Removed unused variable.
	 - (m_window): Removed unused variable.
	
2004-06-01 kzk <mover@hct.zaq.ne.jp>
	
	helper-candwin-gtk.c: member cursor isn't used
	
2004-06-01 kzk <mover@hct.zaq.ne.jp>
	
	helper-candwin-gkt.c: member top_win isn't used
	
2004-06-01 kzk <mover@hct.zaq.ne.jp>
	
	No need to link kdeui
	
2004-05-28 Masahito Omote <omote@utyuuzin.net>
	
	* canna.c: Set context_array NULL in definition.
	
2004-05-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* slib.c: (undefine): New function. not tested yet.
	
2004-05-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-uim-util.scm
	  - New file
	  - (testcase uim-util): New testcase
	  - (test string=?): New test
	  - (test nthcdr): New test
	  - (test charcode->string): New test
	  - (test string->charcode): New test
	  - (test digit->string): New test
	
2004-05-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-helper-server.c: change backlog of listen(). 5 is enough and portable.
	
2004-05-26 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Replace result of init-handlers with #f. Although the result is
	  simply ignored, #f is semantically appropriate rather than ()
	
	* tcode.scm (tcode-init-handler): Replace () with #f
	* ipa.scm (ipa-init-handler): Replace () with #f
	* hangul.scm
	  - (hangul2-init-handler): Replace () with #f
	  - (hangul3-init-handler): Replace () with #f
	  - (romaja-init-handler): Replace () with #f
	* viqr.scm (viqr-init-handler): Replace () with #f
	* pyload.scm
	  - (py-init-handler):
	    * Replace () with #f
	    * Remove duplicate py-init-handler definition
	  - (pyunihan-init-handler): Replace () with #f
	  - (pinyin-big5-init-handler): Replace () with #f
	
2004-05-26 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* im.scm
	  - Reorganize definition order and add comments
	  - (find-context): Replace invalid assq with assv
	  - (add-context): Make context-data defaults to #f rather than ()
	
	* test/test-im.scm
	  - New file
	  - (testcase im misc definitions): New testcase
	  - (preedit-attr?): New test
	  - (testcase im im-management): New testcase
	  - (im-record accessors): New test
	  - (make-im): New test
	  - (register-im): New test
	  - (select-im): New test
	  - (testcase im im-switching): New testcase
	  - (find-im-by-name-rec): New test
	  - (next-im): New test
	  - (test switch-im): New test. This is currently disabled due to
	    create-context problem. create-context from Scheme world fails
	    because corresponding object in C world is missing
	  - (testcase im context management): New testcase
	  - (context-id): New test
	  - (context-im): New test
	  - (set-context-data!): New test
	  - (find-context): New test
	  - (remove-context): New test
	  - (add-context (add as new id)): New test
	  - (add-context (duplicate id)): New test
	  - (test create-context): New test. Just a placeholder for now
	  - (test release-context): New test. Just a placeholder for now
	
2004-05-26 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Almost modification of this commit are based on the patch [Anthy-dev
	  831] by Kouhei Sutou-san. Thanks
	
	* uim-util.c (str_seq_equal): Replace NIL with false_sym
	
	* im.scm
	  - (context-list): Replace invalid #f with ()
	  - (remove-context-rec): Fix invalid list operation
	  - (find-im-by-name-rec): Fix invalid list operation
	  - (next-im): Fix invalid list operation
	  - (select-im): Replace invalid () with #f
	  - (create-context): Add error handling
	  - (release-context): Add error handling
	
	* uim-sh.scm (uim-sh-loop): Fix invalid comparison
	
2004-05-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-key.scm:
	  - New file
	  - (testcase key): New testcase
	  - (test modifier key mask predicates): New test
	  - (test modifier-key?): New test
	  - (test translator-prefix?): New test
	  - (test intern-key-prefix): New test
	  - (test parse-tag-prefix-symbol): New test
	  - (test parse-tag-prefix): New test
	  - (test parse-emacs-like-prefix): New test
	  - (test parse-key-prefix): New test
	  - (test parse-key-str): New test
	  - (testcase key translators): New testcase
	  - (test IgnoreCase translator): New test
	  - (test IgnoreShift translator): New test
	  - (test IgnoreRegularShift translator): New test
	  - (test apply-translators): New test
	  - (testcase key key-predicates): New testcase
	  - (test make-single-key-predicate): New test
	  - (test make-key-predicate): New test
	  - (test modify-key-strs-implicitly): New test
	  - (test define-key-internal): New test
	
2004-05-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper-candwin-gtk.c: Removed some unused variables.
	
2004-05-24 kzk <mover@hct.zaq.ne.jp>
	
	* quiminputcontext.cpp
	  - (commit_cb): create wrapper function named commitString
	  - (clear_cb): create wrapper function named clearPreedt
	  - (pushback_cb): create wrapper function named pushbackPreeditString
	  - (update_cb): create wrapper function named updatePreedit
	  - (cand_activate_cb): create wrapper function named candidateActivate
	  - (cand_select_cb): create wrapper function named candidateSelect
	  - (cand_deactivate__cb): create wrapper function named candidateDeact\
	ivate
	  - (cand_shift_page_cb): disenabled
	  - (getPreeditString): non static function
	  - (getPreeditCursorPosition): non static function
	  - (getPreeditSelectionLength): non static function
	  - isImStarted is member variable of QUimInputContext(fix known bug)
	* candidate.h, candidatewindow.cpp
	  - rename deactivateCandidate into candidateDeactivate
	  - five members is now protected
	
	
2004-05-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* xim/connection.cpp: check message_type of XIM event
	
2004-05-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-util.c (string_equal): changed to return true_sym or false_sym
	
2004-05-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-util.c (uim_init_util_subrs): Fix a comment
	
2004-05-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-util.c (uim_init_util_subrs): Init false_sym as NIL. This has
	  fixed inconsistent #f representations introduced on r863. false_sym
	  has to be NIL until bug #617 is fixed
	
2004-05-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-util.c (str_seq_partial): use false_sym
	
2004-05-21 kzk <mover@hct.zaq.ne.jp>
	
	* uim-util.c: false_sym is siod_false_value()
	
2004-05-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-util.c (str_seq_partial): Add comment of return value. Merge some obvious part of Suto-san's patch.
	
2004-05-21 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin
	  - quiminputcontext.cpp: add some comments for complicated behavior
	  - COPYING: fix the copyright year
	
2004-05-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* quiminputcontext.cpp:
	  - (DEFAULT_SEPARATOR_STR): New macro
	  - (min): Removed
	  - (max): Removed
	  - (x11FilterEvent): Replace deprecated uim API names with new ones
	  - (forceInside): Replace min() and max() with standard QMIN() and
	    QMAX()
	  - (pushback_cb): Accept independent cursor segment and separator
	    segment. This has fixed cursor moving problem
	  - (getPreeditString): Support segment separator
	  - (getPreeditCursorPosition): Support segment separator
	  - (getPreeditSelectionLength):
	    * Fix improper detection method for selection length
	    * Replace deprecated UPeAttr_Cursor with UPreeditAttr_Cursor
	
2004-05-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-util.c: backout previous changes.
	
2004-05-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* uim-util.c: merge some part of Suto-san's patch. One step toward #642.
	* siod.h: missing declaration of cdar
	
2004-05-19 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* This commit adds dynamic custom value update via
	  uim-helper-server. Basically worked with Sumika.
	
	* im.scm:
	  - (im-prop-handler-alist): New variable. Exists as prop-handler
	    dispatch table
	  - (prop-handler): Add prop-message itself to arg to dispatch message
	    to appropriate handler. Mainly modified to support
	    "prop_update_custom" message.
	* custom.scm (custom-prop-update-custom-handler): New procedure. Added
	  for "prop_update_custom" message handling to support dynamic custom
	  value update
	* loader.scm: Add '(require "custom.scm")' as comment. Uncomment this
	  line to enable dynamic custom value update. This is temporary
	  solution. custom.scm will be devided into three parts in future
	  version of uim. custom.scm for configuration tools, custom-rt.scm
	  for IM bridges (rt stands for 'runtime'), and per-IM-file
	  'define-custom's
	
	* uim.h (uim_prop_update_custom): New API
	* uim-scm.h:
	  - (uim_custom_value_as_string): New API
	  - (uim_api_tbl): Add uim_custom_value_as_string
	* uim-util.c (uim_custom_value_as_string): New function. Wraps
	  custom-canonical-value-as-string
	
	* context.h:
	  - (UIM_EVAL_FSTRING1): New macro
	  - (UIM_EVAL_FSTRING2): New macro
	  - (UIM_EVAL_FSTRING3): New macro
	  - (UIM_EVAL_FSTRING4): New macro
	  - (UIM_EVAL_FSTRING5): New macro
	  - (uim_sizeof_sexp_str): New internal API
	* uim-func.c:
	  - (MAX_LENGTH_OF_INT_AS_STR): New macro
	  - (uim_sizeof_sexp_str): New function
	* uim.c:
	  - (uim_prop_activate): Add 'prop-activate as second arg to follow
	    new prop-handler interface. API and ABI is not changed
	  - (uim_prop_update_custom): New function. Updates custom value from
	    property message
	
	* qt/quiminputcontextplugin/qhelpermanager.cpp (parseHelperStr): Add
	  "prop_update_custom" message handling to support dynamic custom
	  value update
	* gtk-im-uim.c (im_uim_parse_helper_str): Add "prop_update_custom"
	  message handling to support dynamic custom value update
	
2004-05-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*util.scm (multi-segment-make-string) use null? to check condition
	
2004-05-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* anthy.scm: initialize anthy-context-wide-latin #f not ()
	
2004-05-19 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin
	   - install: some distro have no ${QTDIR}/plugins/input directory
	
2004-05-19 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin: set the width of candidate window size properly by judging from the font size
	
2004-05-18 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* skk.scm: Trim whitespaces
	* uim.h: Reform a declaration
	
2004-05-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.8
	
2004-05-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.c (uim_quit_prime): file handler should be assigned NULL when quit.
	
2004-05-17 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*skk.scm: Also learn result when implicit commit by typing next text happens. Thanks to Kato Etsushi-san.
	
2004-05-17 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* ximserver.cpp: move freeing of candidates proper position. Thanks to Kato Etsushi-san
	
2004-05-17 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* anthy.c: make create_context not to touch context_array, if it is not initialized.
	
2004-05-17 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* util.scm (proc-and): new procedure
	* test/test-util.scm:
	  - (test proc-and): New test
	  - (test enclose-another-env): Add nonexistent check of variable
	
	* custom.scm:
	  - (custom-activator-alist): Rename to custom-activity-hook
	  - (custom-get-hook-alist): Rename to custom-get-hook
	  - (custom-set-hook-alist): Rename to custom-set-hook
	  - (custom-activity-hook): Renamed from custom-activator-alist
	  - (custom-get-hook): Renamed from custom-get-hook-alist
	  - (custom-set-hook): Renamed from custom-set-hook-alist
	  - (custom-define-activator): Removed. Use custom-add-hook instead
	  - (custom-add-get-hook): Removed. Use custom-add-hook instead
	  - (custom-add-set-hook): Removed. Use custom-add-hook instead
	  - (custom-add-hook): New procedure
	  - (custom-procs-for): Rename to custom-hook-procs
	  - (custom-hook-procs): Renamed from custom-procs-for
	  - (custom-call-procs-for): Rename to custom-call-hook-procs
	  - (custom-call-hook-procs): Renamed from custom-call-procs-for
	  - (custom-value): Replace hook procedure calls with new one
	  - (custom-active?):
	    * Replace activator with hooks
	    * Accept plural hooks
	  - (custom custom-preserved-default-im-name): Replace hook
	    definitions according to new infrastructure
	  - (custom custom-activate-default-im-name): Replace hook
	    definitions according to new infrastructure
	  - (custom switch-im-key?): Replace activator definition according to
	    new infrastructure
	  - (custom custom-preserved-canna-server-name): Replace hook
	    definitions according to new infrastructure
	  - (custom custom-activate-canna-server-name): Replace hook
	    definitions according to new infrastructure
	  - (custom canna-server-name): Replace hook definitions according to
	    new infrastructure
	* test/test-custom.scm:
	  - (sort-symbol): New procedure
	  - (test custom-define-group, custom-group-rec): Add plural group
	    definition check
	  - (test custom-list-groups): New test
	  - (test custom-list-primary-groups): New test
	  - (test custom-collect-by-group): New test
	  - (testcase custom hooks): New testcase
	  - (test custom-hook-procs (null)): New test
	  - (test custom-add-hook, custom-hook-procs, custom-call-hook-procs):
	    New test
	  - (test custom-active?): New test
	  - (testcase custom get and set hooks): New testcase
	  - (test custom-get-hook): New test
	  - (test custom-get-hook (self update)): New test
	  - (test custom-set-hook): New test
	  - (test custom-set-hook (self update)): New test
	  - (testcase custom canna-server-name): New testcase
	  - (test canna-server-name): New test
	
2004-05-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm:
	 - (prime-get-candidates): Replaced "lookup_compact" with
	                           "lookup_compact_all".
	
2004-05-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* japanese.scm:
	 - (ja-rk-rule): Add new entries.
	
2004-05-14 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontext: unify debug message.
	
2004-05-14 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-custom.scm:
	  - (test anything?):
	    * Fix a copy-and-paste bug
	    * Add list assersions
	  - (test custom-boolean?): Add list assersions
	  - (test custom-integer?): Add list assersions
	  - (test custom-string?): Add list assersions
	  - (test pathname?): Add list assersions
	  - (test custom-valid-symbol?): Add list assersions
	  - (test custom-symbol-rec-new): Swap expected and actual to correct
	  - (test custom-symbol-label): Swap expected and actual to correct
	  - (test custom-symbol-desc): Swap expected and actual to correct
	  - (test custom-symbol-rec-new): Swap expected and actual to correct
	  - (test custom-define-group, custom-group-rec): Swap expected and
	    actual to correct
	
	* test/test-util.scm:
	  - (testcase util character predicates): New testcase
	  - (test control-char?): New test
	  - (test alphabet-char?): New test
	  - (test usual-char?): New test
	  - (test numeral-char?): New test
	  - (testcase util character conversion procedures): New testcase
	  - (test numeral-char->number): New test
	  - (test to-lower-char): New test
	  - (testcase util string list procedures): New testcase
	  - (test string-list-concat): New test
	  - (test string-find): New test
	  - (testcase util list procedures): New testcase
	  - (test truncate-list): New test
	  - (test proc-or): New test
	  - (testcase util R5RS procedures): New testcase
	  - (test else): New test
	  - (test boolean?): New test
	  - (test integer?): New test
	  - (test list?): New test
	  - (test string->symbol): New test
	  - (test map): New test
	  - (test for-each): New test
	  - (testcase SRFI procedures): New testcase
	  - (test filter-map): New test
	  - (testcase Siod specific procedures): New testcase
	  - (test toplevel-env): New test
	  - (test enclose-another-env): New test
	  - (test define-record record definition): Swap expected and actual
	    to correct
	
2004-05-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk-dic.c:
	 - (parse_dic_line): Improve the judgement whether okuri-ari entry or not.
	                     e.g. 'hoge' shouldn't be treated as okuri-ari entry. 
	
2004-05-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk-dic.c:
	 -(first_space): New function.
	 - nth_candidate: call first_space before call next_slash, because skk 
	                  dictionary key can include '['. 
	
2004-05-14 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/test-util.scm:
	  - New file
	  - (testcase util define-record): New testcase
	  - (test define-record record definition): New test
	  - (testcase util define-record accessors): New testcase
	  - (test define-record getters): New test
	  - (test define-record setters): New test
	
	* test/test-custom.scm:
	  - (testcase custom): Renamed to "custom validators"
	  - (testcase custom validators): Renamed from "custom"
	  - (test anything?): New test
	  - (test custom-valid-symbol?): New test
	  - (testcase custom-symbol): New testcase
	  - (test custom-symbol-rec-new): New test
	  - (test custom-symbol-label): New test
	  - (test custom-symbol-desc): New test
	  - (testcase custom-group): New testcase
	  - (test custom-group-rec-new): New test
	  - (test custom-define-group, custom-group-rec): New test
	  - (testcase define-custom): New testcase
	  - (test define-custom (symbol)): New test
	
2004-05-13 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* ximserver.cpp: fixed mask of Meta key. Thanks KATO Kazuyoshi-san
	
2004-05-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test//test-custom.scm: svn propset svn:executable ON
	* ChangeLog: Update
	
2004-05-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-sh.c (main): Keep verbose level 1 to make (require "foo.scm")
	  returns *foo.scm-loaded* only. This is required to run
	  uim-test-utils.scm correctly.
	
	* test/test-custom.scm:
	  - New file
	  - (testcase custom): New testcase
	  - (test custom-boolean?): New test
	  - (test custom-integer?): New test
	  - (test custom-string?): New test
	  - (test pathname?): New test
	
2004-05-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/uim-test-utils.scm:
	  - (uim-sh-select): Fix portname
	  - (make-uim-sh-teadown-proc): Rename to make-uim-sh-teardown-proc.
	    Maybe a typo.
	  - (make-uim-sh-teardown-proc): Renamed from make-uim-sh-teadown-proc
	  - (make-uim-test-case): Replace make-uim-sh-teadown-proc
	
2004-05-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-scm.h:
	  - (uim_scm_cadr): New API
	  - (uim_scm_caar): New API
	  - (uim_scm_cdar): New API
	  - (uim_scm_cddr): New API
	* uim-util.c:
	  - (uim_scm_cadr): New function
	  - (uim_scm_caar): New function
	  - (uim_scm_cdar): New function
	  - (uim_scm_cddr): New function
	
	* custom.scm:
	  - (custom-validator-alist): Replace boolean validator with
	    custom-boolean?
	  - (custom-boolean?): New procedure. Relax checking whether boolean
	    or not
	  - (custom-value): Fix timing of hook invocation
	  - (custom-hook-get-default-im-name): Reflect
	    custom-preserved-default-im-name
	  - (custom canna-server-name): Defaults to #f rather than ""
	  - (custom-hook-get-canna-server-name): Reflect
	    custom-preserved-canna-server-name
	  - Fix to add custom-hook-set-canna-server-name to
	    custom-preserved-canna-server-name rather than canna-server-name
	
2004-05-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm: Reverted to r827. diff -r 827:828 is wrong.
	
2004-05-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk-dic.c:
	 - (next_slash): Consider a case '[' is used for index word.
	
2004-05-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm:
	 - (skk-do-update-preedit): do not pushback candidate if there's no candidate.
	
2004-05-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm:
	  - (custom-range): Return valid symbol list rather than raw recoreds
	    if type of custom is symbol
	  - (custom-type-attrs): New procedure. Return raw type attributes
	    rather than range
	  - (custom-valid-symbol?): Fix broken argument passing
	  - (custom-valid?): Replace custom-range with custom-type-attrs
	  - (custom-symbol-label): Replace custom-range with custom-type-attrs
	  - (custom-symbol-desc): Replace custom-range with custom-type-attrs
	
	* uim-scm.h:
	  - (uim_custom_symbol_range): Removed
	  - (uim_api_tbl): New type. Function table for dynamic loading. This
	    is highly experimental.
	
2004-05-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm:
	 - (skk-proc-state-okuri): Use skk-back-to-kanji-state to back to kanji state
	                           from okuri state. 
	
2004-05-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm (custom candidate-window-position): Fix type definition
	
	* uim-scm.h:
	  - (uim_custom_group_label): New API
	  - (uim_custom_group_desc): New API
	  - (uim_custom_group_subgroups): New API
	  - (uim_custom_list_primary_groups): New API
	* uim-util.c:
	  - (uim_custom_group_label): New function
	  - (uim_custom_group_desc): New function
	  - (uim_custom_group_subgroups): New function
	  - (uim_custom_list_primary_groups): New function
	
2004-05-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm:
	  - Introduce 'primary group' and 'subgroups'
	  - (custom-subgroup-alist): New variable
	  - (custom-list-groups): Use proper accessor rather than car
	  - (custom-list-primary-groups): New procedure
	  - (define-custom): Configure primary group and subgroups
	  - (custom-valid?): Fix broken code
	  - (custom-value): Force validation and return default-value instead
	    of invalid value
	  - (custom-default?): New procedure
	  - (custom-group-subgroups): New procedure
	
2004-05-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-scm.h:
	  - (uim_custom_list_groups): New API
	  - (uim_custom_definition_as_string): New API
	* uim-util.h:
	  - (uim_custom_list_groups): New function
	  - (uim_custom_definition_as_string): New function
	
	* custom.scm:
	  - (custom-list-groups): Return groups as defined order
	  - (custom-canonical-value-as-string):
	    * Fix value as integer
	    * Fix value as pathname
	    * Allow #f to all types
	
2004-05-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* slib.h (symbol_to_string): New function
	* slib.c:
	  - (symbol_to_string): New function
	  - (init_subrs): Add symbol_to_string as "symbol->string"
	* util.scm (string->symbol): New procedure. Just a alias of 'intern'
	  to conform to R5RS
	* key.scm (parse-key-str): Replace 'intern' with 'string->symbol'
	
	* custom.scm:
	  - (custom-canonical-value-as-string): New procedure
	  - (custom-canonical-definition-as-string): New procedure
	
2004-05-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm:
	  - (custom-validator-alist): Rename 'item-list' with 'symbol'
	  - (custom-valid-item?): Rename to custom-valid-symbol?
	  - (custom-valid-symbol?): Renamed from custom-valid-item?
	  - (record custom-symbol-rec): New record definition
	  - (custom-symbol-label): New procedure
	  - (custom-symbol-desc): New procedure
	  - (pinyin-big5-im-canonical-name): New variable
	  - (pinyin-big5-im-desc): New variable
	  - (custom uim-color): Rename typename to symbol from item-list
	  - (custom default-im-name): Rename typename to symbol from item-list
	  - (custom skk-style): Rename typename to symbol from item-list
	
	* uim-scm.h:
	  - Introduce customization interfaces to cooperate with user-friendly
	    configuration tools such as Sumika
	  - (enum UCustomType): New type
	  - (uim_custom_value): New API
	  - (uim_custom_value_as_bool): New API
	  - (uim_custom_value_as_int;): New API
	  - (uim_custom_value_as_str): New API
	  - (uim_custom_value_as_path): New API
	  - (uim_custom_value_as_symbol): New API
	  - (uim_custom_set): New API
	  - (uim_custom_symbol_range): New API
	  - (uim_custom_symbol_label): New API
	  - (uim_custom_symbol_desc): New API
	  - (uim_custom_type): New API
	  - (uim_custom_ctype): New API
	  - (uim_custom_range): New API
	  - (uim_custom_collect_by_group): New API
	* uim-util.c:
	  - (uim_custom_value): New function
	  - (uim_custom_value_as_bool): New function
	  - (uim_custom_value_as_int;): New function
	  - (uim_custom_value_as_str): New function
	  - (uim_custom_value_as_path): New function
	  - (uim_custom_value_as_symbol): New function
	  - (uim_custom_set): New function
	  - (uim_custom_symbol_range): New function
	  - (uim_custom_symbol_label): New function
	  - (uim_custom_symbol_desc): New function
	  - (uim_custom_type): New function
	  - (uim_custom_ctype): New function
	  - (uim_custom_range): New function
	  - (uim_custom_collect_by_group): New function
	
2004-05-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* japanese.scm (ja-rk-rule): Some additional entries was added.
	
2004-05-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* pinyin-big5.scm: Add tone entries.
	
2004-05-11 Masahito Omote <omote@utyuuzin.net>
	
	* scm/canna.scm:
	  + uim-canna: works again.
	  + canna-proc-input-state-with-preedit:
	    - Fix 'ERROR: wta(1st) to lessp', when canceling conversion by backspace
	      key.
	    - use cond instead of if.
	  + canna-proc-input-state-no-preedit:
	    - use cond instead of if.
	
2004-05-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* xim/ximserver.cpp (candidate_activate):
	  - Fix a memory leak
	  - Cast return value of uim_candidate_get_cand_str() as
	    (const char *) to prepare to fix bug #501
	* qt/quiminputcontextplugin/candidatewindow.cpp
	  (CandidateWindow::layoutCandidate): Cast return value of
	  uim_candidate_get_cand_str() as (const char *) to prepare to fix bug
	  #501
	
	* uim-scm.h (uim_lisp): Fix typedef to avoid 'const uim_lisp' is
	  preprocessed as 'void *const'
	* im.scm (im-list): Fix default value with () from #f
	
2004-05-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* helper-toolbar-common-gtk.c: unify code to check connection
	
2004-05-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm (skk-proc-state-converting): Call skk-commit. This will fix behavior
	  when the candidate have a annotation. Thanks to login:penguin. 
	
2004-05-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper-toolbar-common-gtk.c
	 - (helper_applet_prop_list_update): Delay create menu_item until use.
	 - Now we have only one instance of GtkMenu to indidate popup menu.
	
2004-05-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* helper-toolbar-common-gtk.c (button_destroy): Use gtk_container_remove
	  instead of gtk_widget_destroy.
	
2004-05-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* PY.scm: Add some symbols.
	
2004-05-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* pinyin-big5.scm: Add some symbols.
	
2004-05-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* pinyin-big5.scm: Add copyright.
	
2004-05-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* pinyin-big5.scm: New input method. pinyin-big5 for traditional Chinese
	  characters.
	
2004-05-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* helper-toolbar-common-gtk.c: properly free menu item string
	
2004-05-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm (skk-proc-state-direct-no-preedit): update prop label when mode
	  is switched.
	
2004-05-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* prime.c: add #include <string.h> to use strlen()
	
2004-05-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* configure.ac: New option. --without-m17nlib
	
2004-05-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm:
	  - (custom uim-color): Fix type definition
	  - (custom candidate-window-position): New custom
	  - (custom custom-preserved-canna-server-name): New custom
	  - (activator custom-preserved-canna-server-name): Fix activator name
	  - (custom-hook-get-canna-server-name): Fix a typo on variable name
	  - (custom skk-style):
	    * Fix type definition
	    * Rename label name of skk-style-ddskk-like to cooperate with Sumika
	
2004-05-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*prime.scm (prime-send-command): Rewrite by using named let.
	
2004-05-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim/uim-scm.h:
	  - (uim_scm_quote): New API
	  - (uim_scm_qintern_c_str): New API
	* uim/uim-util.c:
	  - (quote_sym): New variable
	  - (uim_scm_quote): New function
	  - (uim_scm_qintern_c_str): New function
	  - (uim_scm_nth): Fix duplicate lispification of n
	  - (uim_scm_list1): Replace internal code with listn()
	  - (uim_scm_list2): Replace internal code with listn()
	  - (uim_scm_list3): Replace internal code with listn()
	  - (uim_scm_list4): Replace internal code with listn()
	  - (uim_scm_list5): Replace internal code with listn()
	
	* custom.scm:
	  - (default-im-canonical-name): Renamed from default-im-name because
	    it is conflicting with another, same name variable
	  - (anthy-im-canonical-name): Renamed from anthy-im-name according to
	    default-im-canonical-name. Other IMs are also renamed so
	  - (define-custom): Fix an error when default-value is a symbol
	  - (custom-default-value): Fix invalid procedure name
	  - (custom-preserved-default-im-name): Fix invalid form of custom-range
	  - (custom-hook-get-defualt-im-name): Fix a typo on varriable name
	* scm/Makefile.am: Add custom.scm
	
	* uim/uim-sh.c (main): Cleanup with uim_scm_listx() and uim_scm_quote()
	* doc/UIM-SH: Add exit process
	
2004-05-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*prime.scm (prime-send-command):New function.
	
2004-05-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*helper-toolbar-gtk.c (main): parse geometory if given.
	
2004-05-06 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin: dealing the case that the length of preedit is zero(thx! Daisuke)
	
2004-05-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.6.
	
2004-05-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*prime.scm (prime-proc-state-converting): Add special proceccing for special
	 keys (Not completed yet).
	
2004-05-05 kzk <mover@hct.zaq.ne.jp>
	
	* qtkde-helper: delete Makefile.in(s)
	
2004-05-05 kzk <mover@hct.zaq.ne.jp>
	
	* qt/qtkde-helper: not to delete null pointer
	
2004-05-05 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin: cursor position should be the last of preedit.
	
2004-05-05 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontext: forgot to commit quiminputcontext.h
	
2004-05-05 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontextplugin
	  - add composition state changing(thx! Daisuke)
	  - add preedit selection support(thx! Daisuke)
	  - fix cannot enable quiminputcontextplugin when launching app from kicker(thx! Daisuke)
	
	
2004-05-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Add new directory test/
	
2004-05-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm (prime-proc-state-converting): Change semantic of cancel.
	
2004-05-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm (prime-commit-candidate): learning-word doesn't relate to this
	  function.
	
2004-05-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-ipc.c (uim_ipc_send_command): strlen(tmp) == 0 should not cause error.
	
2004-05-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* im.scm: Add comments.
	
2004-05-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* util.scm (candidate-window-position): Change default value.
	
2004-05-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* gtk-im-uim.c (im_uim_class_finalize): New function.
	
2004-05-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* m17nlib.c, uim.c: Add #ifdef HAVE_M17NLIB
	
2004-05-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.scm (anthy-init-lib-ok?): Default value changed to #f from '()
	
2004-05-03 kzk <mover@hct.zaq.ne.jp>
	
	* qt/quiminputcontext
	  - fix quiminputcontext's helper function sometimes uses full CPU power
	
2004-05-02 kzk <mover@hct.zaq.ne.jp>
	
		* qt/qtkde-helper
		  - display menus on proper direction(up, right, left, down)
	
2004-05-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim.c (uim_quit): Avoid excessive cleanup on duplicate quit.
	* canna.c (uim_quit_canna): Fix memory cleanup for cyclic
	  initialization
	* This commit has resolved bug #586 by patch [Anthy-dev 798] by
	  Seiichi SATO-san. Thanks.
	
2004-05-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim.c (load_conf): Fix excessive free(). This has resolved bug #585
	
2004-05-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* doc/UIM-SH: New file. Simple introduction for uim-sh
	
2004-05-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* ChangeLog: Update
	
2004-05-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-util.c
	  (uim_scm_nth): Remove unused variable.
	  (eucjp_string_to_list): Remove unused variable.
	
2004-05-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm : Semantics of prime-context-mode and prime-context-state are
	              changed. Now state is used to indicate the state of preedit,
		      mode is used to indicate the stat of input mode.
	
2004-05-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm: I forgot to eliminate some kana-mode related functions.
	
2004-05-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm (prime-context-kana-mode): Removed all related functions, because
	  this variable is not used now.
	
2004-05-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm:
	  - (custom-define-group): Fix a typo
	  - (define-custom): Fix a invalid sexp
	  - (custom-procs-for): Fix let as let*
	  - Add quote to some of define-custom
	
	* uim-scm.h:
	  - (uim_scm_nullp): New API
	  - (uim_scm_eq): New API
	  - (uim_scm_string_equal): New API
	  - (uim_scm_nth): New API
	  - (uim_scm_list1): New API
	  - (uim_scm_list2): New API
	  - (uim_scm_list3): New API
	  - (uim_scm_list4): New API
	  - (uim_scm_list5): New API
	* uim-util.c:
	  - (uim_scm_nullp): New function
	  - (uim_scm_eq): New function
	  - (uim_scm_string_equal): New function
	  - (uim_scm_nth): New function
	  - (uim_scm_list1): New function
	  - (uim_scm_list2): New function
	  - (uim_scm_list3): New function
	  - (uim_scm_list4): New function
	  - (uim_scm_list5): New function
	
2004-05-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* src/Makefile.in: Removed. It's not need for repository.
	
2004-05-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-scm.h (uim_scm_c_str): Change return type to 'char *' from
	  'const char *'
	* uim-util.c:
	  - (uim_get_c_string): Mark as 'may be deprecated'
	  - (uim_scm_c_str): strdup() return value
	  - (uim_scm_symbol_value_str): Replace uim_get_c_string() with
	    uim_scm_c_str()
	
2004-05-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-scm.h:
	  - (uim_scm_c_int): New API
	  - (uim_scm_symbol_value_int): New API
	  - (uim_scm_int_from_c_int): New API
	  - (uim_scm_c_str): New API
	  - (uim_scm_str_from_c_str): New API
	  - (uim_scm_symbol_value): New API
	  - (uim_scm_t): New API
	* uim-util.c:
	  - (uim_scm_c_int): New function
	  - (uim_scm_int_from_c_int): New function
	  - (uim_scm_c_str): New function
	  - (uim_scm_str_from_c_str): New function
	  - (uim_scm_symbol_value): Make public
	  - (uim_scm_t): New function
	
2004-04-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.scm(anthy-proc-compose-state):
	  - Symbol keys should be ignore.
	
2004-04-30 kzk <mover@hct.zaq.ne.jp>
	
	delete unnecessary files.
	
2004-04-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm: Remove debug messages.
	
2004-04-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm
	  (prime-prop-handler): Fix order of arguments of prime-update-preedit. Thanks
	  to Etsushi Kato.
	  (prime-get-nth-candidate): Fix position of closed parenthesis. 
	
2004-04-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm
	 - (prime-get-label): New function.
	 - (prime-parse-cands, prime-get-candidates!, prime-get-all-candidates!):
	   Reread if return strings equal "". This check is need when there's no
	   candidate strings.
	
2004-04-29 kzk <mover@hct.zaq.ne.jp>
	
	initial commit of uim-qtkde-helper!
	
2004-04-29 kzk <mover@hct.zaq.ne.jp>
	
	initial commit of quiminputcontextplugin!
	
2004-04-29 kzk <mover@hct.zaq.ne.jp>
	
	Making a new dir.
2004-04-29 kzk <mover@hct.zaq.ne.jp>
	
	Making a new dir.
2004-04-29 kzk <mover@hct.zaq.ne.jp>
	
	Making a new dir.
2004-04-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	romaja.scm: David-san's updated version
	
2004-04-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* util.scm:
	  - (define-record): New procedure. Designed to define accessors and
	    'new' procedure easily and safely. It is intended to replace
	    preexisting boring definitions such as anthy-context.
	  - (map) New procedure. Just a alias of mapcar which accepts up to 2
	    lists
	  - (for-each) New procedure. Just a alias of mapcar which accepts up
	    to 2 lists. Process order is guaranteed by siod's mapcar
	    implementation
	  - (filter-map) New procedure. Similar to the SRFI procedure, but it
	    accepts single list only
	  - (toplevel-env) New variable. Unified from local definitions
	
	* custom.scm:
	  - It has been Almost implemented except key customization feature
	  - Add broadcast API for dynamic update (not implemented yet)
	
2004-04-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* slib.c: Rewrite internal let definitions to accept named let. This
	  has resolved bug #532. All changes of this commit is contributed by
	  patch [Anthy-dev 789] by Kouhei Sutou-san. Thanks
	* test/test-macro.scm: New file to test above named let
	
	* test/uim-test-utils.scm:
	  - Show error messages from stderr of inferior uim-sh process
	  - Some cleanups
	* test/test-uim-test-utils.scm: New file
	
2004-04-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm(prime-get-candidates!): Use lookup_compact_all instead of
	  lookup_compact to avoid a bug. When there's no predict candidate,
	  uim-prime ignore next key event.
	  
	
2004-04-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm(prime-wide-latin-key?): bind <Control>L for wide-latin
	
2004-04-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* anthy.scm (anthy-make-whole-string): Fix the disfunction broken by
	  r750. Considar (anthy-make-whole-string ac #f kana)
	
2004-04-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm (prime-context-candidate-op-count): Remove no need varible.
	
	
2004-04-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.scm (anthy-make-whole-string): Fix a bug in kana input mode.
	* anthy.scm (anthy-proc-input-state-with-preedit): Fix a bug in kana input mode.
	* anthy.scm (anthy-proc-input-state-no-preedit): Fix a bug in kana input mode.
	
	
2004-04-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/uim-test-utils.scm: Fix deadlock problem using select(2).
	  Patch [Anthy-dev 777] by Kouhei Sutou-san. Thank you again. Now uim
	  testing framework is usable. This has resolved bug #483
	
	* uim-scm.h:
	  - (uim_scm_get_output): New API
	  - (uim_scm_set_output): New API
	* uim.c:
	  - (uim_scm_get_output): New function
	  - (uim_scm_set_output): New function
	* uim-sh.c:
	  - (main): Redirect output from stderr to stdout using
	    uim_scm_set_output()
	  - All above changes involving uim_scm_*_output are originally
	    contributed by patch [Anthy-dev 778] by Kouhei Sutou-san. Thanks.
	
2004-04-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* slib.c: Revert to r745 to cancel the change of r746. It doesn't work
	  with default path (SCM_FILES) although work with some slash-ended
	  LIBUIM_SCM_FILES.
	
	* anthy.scm (anthy-proc-input-state-with-preedit): Make CapsLock'ed
	  roma-ji entry working. Patch by [Anthy/uim thread 2 870]. Thanks
	  login:Penguin.
	
2004-04-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* A scheme function renamed to string=? from string-equal?.
	  Because string=? is R5RS compliant.
	
2004-04-23 kzk <mover@hct.zaq.ne.jp>
	
	* slib.c: display the correct path of the loading file.
	
2004-04-23 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	* ximserver.cpp: correct modifier key value to support CapsLock. Thanks for login:Penguin
	
2004-04-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm (prime-get-all-candidates!): New function.
	
2004-04-23 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm:
	  - define-custom spec has been fixed, for now
	  - Add all custom definitions for currently available IMs
	  - Add validators unified with type definition (not completed yet)
	  - Add activation dependency (not completed yet)
	  - Add get and set hooks (not completed yet)
	  - Add group definition (not completed yet)
	
	* prime.scm;
	  - (prime-mask-pending-preedit): Rename to prime-mask-pending-preedit?
	  - (prime-mask-pending-preedit?): Renamed from prime-mask-pending-preedit
	
	* util.scm: Make uim-color vars defaults to #f
	* skk.scm: Make skk-style vars defaults to #f
	
2004-04-23 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* util.scm:
	  - (numeral?): Rename to numeral-char?
	  - (numeral-char?):
	    * Renamed from numeral?
	    * Fix as ':'(ASCII 58) is not a numeral-char
	    * Rewrite character-range representaion naturally
	  - (numeral-char->number): New procedure
	  - (number->candidate-index): New procedure
	  - (integer?): New procedure. number? is semantically inappropriate
	    on some situation
	  - (control-char?): Fix as DEL(ASCII 127) is a control-char
	  - (alphabet-char?): Rewrite character-range representaion naturally
	
	* prime.scm:
	  - (prime-proc-input-with-preedit):
	    * Make '0' key usable to select 10th candidate
	    * Fix ':' key was improperly being used to select 1st candidate
	  - (prime-proc-state-converting):
	    * Make '0' key usable to select 10th candidate
	    * Fix ':' key was improperly being used to select 1st candidate
	  - Above fixes have resolved bug #539
	
2004-04-23 kzk <mover@hct.zaq.ne.jp>
	
	Before this patch, you input "andon" and press anthy-commit-as-katakana-key, "$B%"%s%I(B" is committed.
	This should be "$B%"%s%I%s(B".
	
2004-04-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm: Implement group handling, custom definition and
	  accessors. Not worked yet.
	
2004-04-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* test/uim-test-utils.scm (make-uim-setup-proc): Fix uim-sh
	  interaction. Patch [Anthy-dev 775] by Kouhei Sutou-san. Thanks
	
2004-04-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* skk.scm:
	  - (skk-get-string-by-mode): Split into two procedures
	  - (skk-get-string): New procedure. Forms string from skk-context by
	    arbitrary kana type
	  - (skk-append-residual-kana): New procedure
	  - (skk-begin-conversion): Clean up using skk-append-residual-kana
	  - (skk-proc-state-direct):
	    * Handles "nq" key sequence as below. This is ddskk-compatible
	      behavior. This has resolved bug #500
	      1. commits "n" as kana according to kana-mode
	      2. switch kana-mode by "q" (hiragana to katakana, or reversely)
	    * Handles "n " key sequence as below. This is ddskk-compatible
	      behavior.
	      1. commits "n" as kana according to kana-mode
	      2. commits " " as native space (such as Qt::Key_Space)
	    * commits "n" as kana according to kana-mode on
	      skk-commit-key?. This is ddskk-compatible behavior.
	    * Add some comments involving bug #528
	  - (skk-proc-state-kanji):
	    * commits pending "n" as kana on skk-commit-key? or
	      skk-return-key?
	    * commits pending "n" as kana on skk-kana-toggle-key?. This has
	      resolved bug #500
	    * Clean up using skk-append-residual-kana
	
2004-04-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-sh.scm: Change "-q" option to "-b" to be compatible with
	  gosh. This stands for "batch mode" rather than "quiet mode"
	
	* test: New directory for testing framework. Following scripts are
	  contributed at [Anthy-dev 764] by Kouhei Sutou-san. Thank you
	  for good solution.
	* test/uim-test-utils.scm: New file. Provides testing framework for
	  uim by organizing uim-sh, gosh and GaUnit.
	* test/run-test.scm: New file. The script to kick all tests
	* test/test-uim.scm: New file. sample test cases
	
2004-04-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* anthy.scm:
	  - (anthy-make-whole-string): Change 2nd arg to convert-pending? and
	    properly rk-flush
	  - (anthy-begin-conv): Fix pending "n" and kana-converted "n" are
	    appended duplicately, and cleaned up
	  - (anthy-proc-input-state-with-preedit): Fix pending "n" and
	    kana-converted "n" are committed duplicately on anthy-commit-key?
	  - Above modifications has reopened bug #518 and fixed again
	
2004-04-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* slib.c (leval_setq): Check symbol is bounded or not.
	* anthy.scm, util.scm: Doesn't use set! if symbol is not bounded.
	
2004-04-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* anthy.scm (anthy-make-whole-string):
	 - Handle "nq" key sequence.
	   This has resolved bug #518.
	
2004-04-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	uim-sh.c (main): Replace cons() with uim_scm_cons()
	
2004-04-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* siod.c (strcons): Make char * arg const
	
	* uim-scm.h:
	  - (uim_lisp): New typedef. Represents opaque lisp object
	  - Export primitive Scheme interpreter interfaces as preliminary API
	* uim-util.c:
	  - (uim_split_string): Split some code into uim_scm_c_strs_into_list
	  - (uim_scm_c_strs_into_list): New function
	  - (uim_scm_intern_c_str): New function
	  - (uim_scm_f): New function
	  - (uim_scm_null_list): New function
	  - (uim_scm_eval): New function
	  - (uim_scm_car): New function
	  - (uim_scm_cdr): New function
	  - (uim_scm_cons): New function
	
	* uim-sh.c (main): Forward the argv into uim-sh
	* uim-sh.scm:
	  - Support commandline options
	  - Add quiet-mode option to suppress command prompt. This has
	    resolved bug #507
	  - (uim-sh-parse-args): New procedure
	  - (uim-sh-usage): New procedure
	
	* util.scm (string-find): Use #f rather than () properly
	
	
2004-04-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim-sh.c: Make uim-sh working with current libuim. This has
	resolved bug #482. Some modification is based on the patch
	[Anthy-dev 764] by Kouhei Sutou-san. Thanks
	
	* scm/Makefile.am: Add uim-sh.scm. Based on the patch [Anthy-dev 764]
	by Kouhei Sutou-san. Thanks
	* uim/Makefile.am: Add uim-sh to bin_PROGRAMS. Based on the patch
	[Anthy-dev 764] by Kouhei Sutou-san. Thanks
	
2004-04-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	uim-util.c(uim_scm_symbol_value_int): Renamed get_c_long -> get_c_int 
	
2004-04-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* function renamed. get_c_long -> get_c_int. This has resolved bug #493.
	
2004-04-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* scm/uim-sh.scm: New file
	* uim/uim-sh.c: New file. uim interactive shell for debugging,
	batch processing and serving as generic inferior process. Some
	modifications are required to work with current libuim.
	
2004-04-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* uim.h (uim_symbol_value_str): Mark as "will be deprecated"
	
	* uim-scm.h: New file. Scheme interpreter interface
	functions. "uim_scm" prefix is not stable name. More discussion is
	required. See also bug #481
	* uim/Makefile.am: Add uim-scm.h to pkginclude_HEADERS
	
	* uim.c
	  - (load_file): Move to uim-util.c:uim_scm_load_file
	  - (uim_init_scm): Use uim_scm_load_file()
	
	* uim-util.c
	  - (uim_scm_load_file): New function. Moved from uim.c:load_file and
	    modified
	  - (uim_scm_symbol_value): New function. Renamed from uim_symbol_value
	  - (uim_scm_symbol_value_int): New function. Renamed from
	    uim_symbol_value_int
	  - (uim_scm_symbol_value_str): New function. Renamed from
	    uim_symbol_value_str
	  - (uim_symbol_value_str): Rewrite as compatilibity wrapper
	  - (uim_scm_repl_c_string): New function. Based on the patch
	    [Anthy-dev 764] by Kouhei Sutou-san. Thanks
	  - (uim_scm_get_verbose_level): New function. Based on the patch
	    [Anthy-dev 764] by Kouhei Sutou-san. Thanks
	  - (uim_scm_set_verbose_level): New function. Based on the patch
	    [Anthy-dev 764] by Kouhei Sutou-san. Thanks
	
2004-04-20 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* slib.c (init_storage_1): Remove "nil" definition. This has resolved
	bug #484.
	
2004-04-19 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* custom.scm: New file. Customization support for GUI tools. Just a
	placeholder for now.
	
2004-04-18 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* gnuify-changelog.pl: Add kzk-san to hackers
	* ChangeLog: Update
	
	* README: Trivial fix
	
2004-04-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	AUTHORS: Add new commiter name :-)
	
2004-04-18 kzk <mover@hct.zaq.ne.jp>
	
	add error check of anthy_get_segment
	
2004-04-18 kzk <mover@hct.zaq.ne.jp>
	
	abolish warnigs
	
2004-04-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* slib.c(siod_false_value): New function to return sym_f.
	* anthy.c: replace NIL with siod_false_value()
	
2004-04-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* All scheme files: Replate nil with #f, because nil is not defined in R5RS.
	
2004-04-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* prime.scm: Replate nil with #f, because nil is not defined in R5RS.
	
2004-04-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim.c: Add some function prototypes.uim_quit_prime, uim_quit_canna.
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	anthy.c (init_anthy_lib): Return NIL if malloc is failed.
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Makefile.am: Add -Wall to CFLAGS
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	uim.c(load_file): Add NULL check, use snprintf instead of sprintf.
	
2004-04-17 kzk <mover@hct.zaq.ne.jp>
	
	abolish some warnigs
	
2004-04-17 kzk <mover@hct.zaq.ne.jp>
	
	abolish some warnigs
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-key.c: include string.h
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* siod.h(lprint): Mark static. 
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	*slib.c: Remove unused function, siod_version.
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* slib.c
	 - Remove unused functions. print_welcome, fopen_l.
	 - Remove unused local variables. 
	 
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-helper-server.c: Remove unused value. Include unistd.h
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-helper.h: Add function prototype: uim_helpler_fd_writable
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk-dic.c(compose_line_parts, find_cand_array_lisp): Remove unused variable.
	* skk-dic.c(find_cand_array_lisp): Return NIL when returning.
	
2004-04-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-helper-client.c: include unistd.h, because read/close functions are
	  called in this file.
	
2004-04-17 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	uim-helper.c: do not free() the result of getpwuid().
	 fix the leak of login name
	
2004-04-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*ximic.cpp: send XIM_FORWARD_EVENT as a passive packet. Thanks to Kato-san
	
2004-04-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	slib.c: remove the function flprint.
	
2004-04-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim-helper.c(uim_helper_str_terminated): Add const qualifier.
	
2004-04-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	xim/connection.cpp, xim/ximtrans.cpp: print packet on actuall send time
	
2004-04-14 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* util.scm (multi-segment-opposite-kana): New procedure. Generarized
	from anthy-opposite-kana.
	* anthy.scm (anthy-make-whole-string): New procedure. Unified from
	duplicate codes.
	(anthy-make-string): Removed. Use multi-segment-make-string instead.
	(anthy-make-left-string): Removed. Use multi-segment-make-left-string
	instead.
	(anthy-make-right-string): Removed. Use multi-segment-make-right-string
	instead.
	(anthy-opposite-kana): Removed. Use multi-segment-opposite-kana
	instead.
	(anthy-commit-as-katakana-key?): New key-binding. Commit preedit
	string as katakana.
	(anthy-commit-as-hankana-key?): New key-binding. Commit preedit
	string as half-width katakana.
	(anthy-commit-as-wide-latin-key?): New key-binding. Just a placeholder.
	(anthy-commit-as-latin-key?): New key-binding. Just a placeholder.
	
2004-04-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* skk.scm (skk-egg-like-newline?): New configration. If this variable is #t,
	  uim doesn't commit newline when converting. Thanks to Masaki Yatsu, Etsushi
	  Kato.
	
2004-04-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	uim-helper.c Eliminate alloca.
	
2004-04-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Eliminate alloca.
	
2004-04-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* uim.c: Eliminate alloca.
	
2004-04-13 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* skk.scm (skk-back-to-kanji-state):
	  - Fix truncated okuri-gana. Patch by [Anthy-dev 751]. Thanks
	    Etsushi Kato-san
	  - Eliminate improper (if ()) condition. To conform to R5RS,
	    use (null? ()) to detect if a list is empty or not.
	
2004-04-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* generic-key.scm: Add generic-begin-conv-key?
	* prime.scm (prime-begin-conv-key?): Use generic-begin-conv-key?
	* canna.scm (canna-begin-conv-key?): Use generic-begin-conv-key?
	* anthy.scm (anthy-begin-conv-key?): Use generic-begin-conv-key?
	* skk.scm (skk-begin-conv-key?): Use generic-begin-conv-key?
	
	* zaurus.scm: - Make <Shift>SELECT key working correctly
	              - Bind SELECT key as begin-conv and next-candidate
	
2004-04-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	slib.c: remove use of environment variable SIOD_LIB. reorder function declaration to eliminate warnings.
	
2004-04-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	romaja.scm: Capitalize first letter of sequence. David-san's newer version.
	
2004-04-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Update ChangeLog
	
2004-04-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* util.scm (enclose-another-env): New procedure. used for dynamic
	environment substitution of closure
	
	* hangul.scm: Fix generic-keys disabling process enbuged in r685. Now
	global generic-keys are untouched and other IMs are not affected.
	
2004-04-09 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	uim.c: allow user to change startup config file ~/.uim by environment
	       variable LIBUIM_USER_SCM_FILE. due to 713's suggestion.
	
2004-04-09 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* hangul.scm: Make generic-next-candidate-key?,
	generic-prev-candidate-key? and generic-commit-key? untouched to
	recover proper behavior. These key-predicates had broken by -r671:672.
	
	* key.scm: Add simple description for make-key-predicate,
	make-single-key-predicate and define-key-internal.
	
2004-04-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* anthy.scm (anthy-proc-compose-state): Recover "implicit commit by
	shift-modified chars" feature in compose state. This had been enbuged
	in -r661:662.
	
2004-04-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	loader.scm: Do not load romaja.scm at startup.
	
2004-04-08 Masahito Omote <omote@utyuuzin.net>
	
	gnuify-changelog.pl: Create ChangeLog from svn log.
	Makefile.am: Add 'make ChangeLog'.
	
2004-04-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot reinitialize at some environment. Thanks to Seiichi SATO.
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add more const qualifiers.
	
2004-04-07 Masahito Omote <omote@utyuuzin.net>
	
	debian/*: Uim for Debian is moved to svn.debian.org.
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.4.2
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	symbols should be through when there's no preedit.
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add more const qualifiers.
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	I've forgotten to commit this file...
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.4
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change some key binds.
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	fprintf isn't need obviously here.
	
2004-04-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If there's no preedit strings, * is not need.
	
2004-04-07 YamaKen <yamaken@bp.iij4u.or.jp>
	
	scm/japanese.scm: Add a comment for ja-direct-rule
	
2004-04-05 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark more functions static
	
2004-04-05 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly clear context slot
	
2004-04-05 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add license text
	
2004-04-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If no preedit exists, commit key shoud be through.
	
2004-04-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	More clean up.
	
2004-04-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use cond to clean up.
	
2004-04-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Shift key should be ignored except extend/shrink segment key in compose state.
	Use cond to clean up.
	
2004-04-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to PageUp/PageDown.
	
2004-04-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Disable some key bind when using kana-table.
	
2004-04-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix some bugs related on kana input
	
2004-04-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Commit directly if alt key is pressed
	
2004-04-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add some symbols.
	
2004-04-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use AM_ICONV
	
2004-04-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use AC_PATH_XTRA
	
2004-04-02 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	context.h: also mark some argument of callback functions const
	siod.h: remove declaration of unneeded function
	anthy.scm: kill 'nil
	
2004-04-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	uim-key.c: Make emergency key disabled by default
	KEY: Describe emergency key
	
2004-04-01 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	allocate client array dynamically
	
2004-03-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use stderr instead of stdout to output debug messages.
	
2004-03-31 YamaKen <yamaken@bp.iij4u.or.jp>
	
	uim-key.c: - Make emergency-key be able to be disabled
	           - Change emergency-key sequence as [Anthy-dev 672]
	
2004-03-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add callback functions for testing.
	
2004-03-31 YamaKen <yamaken@bp.iij4u.or.jp>
	
	util.scm: Define control-char? predicate
	anthy.scm: Fix broken anthy-release-key-handler involving control-char?
	canna.scm: Fix broken canna-release-key-handler involving control-char?
	generic.scm: Fix broken generic-key-release-handler around
	             control-char? and generic-commit-raw
	prime.scm: Make prime-release-key-handler reasonably sane on
	           prime-mode-direct
	tutcode.scm: Define tutcode-key-release-handler as reasonably sane on
	             direct-input mode
	
2004-03-31 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	preliminary implementation of m17nlib.
	
2004-03-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add comma and full stop.
	
2004-03-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Works arrow keys, C-h, etc. Thanks to nanashi.
	
2004-03-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	This file is generated automatically by autoheader, so it's not need for svn
	repository.
	
2004-03-30 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	OK. m17nlib's finalization bug was fixed in 1.0.2.
	So enable m17n.scm
	
2004-03-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add more DISTCLEANFILES.
	
2004-03-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	usage of DISTCLEANFILES is wrong...
	
2004-03-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Move some rules for applet in "if APPLET"
	
2004-03-27 Masahito Omote <omote@utyuuzin.net>
	
	util.scm: create new function and constants for multiple input system.
	canna.scm: support hankaku-kana mode and code cleanup.
	anthy.scm: exprerimentaly code cleanup..
	
2004-03-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	more code for m17n lib around key event handling
	
2004-03-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark more functions static
	
2004-03-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add more const qualifiers.
	
2004-03-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add const qualifiers.
	
2004-03-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix order of processing event. Thanks to Etsushi Kato.
	
2004-03-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Full-width space is not need to ja-wide-rule.
	
2004-03-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add full-width space to ja-wide-rule
	
2004-03-22 Masahito Omote <omote@utyuuzin.net>
	
	Update ChangeLog.
	
2004-03-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix focus related problems. Thanks to Etushi Kato.
2004-03-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Disable context when the process recieve the message "focus_in" from other
	process.
	
2004-03-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Some programs such as OpenOffice.org & Tgif don't call unset_focus function, 
	so set_focus function should be processed every time. Thanks to Etsushi Kato.
	
2004-03-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	(reverse longest-head)
	
2004-03-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.3
	
2004-03-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	select_count should be boolean?
	
2004-03-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Don't move segment when candidate selected.
	
2004-03-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	implement more m17nlib code
	
2004-03-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add m17n prefix to the name
	
2004-03-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	avoid multiple initialization of anthy from scheme side
	
2004-03-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	avoid multiple initialization of anthy
	
2004-03-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	use context id to check availability of conversion
	spell and indent fix
	
2004-03-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly handle anthy_create_context() failure
	
2004-03-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add register function, but not working yet.
	
2004-03-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use _exit instead of exit, because exit calls ORBit's exit handler. Thanks to 
	Frederic Crozat and Michael Meeks.
	
2004-03-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Ignore key events with alt or ctrl.
	
2004-03-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to GTK+-2.4
	
2004-03-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	proper handling of buffer full condition
	
2004-03-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	back out delayed initialization of anthy
	
2004-03-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Candidate window should be shown when it's active.
	
2004-03-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add #include <alloca.h> to compiled with Solaris
	
2004-03-19 YamaKen <yamaken@bp.iij4u.or.jp>
	
	configure.ac: Make enviroment dependent features configuragle (not yet done)
	
2004-03-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Don't use gdk_window_get_toplevel in set_client_window,
	because it cause segv.
	
2004-03-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	add filter when candidate window is created
	
2004-03-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Oops, uim-prime doesn't work if prime-wide-latin-key? is't defined.
	
2004-03-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix behavior of skk-prop-handler
	
2004-03-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	close file descriptor in case of EOF
	
2004-03-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	increase read buffer size.
	do not call read(2) if there is no buffer.
	correct check of too long message.
	
2004-03-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	close file descriptor in case of EOF
	
2004-03-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change URL of uim
	
2004-03-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	quit function is called whether init function is called or not.
	
2004-03-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	implement alloc and release context
	
2004-03-16 YamaKen <yamaken@bp.iij4u.or.jp>
	
	prime.scm: Fix prime-prev-candidate-key? definition as follow
	redefinition of generic-prev-candidate-key?. Quote is required
	to follow redefinition of predefined predicates.
	
2004-03-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	more implementation of m17nlib module
	
2004-03-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	move inclusion of iconv.h to uim-func.c
	
2004-03-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	implement input method list
	
2004-03-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Though I'm not understanding yet, this change makes screen-uim working.
	
2004-03-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove skk-like key binding
2004-03-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove skk-like key binding
2004-03-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Free contexts when quit
2004-03-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	do not use stdio in uim_helper_send_message
	
2004-03-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly link m17nlib
	
2004-03-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	call uim_helper_label_update() with focus in
	
2004-03-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add initial scm side code for m17nlib
	
2004-03-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add m17nlib configuration
	
2004-03-13 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add m17nlib detection
	
2004-03-13 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Delay anthy's initialization
	
2004-03-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove out of date description.
	
2004-03-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	prime.scm: - Fix broken mode-list handling
	           - Make mode-value symbolic
	
2004-03-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	prime.scm: Make candidate selection untouched on cursor moving
	
2004-03-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	prime.scm: Select last candidate as properly on begin-verversion
	starting with prime-prev-candidate-key?
	
2004-03-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fix uim_iconv_code_conv's prototype
	
2004-03-09 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark 2nd argument of uim_prop_activate as const
	
2004-03-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Don't ignore insert key.
	
2004-03-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add emergency key
	
2004-03-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	change lreadparen() to iterative version
	
2004-03-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark const to uim_helper_send_message()'s 2nd argument
	
2004-03-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add pyload.scm
	
2004-03-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.2
	
2004-03-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Delay loading pinyins
	
2004-03-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Delay loading romaja.scm.
	
2004-03-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove unused functions
	
2004-03-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Rename member of UPreeditAttr to be having 'UPreeditAttr_'
	prefix rather than strange 'UPeAttr_' prefix. Backward
	compatible definition is also kept for now. ABI is not changed.
	
2004-03-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix compile error, Add NULL check. Thanks to Etsushi Kato.
	
2004-03-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add null check
	
2004-03-05 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark more functions static. change declaration order.
	
2004-03-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add description of uim_get_nr_im()
	
2004-03-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove unused prototypes. mark some functions static.
	
2004-03-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove sliba.c
	
2004-03-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	move all of functions in sliba.c to slib.c
	
2004-03-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	GTK_IMMODULES = $(DESTDIR)$(sysconfdir)/gtk-2.0/gtk.immodules
	
2004-03-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	skk.scm: Fix quitting from learning as commit okuri-gana properly
	
2004-03-02 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Apply correct patch to implement getpeerid for NetBSD. Thanks to KIHARA Hideto-san.
	
2004-03-01 YamaKen <yamaken@bp.iij4u.or.jp>
	
	skk-editor.scm: Fix learning broken by tri-mode kana
	handling. Your .skk-uim-jisyo may contains broken entry which
	index-word is written as katakana. Remove such entries.
	
2004-02-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.1
	
2004-02-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change mode from input to conversion when up/down key pressed.
	
2004-02-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Do not call vload directly.
	
2004-02-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Oops, I forgot some close parens...
	
2004-02-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Don't flush rk-pending when arrow key pressed. Kana-input mode needs them.
	Though it's not good from the point of view of consistency...
	
2004-02-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to NetBSD (Thanks to KIHARA Hideto)
	
2004-02-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	temporary fix for storage shortage. I have to enable gc in loading scm files.
	
2004-02-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Support Super and Hyper modifier keys
	
2004-02-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* anthy.scm: Mofify preedit handling appropriately
	  - Flush rk-context on cursor move
	  - Enable beginning-of-preedit and end-of-preedit operations on
	    composing
	
2004-02-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	skk.scm: trivial cleanup
	
2004-02-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	zaurus.scm: Add SL-6000 specific keys
	
2004-02-29 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Replace key binding definitions with define-key in generic-key.scm
	* Make key-predicates that defined in generic-key.scm be having
	  '?' suffix
	
2004-02-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly calculate right limit of preedit region.
	
2004-02-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	rename uim_helper_check_connection -> uim_helper_check_connection_fd
	
2004-02-28 Masahito Omote <omote@utyuuzin.net>
	
	Use mkstemp instead of tmpnam.
	
2004-02-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	I have forgot this at last commit.
	
2004-02-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Use getpeerid or SO_PEERCRED to check connection.
	Thanks Etsushi Kato-san.
	
2004-02-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* Replace key binding definitions with define-key in *.scm
	  except generic-key.scm
	* Make key-predicates be having '?' suffix (except generic-key.scm)
	* doc/KEY: Newfile
	
2004-02-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Also call uim_prop_label_update when focus in.
	
2004-02-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	cosmetic changes. add type casting.
	
2004-02-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill compilation warnings. Thanks to Fabian-san.
	
2004-02-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Properly find 64bit libs. Thanks to Fabian-san.
	
2004-02-26 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Replace UKeyModifier names with new one (succeeds change in -r528:529)
	
2004-02-26 Masahito Omote <omote@utyuuzin.net>
	
	I forgot to add BSD license to COPYING and xim/*.
	
2004-02-26 YamaKen <yamaken@bp.iij4u.or.jp>
	
	API renaming involving IM bridges. See [Anthy-dev 573]. ABI is
	keeped. Source level compatibility is keeped for now, but old
	UKeyModifier names will be deprecated in the future. Please
	replace the names by new one.
	
2004-02-26 Masahito Omote <omote@utyuuzin.net>
	
	I broke pyunihan's table. If this change still breaks it, please revert.
	
2004-02-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill warning of type mismatch
	
2004-02-26 Masahito Omote <omote@utyuuzin.net>
	
	Add BSD license.
	
2004-02-26 Masahito Omote <omote@utyuuzin.net>
	
	Add BSD license(based on canna.scm) and remove GPL license.
	
	
2004-02-26 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix symbol conflict of uim-screen on *BSD and MacOSX
	platform. Thanks to Kato-san
	
2004-02-26 Masahito Omote <omote@utyuuzin.net>
	
	PY.scm: Add GPL COPYING.
	the others: Add BSD license(based on canna.scm) and remove GPL license.
	
2004-02-25 Masahito Omote <omote@utyuuzin.net>
	
	* Create ChangeLog from commit logs.
	
2004-02-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Decline C99 style declaration in uim.h. Thanks to ashie-san
	
2004-02-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Fix anthy-commit-as-opposite-kana involving tri-mode kana handling
	- Replace key binding definitions with define-key in anthy.scm
	- Rename key-predicates as foo-key? in anthy.scm
	
2004-02-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Add <IgnoreRegularShift> key-str prefix for shift-sensitive
	  control keys (e.g. "<Shift>home")
	- Completes shift-key handling of define-key. define-key now
	  accepts any of "<Shift>home", "<Control>A" and "<Control>a"
	- Deprecate global-case-insensitive-control-key?
	- define-key has been usable. Now is the time to transit to new
	  key-binding method
	
2004-02-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix enbuged <IgnoreShift> handling in parse-key-str
	
2004-02-25 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Cleanup around parse-key-str
	
2004-02-24 Masahito Omote <omote@utyuuzin.net>
	
	Revert the change of revision 515. This is my misunderstanding.
	
2004-02-24 Masahito Omote <omote@utyuuzin.net>
	
	canna.c,canna.scm: Change copyright.
	 - Remove BSD License section 3(advertising clause).
	
2004-02-24 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Fix zenkaku-space handling in wide-latin mode (anthy, skk,
	  canna, prime)
	- Fix skk-on-key handling as always transit to skk-type-hiragana
	  (rather than restoring previously used kana-mode)
	- Fix skk-hankaku-kana-key handling as ddskk's
	
2004-02-24 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	pass other keys in 10key pad. Thanks Etsushi Kato-san.
	
2004-02-24 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	stop exporting non-uim API symbols
	
2004-02-23 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	sane support of 10keys. Thanks Etsushi Kato-san.
	
2004-02-23 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add support of uim-helper to uim-xim. thanks Kato-san
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot use return, up, down keys when there's no preedit.
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.3.0
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Expand heap size.
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fixed memory leaking
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Merge romaja.scm, pyunihan.scm
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Ignore inappropriate key event.
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Ignore inadequate key event.
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Ignore inadequate key event.
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Send "close" when exit.
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to new candidate spec.
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to propery
	
2004-02-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix small bug related on property.
	
2004-02-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fix again endian.
	
2004-02-22 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Treat first arg to define-key (variable name) as quoted
	
2004-02-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add some description
	
2004-02-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fix some warnings
	
2004-02-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add proper includes
	
2004-02-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill a warning
	
2004-02-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Make implicit key-modifiers work correctly on define-key
	- Accept preexisting predicate symbol on make-single-key-predicate
	
2004-02-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Require gtk+ >= 2.2.0
	
2004-02-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add define-key for easy key-binding. Implicit <IgnoreShift> is
	still not working.
	
2004-02-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Works with konqueror, kpresenter, etc.(by yusuke)
	
2004-02-21 YamaKen <yamaken@bp.iij4u.or.jp>
	
	* API change *
	- Introduce 'struct uim_code_converter' to abstract platform-dependent
	  character code conversion method
	- Modify uim_create_context() as requires an uim_code_converter
	- Export default uim_code_converter implementation using iconv
	
2004-02-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to ten-key
	
2004-02-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill sym_t exporting
	
2004-02-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	do not use exported sym_t value. use siod_true_value() instead
	
2004-02-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	going to eliminate exporting sym_t
	
2004-02-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to Mac OS X
	
2004-02-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	using libtool object
	
2004-02-18 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Add segment-separator drawing support to gtk-im-uim
	- Add segment-separator drawing support to uim-canna
	- Enable 'uim-color' style switching
	- Generalize skk-setup-style and uim-setup-color to update-style
	- Fix a memory leak in gtk-im-uim init_candidate_win()
	
2004-02-18 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Add skk-opposite-kana procedure for tri-state kana mode handling
	- Fix committing opposite kana in skk-proc-state-kanji
	
2004-02-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Update property related codes.
	
2004-02-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix arguments of skk-update-prop-label.
	Remove annotation in word-learning mode.
	
2004-02-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Qt send ClientWindow instead of FocusWindow. This change will make us
	happy when using uim-xim with Qt. I think the number of rest bugs to 
	show preedit with Qt is only one and I hope yusuke will resolve that!
	
2004-02-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fix endian, add new attribute
	
2004-02-16 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix corrupted Japanese romaji table
	
2004-02-15 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Make util.scm is loaded prior to im.scm definitions
	
2004-02-15 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Fix broken parse-key-str
	- Lift 'else' definition up as a global effect
	
2004-02-12 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Accept both gtk-style and emacs-like key bindings on make-key-predicate
	- Accept preexisting predicate rather than key-str on make-key-predicate
	- Accept new 'ignore-shift' key prefix on make-key-predicate
	
2004-02-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Execlp's fisrt argument is pointer of file which want to exec
	
2004-02-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add flag using-kana-table?
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix small bug.
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to kana-rule
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add kana-rule
	
2004-02-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Perform appropriate actions on set-candidate-index-handlers
	  - deactivate candidate selector and move to next segment on
	    anthy-set-candidate-index-handler
	  - commit current candidate on skk-set-candidate-index-handler
	
2004-02-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix corrupted ja-rk-rule and ja-wide-rule in japanese.scm
	
2004-02-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Fix incorrect local variable name in skk-make-string
	- Fix new tri-mode kana handling involving skk-make-string
	- Fix new tri-mode kana handling on skk-update-mode
	- Enable hankana-mode in mode-list on skk.scm
	- Make mode-value symbolic on skk.scm
	
2004-02-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Fix new tri-mode kana handling on anthy-update-mode
	- Make mode-value symbolic on anthy.scm
	
2004-02-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Decline C99 style variable declaration.
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to hankaku-kana
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to hankaku-kana
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add hankaku-kana
	
2004-02-11 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Trivial cleanup. NULL pointer checking is not required for free(3).
	
2004-02-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	temporary fix
	
2004-02-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	update
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Merge color.scm to util.scm
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	I've forgotten to commit this file.
	
2004-02-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	PageUp, PageDown enabled
	
2004-02-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add shift_page_cb
	
2004-02-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	update a little
	
2004-02-10 Masahito Omote <omote@utyuuzin.net>
	
	Add support for changing preedit's foreground and background color in
	conversion mode.
	
2004-02-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Because some window manager like xfwm4 has a bug related to focus in/out
	
2004-02-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Ignore SIGPIPE
	
2004-02-10 YamaKen <yamaken@bp.iij4u.or.jp>
	
	- Add a new preedit attribute 'segment separator'
	- Add segment separator insertion feature to anthy.scm. A new
	  config variable 'anthy-show-segment-separator?' is available.
	- Segment separator is working good with IMKit-uim HEAD on
	  Qtopia. Gtk-immodule and uim-xim follows later.
	
2004-02-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Using display_limit instead of NR_CANDIDATE
	
2004-02-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	NULL checking is not good way, because uim_get_candidate must allocate memory
	
2004-02-09 Masahito Omote <omote@utyuuzin.net>
	
	uim-canna:
	 - Sync with the change of get-candidate-handler but uim-canna does not work.
	 - canna-release-key-handler: implemented.
	
2004-02-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink siod more
	
2004-02-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	reorder function declaration to avoid warning
	
2004-02-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix a typo.
	
2004-02-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill floating points more
	
2004-02-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	switch to intcons from flocons
	
2004-02-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Cleanup around API spec change
	  - implement uim_candidate_free()
	  - constize uim_candidate_get_{cand_str,heading_label}()
	  - eliminate a magic number (temporalily)
	
2004-02-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix excessive key release event discard on generic-im.
	Some other IMs are still having this problem.
	
2004-02-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix key-press-handler and key-release-handler to pass modifier
	key press/release edge to apps.  Don't discard unnecessary key
	events. They are necessary for proper GUI widget handling. More
	correction over entire uim codes is needed.
	
2004-02-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Update library version
	
2004-02-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	API/ABI was breaked, so version up to 0.0.1
	
2004-02-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix key-press-handler as presumably intended.
	The code has been modified was introduced between uim-0.0.9 and uim-0.1.0.
	
2004-02-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Update authors
	
2004-02-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	disable differed interrupt processing
	
2004-02-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	prepare to remove double/float type from siod
	
2004-02-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Merge screen-uim.
	
2004-02-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change spec of get-candidate-handler
	
2004-02-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Comment out worthless debug message.
	
2004-02-08 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Fix excessive key release event discard on Anthy and SKK.
	Any other IMs are still having this problem.
	
2004-02-07 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add some explanation
	Substitute 'call back' by 'callback'
	
2004-02-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add some documents
	
2004-02-07 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add zaurus.scm
	
2004-02-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add zaurus.scm: platform-specific support for Sharp Zaurus PDA
	
2004-02-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add F13 - F35 and non-standard platform specific keysym definitions
	
2004-02-06 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add uim_get_im_encoding() API to allow using platform dependent
	encoding converter
	
2004-02-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change semantic of third argument of begin_cb.
	
2004-02-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly draw preedit string for over-the-spot.
	Dirty hack, XIM is the dirt.
	
2004-02-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot input ordinary roma-ji when using AZIK rule.
	
2004-02-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add table for AZIK.
	
2004-02-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Extend heap size
	
2004-02-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Do not read files in current directory.
	
2004-02-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.2.8
	
2004-02-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Clean up.
	
2004-02-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Make candidate window invisible when backspace key pressed
	
2004-02-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot commit by return key in hangul2
	
2004-02-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Reverted back to revision 394. Lightblue isn't good for 
	people who have abnormal color sensation.
	Wait color customization feature, or implement color 
	customization feature ;-)
	
2004-02-02 Masahito Omote <omote@utyuuzin.net>
	
	Oops, r402 makes canna disabled.
	
2004-02-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Rename skk-commit-newline-explicitly to skk-commit-newline-explicitly?
	
2004-02-02 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add skk-commit-newline-explicitly. Turn it into #t provided safe behavior.
	
2004-02-02 Masahito Omote <omote@utyuuzin.net>
	
	- canna.c: I forgot to return NIL and delete unused functions.
	- skk-dic.c: use fstat instead of stat.
	- configufe.ac: Add #undef _WCHAR_H_ when AC_CHECK_HEADER(RK.h).
	
2004-02-02 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	function name to contain its restriction
	
2004-02-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Commit "\n" instead of raw key event handling
	
2004-02-01 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	update
	
2004-01-31 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Accept multiple key-string on make-key-predicate. Thanks for
	Kouhei Sutou <kou at cozmixng.org> for some advices and
	providing 'list?' procedure.
	
2004-01-31 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	document update
	
2004-01-31 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill unused function poparg
	
2004-01-31 Masahito Omote <omote@utyuuzin.net>
	
	Change a preedit's foreground color and background color from white/black to black/lightblue.
	
2004-01-28 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Add make-key-predicate for easy key-binding definition
	
2004-01-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to prev key, next key, in state-preedit. Clear preedit when converting end.
	
2004-01-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	revert static 'last
	
2004-01-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove make-list function from siod
	
2004-01-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add few document
	
2004-01-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot move by cursor key when there's no preedit
	
2004-01-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Modify the mode-list label "RAW" to "chokusetsu-nyuuryoku"("RAW" in Japanese) on skk and tutcode
	
2004-01-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Modify the mode-list label "RAW" to "chokusetsu-nyuuryoku"("RAW" in Japanese) on skk and tutcode
	
2004-01-27 YamaKen <yamaken@bp.iij4u.or.jp>
	
	Correct number of elements in skk-context at skk-context-new
	
2004-01-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	a little refactoring
	
2004-01-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	reset op-count when conversion end. and some clean up, small bug fix.
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Clean up
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Reduce calling of im-update-preedit
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	lstat -> stat
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Reduce unnecessary calling of im-update-preedit.
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Reduce unnecessary calling of im-update-preedit.
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add prototype and fix wrong comment
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add `ICONV_LIBS` to ldadd
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add checking whether file descriptor is writable or not. 
	I have no confidence that this change make uim more stable.
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If cannot use gtk+2, candidate window will be disable.
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Clean up
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	add tcode correspondings
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add new scheme function string->charcode
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	many many updated.
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	fix timing of updating candidate window coordinate
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change some key bind
	
2004-01-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If wrong number key is pressed, simply ignore it.
	
2004-01-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	translate some Japanese comments
	
2004-01-25 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink siod more
	
2004-01-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.2.5.2
	
2004-01-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change coordinates of popup menu a little.
	
2004-01-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add canna corresponding functions
	
2004-01-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add candidate functions
	
2004-01-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Update requirement
	
2004-01-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	correct position of cursor
	
2004-01-16 Masahito Omote <omote@utyuuzin.net>
	
	Supports for inputing hiragana, katakana and wide-latin on uim-canna.
	But Kana-Kanji conversion is not still implemented.
	
2004-01-16 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add word regster functions
	
2004-01-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add some preedit editing functions.
	
2004-01-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	check length of newly learned word by C side
	
2004-01-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Thanks to anthy-dev 416. do not allow empty string to be learned
	
2004-01-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Thanks to anthy-dev 415 enable skk's preedit style
	
2004-01-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	Thanks to anthy-dev 414. change behavior of return key to match ddskk
	
2004-01-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	change to proper conversion mark in recursive word register mode
	
2004-01-13 Masahito Omote <omote@utyuuzin.net>
	
	Commit my hack. But not completed.
	
2004-01-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Clean up
	
2004-01-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If prime is enabled, candidate window position is set to left end of preedit
	
2004-01-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add some documents
	
2004-01-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark more functions static
	
2004-01-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	turn recursive learning on as default
	
2004-01-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use prime's get_label instead of rk.scm
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Cursor is special.
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Shrink candidate window size to clist + num label
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix some candidate position bug
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Underline -> reverse
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to helper
	Thanks to KATO Kazuyoshi
	
2004-01-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	change to proper conversion mark
	
2004-01-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	one more notice
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot change input-mode by set_mode
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Process charset correctly.
	
2004-01-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Init uim_fd
	
2004-01-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark more functions static
	
2004-01-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	unmark uim_initialized flag at uim_quit
	
2004-01-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	move some initialization into siod lib
	
2004-01-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	explicit initialize of global variables
	
2004-01-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	add functions to show candidate window at preedit left end. (It will used in uim-prime)
	
2004-01-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add some functions to refer scheme symbol value from C
	
2004-01-06 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly remove window watch
	
2004-01-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Refactoring a little
2004-01-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.2.3.1
	
2004-01-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix compile error.
	
2004-01-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.2.3
	
2004-01-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Some refactoring
	
2004-01-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add zenkaku/hankaku to generic-off-key
	
2004-01-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix documantation bugs
	
2004-01-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot move kana-mode from helper
	
2004-01-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Some refactoring
	
2004-01-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Input newline if there is no preedit
	
2004-01-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If menu overflows from screen, change menu display coordinate
	
2004-01-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix freed twice.
2004-01-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correspond to property.
	Thanks to KIHARA, Hideto
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.2.2
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add hk.scm
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	XFCE4_PANEL is no longer need
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add some infomation
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	cddar -> cdr cdar
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If ctrl pressed with "Q", it's not kana-toggle key
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	call uim_prime_quit when quiting
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	close pipe when quit
	
2003-12-31 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Rest to zombies
	
2003-12-30 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink more functions from siod
	
2003-12-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	do not touch signals in siod
	
2003-12-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	dd infomation about mailing list
	
2003-12-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Commit pending preedit when commit-key pressed. I'm not confident,so revert if there is a problem.
	
2003-12-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	make more functions static
	
2003-12-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink more
	
2003-12-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove substring-equal?
	
2003-12-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Expand max context array size
	
2003-12-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Expand context array size
	
2003-12-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	() -> <>
2003-12-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add key_snooper_remove
	
2003-12-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove more file IO
	
2003-12-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill file IO functions
	
2003-12-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink scheme
	
2003-12-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink scheme
	
2003-12-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	kill leaks
	
2003-12-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	I've forgotten commit this file... True uim-0.2.1 is revision 279.
	
2003-12-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	usual-key?'s checking range is wrong.
	
2003-12-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix the bug cannot input some sign characters when latin-conv mode
	
2003-12-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot input numbers and signs skk-context-latin-conv state
	
2003-12-22 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add systray toolbar
	Thanks to KATO Kazuyoshi
	
2003-12-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Using AM_CPPFLAGS instead of CPPFLAGS
	
2003-12-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	make support of over-the-spot style as a parameter
	
2003-12-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add new table library code
	
2003-12-20 Masahito Omote <omote@utyuuzin.net>
	
	Add tables/Makefile in AC_CONFIG_FILES.
2003-12-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	add init function of uim-table.c
	
2003-12-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add new table library codes
	
2003-12-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	sizeof(char *) is bigger than sizeof(char)
	
2003-12-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add tabledir
	
2003-12-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Snoop key events before gtk+'s key accelerator. It's not good way and we must improve gtk+ itself.
	
	
2003-12-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add shifting tables for CJK languages.
	
2003-12-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add NULL pointer checking
	
2003-12-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	pended alphabet will be shown with underline
	
2003-12-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Need strdup
	
2003-12-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Indicate module's language for popup menu
	
2003-12-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Using automake 1.7
	
2003-12-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix there is no preedit, numeral key is used for input, not candidate select.
	
2003-12-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	commit raw unknown key event.
	
2003-12-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix some memory leaking.
	
2003-12-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add @ICONVE_LIBS@
	
2003-12-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add xfce4 applet.
	
2003-12-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Reverge to rev 255, since rev 256 is broken. Sorry.
	
2003-12-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add henkan, muhenkan key
	
2003-12-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Clean up.
	
2003-12-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.2.0
	
2003-12-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Removed inappropriate window move
	
2003-12-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	toolbar will move by middle or right mouse draging.
	
2003-12-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If there is no iconv, should be error.
	
2003-12-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Removed implementation to indicate current mode.
	To show current mode and other infomation, you should
	use property instead.
	
2003-12-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use property to indicate input state
	
2003-12-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Enable symbol keys at on-mode
	
2003-12-07 Masahito Omote <omote@utyuuzin.net>
	
	Use macro for library's finename. If not needed, please backout.
	
2003-12-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Return key enabled at on-mode.
	
2003-12-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	generate uim.pc from uim.pc.in
	
2003-12-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	add DISTCLEANFILES
	
2003-12-03 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	using pkg-config
	
2003-12-02 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	split locale, do EUC-JP-ctext conversion manually
	
2003-12-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.7
	
2003-12-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	set_decarated FALSE
	
2003-11-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	I'm forgotten to add helper/helper-toolbar-gtk.c ...
	
2003-11-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add uim-helper-toolbar-gtk
	
2003-11-30 Masahito Omote <omote@utyuuzin.net>
	
	tagging 1:0.1.7-1, 0.1.7 will be soon.
2003-11-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fixed some leaks at exit
	
2003-11-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add uim_helper_close_client_fd()
	
2003-11-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	do dlclose for anthy
	
2003-11-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fixed double free
	
2003-11-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fix some leaks at finalization
	
2003-11-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	save dictionary after recursive learning
	
2003-11-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	quit methods added
	
2003-11-28 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add uim_quit()
	
2003-11-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	sanitize siod functions's names
	
2003-11-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark some functions static
	
2003-11-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	reverse -> underline
	
2003-11-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove annotation
	
2003-11-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink a little
	
2003-11-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink a little
	
2003-11-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	correctly save ~/.skk-uim-jisyo
	
2003-11-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix C99 dependency
	
2003-11-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.6.
	
2003-11-23 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Refresh candidates when backspace key pressed.
	
2003-11-23 Masahito Omote <omote@utyuuzin.net>
	
	
2003-11-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	cache fontset
	
2003-11-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If shift key pressed with alphabet key, start prediction
	
2003-11-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	void argument as (void)
	
2003-11-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Display right candidates when recursive learning
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	sanitize newly learned string
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	use recursive learning for unknown word
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	simplify message parsing
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	move uim_helper_str_terminated() to last of file
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	simplify message parsing
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	simplify message parsing #1
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	simplify message parsing
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	uim_helper_get_message returns only one message in a call
	
2003-11-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	one step toward simpler message handling
	
2003-11-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	first step to split uim_hepler_read_proc() into
	uim_helper_read_proc() and uim_helper_get_message()
	
2003-11-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink a little
	
2003-11-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Ignore shift mask.
	
2003-11-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix some rules.
	
2003-11-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix memory leaking.
	
2003-11-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	*change lisp num to integer
	*remove some string functions
	
2003-11-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add declaration of uim_helper_send_message()
	
2003-11-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	merge some duplicated code and kill some warnings
	
2003-11-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	a little clean up
	
2003-11-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	renamed. skk-lib-split-string -> string-to-list
	
2003-11-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	More clean up
	
2003-11-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	More cleanup
	
2003-11-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	helper will return NULL due to partial read in near future
	
2003-11-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	cancel in recursive learning somehow woks
	
2003-11-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	more static functions
	
2003-11-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Clean up
	
2003-11-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	If candidate strings not changed, do not communicate with PRIME
	
2003-11-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	make more functions static
	
2003-11-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove siodp.h
	
2003-11-10 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	merge siodp.h into siod.h
	
2003-11-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.5
	
2003-11-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	add checking, candidates are updated?
	
2003-11-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	don't show candidate window if not need
	
2003-11-09 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Exit when XIM server die
	
2003-11-09 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink more
	
2003-11-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	more shrink
	
2003-11-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove copy gc related functions
	
2003-11-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	cancel key must be commited as raw key, if there is no preedit.
	
2003-11-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix behavior when (define prime-preedit-immididate-commit? #t)
	
2003-11-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Correct range
	
2003-11-06 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add mode_switch key
	
2003-11-06 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mode_switch key added
	
2003-11-06 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fix some warnings
	
2003-11-06 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	sanitize indent
	
2003-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	if anthy-toggle-key pressed in input-state, commit turned preedit strings.
	
2003-11-04 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add wide-latin mode and katakana-mode.
	
2003-11-02 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.4.1
	
2003-11-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.4
	
2003-11-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change behabior when "q" is clicked in kanji mode.
	
2003-11-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add new file
	
2003-11-01 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add new file
	
2003-10-30 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove sxhash
	
2003-10-30 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	a little clean up
	
2003-10-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Do not connect if other user own socket.
	
2003-10-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix make install error when gtk is not found
	
2003-10-29 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fixed type mismatch of prop_*_cb
	
2003-10-29 Masahito Omote <omote@utyuuzin.net>
	
	Build-Depends: remove liblinc-dev.
	
2003-10-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove tc_lisp_array, some functions
	
2003-10-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use rk-pending to get candidates.
	
2003-10-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change path of program.
	
2003-10-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug messages.
	
2003-10-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove unused argument from set_gc_hooks
	
2003-10-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	trim siod argument
	
2003-10-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove copying gc
	
2003-10-26 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	initial. there maybe some mistakes, but ...
	
2003-10-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug messages.
	
2003-10-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add candidate window.
	
2003-10-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add candidate window.
	
2003-10-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.3
	
2003-10-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fixed bind error at NetBSD, FreeBSD.
	Thanks to KIHARA Hideto.
	
2003-10-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add a declaration of proto type
	
2003-10-25 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	anthy context id is not im context id
	
2003-10-25 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add default LD_LIBRARY_PATH
	
2003-10-24 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	#f
	
2003-10-24 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fixed typo again
	
2003-10-24 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	fixed typo
	
2003-10-24 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	prepare for more flexible rk table
	
2003-10-23 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	draft
	
2003-10-23 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	some updates
	
2003-10-23 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	preparation for more flexible rk table
	
2003-10-22 Masahito Omote <omote@utyuuzin.net>
	
	Sync with 0.1.2-2.
	
2003-10-22 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	shrink
	
2003-10-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove prop related functions
	
2003-10-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove byte_array
	
2003-10-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove vms, osf, think_c
	
2003-10-21 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove lisp array reader
	
2003-10-20 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	just 1 step
	
2003-10-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add new function to sanitize learned word. not yet implemented.
	
2003-10-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	start compose mode with 'Q'
	
2003-10-18 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add /alphabet input
	
2003-10-17 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	reorder ;D
	
2003-10-17 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove long_array.
	
2003-10-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly add word
	
2003-10-16 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	one step toward recursive learning
	
2003-10-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark global variables static
	
2003-10-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	mark static
	
2003-10-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove fast save/load functionality
	
2003-10-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove long and double array
	
2003-10-15 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	remove base64 related functions
	
2003-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.2
	
2003-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	I've forgotten commit spellcheck.scm...
	
2003-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add spellchecker (it doesn't work yet)
	
2003-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Move some function to uim-util.c
	
	
2003-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug message.
	
2003-10-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	pushback preedit string at cursor.
	
2003-10-14 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	properly init caret position
	
2003-10-13 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	do not make 0 length preedit segment
	
2003-10-12 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix always executing child process
	
2003-10-12 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	correct saving of dictionary
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot input capital letters in wide-latin mode.
	
2003-10-11 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	correct handling of '/'
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.1.
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* ignore error while loading .uim
	  Thanks to KIHARA, Hideto.
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Remove bashism
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change maintainer
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	uim_init should be proccessed before uim_helper_client_fd
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	m_kkContext->clear() is not implement yet, so we shouldn't use it.
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	clear preedit before commit.
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add NULL pointer checking.
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	preedit clear before commiting.
	
2003-10-11 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	close stdin, stdout
	
2003-10-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change output to stderr.
	
2003-10-10 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove comments.
	
2003-10-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.1.0
	
2003-10-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add auto server booting.
	
2003-10-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Move ipc code to uim-ipc.c from prime.c. 
	
2003-10-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add procedure "numeral?".
	
2003-10-08 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Always show candidate window.
	* Commit candidate by numeral.
	
2003-10-08 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add input method switching you may (define enable-im-switch #t) to your ~/.uim
	
2003-10-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix memory leaking.
	
2003-10-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	also add modifier check for key release
	
2003-10-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add modifier keys as normal keys
	
2003-10-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Always show candidate window.
	
2003-10-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Reconnect when focus_in (if disconnected.)
	
2003-10-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add NULL pointer checking.
	
2003-10-07 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Reconnect to helper-server when clicked (if disconnected).
	
2003-10-07 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	partially implement '/' conversion
	
2003-10-06 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Clean up.
	
2003-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Set libuim_fd -1 when disconnected.
	
2003-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Use uim_helper_read_proc.
	
2003-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Using disconnect_cb.
	
2003-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	* Rename function.(helper_read_cb => im_uim_helper_read_cb)
	* set im_uim_fd -1 when disconnect.
	
	
2003-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Release 0.0.9
	
2003-10-05 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	make rk code a little sane
	
2003-10-05 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix wasting of CPU power when helper-server segfault.
	
2003-10-05 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	one step toward correct learning
	
2003-10-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	add siod error hook
	
2003-10-04 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	removed math functions from siod
	
2003-09-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Cleanup.
	
2003-09-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	include uim.h
	
2003-09-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add prototypes.
	
2003-09-30 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add prototypes
	
2003-09-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove filter when it's not need.
	
2003-09-29 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Implement properties.
	
2003-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Do not call layout_candidate if candidate window isn't active
	
2003-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Improve applet behavior.
	
2003-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug messages.
	
2003-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix location.
	
2003-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug messages.
	
2003-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove conflict marker.
	
2003-09-28 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Improve applet behavior.
	
2003-09-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	delete reference to uim_helper_manage_context()
	
2003-09-27 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	delete remaining uim_helper_manage_context()
	
2003-09-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Improve behavior.
	
2003-09-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add prop_label_update.
	
2003-09-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix design of candidate window.
	
2003-09-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix behavior when (define skk-use-recursive-learning? #f)
	
2003-09-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Each client has their own buffer
	
2003-09-27 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add some NULL Pointer check.
	
2003-09-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	struct client.
	
2003-09-26 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Change macro name.
	
2003-09-25 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix crashing with galeon, abiword.
	
2003-09-24 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Improve reordering of candidates.
	
2003-09-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix silly bug. (This would cause crash when change immodule dynamically.)
	
2003-09-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Candidate window should be synchronized with toplevel window
	
2003-09-21 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add filter to toplevel to catch window move event.
	
2003-09-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug messages.
	
2003-09-20 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug messages.
	
2003-09-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	 Fix ignoring modifier key mask in wide-latin mode.
	
2003-09-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Update ChangeLog.
	
2003-09-19 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Ignore comment line.
	
2003-09-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	another null check added
	
2003-09-19 Yusuke Tabata <yusuke@cherubim.icw.co.jp>
	
	check NULL line to avoid SEGV in case of private dictionary only entry
	
2003-09-18 Masahito Omote <omote@utyuuzin.net>
	
	Add debian/*.
2003-09-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add find_first for find offset to first word entry
	
2003-09-18 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	uim-skk:
	 add recursive learning.
	 define skk-use-recursive-learning? #t for testing.
	
2003-09-16 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix cannot process kan*ji (only kann*ji could be processed before)
	
2003-09-16 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Togglable hiragana/katakana in kanji-mode
	
2003-09-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix uim-skk:cannot shift to Wide-Latin mode from direct mode.
	
2003-09-15 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Fix typo.
	
2003-09-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add multi key
	
2003-09-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add function im-get-raw-key-str
	
2003-09-14 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add function to save personal dic.
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove debug messages.
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add props svn:ignore
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Add props svn:ignore
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Remove glib dependency from libuim
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Delete unnecessary file from repository.
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Delete unnecessary file from repository.
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Delete unnecessary files from repository.
	
2003-09-13 TOKUNAGA Hiroyuki <tkng@xem.jp>
	
	Initial import
	
