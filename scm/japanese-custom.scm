;;;
;;; Copyright (c) 2010-2013 uim Project https://github.com/uim/uim
;;;
;;; All rights reserved.
;;;
;;; Redistribution and use in source and binary forms, with or without
;;; modification, are permitted provided that the following conditions
;;; are met:
;;; 1. Redistributions of source code must retain the above copyright
;;;    notice, this list of conditions and the following disclaimer.
;;; 2. Redistributions in binary form must reproduce the above copyright
;;;    notice, this list of conditions and the following disclaimer in the
;;;    documentation and/or other materials provided with the distribution.
;;; 3. Neither the name of authors nor the names of its contributors
;;;    may be used to endorse or promote products derived from this software
;;;    without specific prior written permission.
;;;
;;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND
;;; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;;; ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE
;;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
;;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
;;; OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
;;; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
;;; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
;;; OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
;;; SUCH DAMAGE.
;;;;

(require "util.scm")

(define ja-rk-rule-basic
  '(
    ((("-"). ())("ー" "ー" "ｰ"))
    (((","). ())("、" "、" "､"))
    ((("."). ())("。" "。" "｡"))
    ((("!"). ())("！" "！" "!"))
    ((("\""). ())("”" "”" "\""))
    ((("#"). ())("＃" "＃" "#"))
    ((("$"). ())("＄" "＄" "$"))
    ((("%"). ())("％" "％" "%"))
    ((("&"). ())("＆" "＆" "&"))
    ((("'"). ())("’" "’" "'"))
    ((("("). ())("（" "（" "("))
    (((")"). ())("）" "）" ")"))
    ((("~"). ())("〜" "〜" "~"))
    ((("="). ())("＝" "＝" "="))
    ((("^"). ())("＾" "＾" "^"))
    ((("\\"). ())("＼" "＼" "\\"))
    ((("|"). ())("｜" "｜" "|"))
    ((("`"). ())("‘" "‘" "`"))
    ((("@"). ())("＠" "＠" "@"))
    ((("{"). ())("｛" "｛" "{"))
    ((("["). ())("「" "「" "｢"))
    ((("+"). ())("＋" "＋" "+"))
    (((";"). ())("；" "；" ";"))
    ((("*"). ())("＊" "＊" "*"))
    (((":"). ())("：" "：" ":"))
    ((("}"). ())("｝" "｝" "}"))
    ((("]"). ())("」" "」" "｣"))
    ((("<"). ())("＜" "＜" "<"))
    (((">"). ())("＞" "＞" ">"))
    ((("?"). ())("？" "？" "?"))
    ((("/"). ())("／" "／" "/"))
    ((("_"). ())("＿" "＿" "_"))
    ;; Since ordinary Japanese users press the "yen sign" key on
    ;; Japanese keyboard in romaji-halfwidth-kana-mode "to input
    ;; character code 134" rather than "to input yen sign symbol", I
    ;; changed the fullwidth yen sign with backslash.
    ;;   -- YamaKen 2007-09-17
    ;; ((("yen"). ())("￥" "￥" "￥")) ;; XXX
    ((("yen"). ())("￥" "￥" "\\"))

    ((("1"). ())("1" "1" "1"))
    ((("2"). ())("2" "2" "2"))
    ((("3"). ())("3" "3" "3"))
    ((("4"). ())("4" "4" "4"))
    ((("5"). ())("5" "5" "5"))
    ((("6"). ())("6" "6" "6"))
    ((("7"). ())("7" "7" "7"))
    ((("8"). ())("8" "8" "8"))
    ((("9"). ())("9" "9" "9"))
    ((("0"). ())("0" "0" "0"))

    ((("a"). ())("あ" "ア" "ｱ"))
    ((("i"). ())("い" "イ" "ｲ"))
    ((("u"). ())("う" "ウ" "ｳ"))
    ((("e"). ())("え" "エ" "ｴ"))
    ((("o"). ())("お" "オ" "ｵ"))

    ((("x" "a"). ())("ぁ" "ァ" "ｧ"))
    ((("x" "i"). ())("ぃ" "ィ" "ｨ"))
    ((("x" "y" "i"). ())("ぃ" "ィ" "ｨ"))
    ((("x" "u"). ())("ぅ" "ゥ" "ｩ"))
    ((("x" "e"). ())("ぇ" "ェ" "ｪ"))
    ((("x" "y" "e"). ())("ぇ" "ェ" "ｪ"))
    ((("x" "o"). ())("ぉ" "ォ" "ｫ"))

    ((("l" "a"). ())("ぁ" "ァ" "ｧ"))
    ((("l" "i"). ())("ぃ" "ィ" "ｨ"))
    ((("l" "u"). ())("ぅ" "ゥ" "ｩ"))
    ((("l" "e"). ())("ぇ" "ェ" "ｪ"))
    ((("l" "o"). ())("ぉ" "ォ" "ｫ"))

    ((("k" "k"). ("k"))("っ" "ッ" "ｯ"))

    ((("k" "a"). ())("か" "カ" "ｶ"))
    ((("k" "i"). ())("き" "キ" "ｷ"))
    ((("k" "u"). ())("く" "ク" "ｸ"))
    ((("k" "e"). ())("け" "ケ" "ｹ"))
    ((("k" "o"). ())("こ" "コ" "ｺ"))
    ((("k" "y" "a"). ())(("き" "キ" "ｷ") ("ゃ" "ャ" "ｬ")))
    ((("k" "y" "i"). ())(("き" "キ" "ｷ") ("ぃ" "ィ" "ｨ")))
    ((("k" "y" "u"). ())(("き" "キ" "ｷ") ("ゅ" "ュ" "ｭ")))
    ((("k" "y" "e"). ())(("き" "キ" "ｷ") ("ぇ" "ェ" "ｪ")))
    ((("k" "y" "o"). ())(("き" "キ" "ｷ") ("ょ" "ョ" "ｮ")))

    ((("g" "g"). ("g"))("っ" "ッ" "ｯ"))


    ((("g" "a"). ())("が" "ガ" "ｶﾞ"))
    ((("g" "i"). ())("ぎ" "ギ" "ｷﾞ"))
    ((("g" "u"). ())("ぐ" "グ" "ｸﾞ"))
    ((("g" "e"). ())("げ" "ゲ" "ｹﾞ"))
    ((("g" "o"). ())("ご" "ゴ" "ｺﾞ"))

    ((("g" "y" "a"). ())(("ぎ" "ギ" "ｷﾞ") ("ゃ" "ャ" "ｬ")))
    ((("g" "y" "i"). ())(("ぎ" "ギ" "ｷﾞ") ("ぃ" "ィ" "ｨ")))
    ((("g" "y" "u"). ())(("ぎ" "ギ" "ｷﾞ") ("ゅ" "ュ" "ｭ")))
    ((("g" "y" "e"). ())(("ぎ" "ギ" "ｷﾞ") ("ぇ" "ェ" "ｪ")))
    ((("g" "y" "o"). ())(("ぎ" "ギ" "ｷﾞ") ("ょ" "ョ" "ｮ")))

    ((("q" "a"). ())(("く" "ク" "ｸ") ("ぁ" "ァ" "ｧ")))
    ((("q" "i"). ())(("く" "ク" "ｸ") ("ぃ" "ィ" "ｨ")))
    ((("q" "u"). ())("く" "ク" "ｸ"))
    ((("q" "e"). ())(("く" "ク" "ｸ") ("ぇ" "ェ" "ｪ")))
    ((("q" "o"). ())(("く" "ク" "ｸ") ("ぉ" "ォ" "ｫ")))

    ((("s" "s"). ("s"))("っ" "ッ" "ｯ"))

    ((("s" "a"). ())("さ" "サ" "ｻ"))
    ((("s" "i"). ())("し" "シ" "ｼ"))
    ((("s" "u"). ())("す" "ス" "ｽ"))
    ((("s" "e"). ())("せ" "セ" "ｾ"))
    ((("s" "o"). ())("そ" "ソ" "ｿ"))

    ((("s" "y" "a"). ())(("し" "シ" "ｼ") ("ゃ" "ャ" "ｬ")))
    ((("s" "y" "i"). ())(("し" "シ" "ｼ") ("ぃ" "ィ" "ｨ")))
    ((("s" "y" "u"). ())(("し" "シ" "ｼ") ("ゅ" "ュ" "ｭ")))
    ((("s" "y" "e"). ())(("し" "シ" "ｼ") ("ぇ" "ェ" "ｪ")))
    ((("s" "y" "o"). ())(("し" "シ" "ｼ") ("ょ" "ョ" "ｮ")))

    ((("z" "z"). ("z"))("っ" "ッ" "ｯ"))

    ((("z" "a"). ())("ざ" "ザ" "ｻﾞ"))
    ((("z" "i"). ())("じ" "ジ" "ｼﾞ"))
    ((("z" "u"). ())("ず" "ズ" "ｽﾞ"))
    ((("z" "e"). ())("ぜ" "ゼ" "ｾﾞ"))
    ((("z" "o"). ())("ぞ" "ゾ" "ｿﾞ"))
    ((("z" "y" "a"). ())(("じ" "ジ" "ｼﾞ") ("ゃ" "ャ" "ｬ")))
    ((("z" "y" "i"). ())(("じ" "ジ" "ｼﾞ") ("ぃ" "ィ" "ｨ")))
    ((("z" "y" "u"). ())(("じ" "ジ" "ｼﾞ") ("ゅ" "ュ" "ｭ")))
    ((("z" "y" "e"). ())(("じ" "ジ" "ｼﾞ") ("ぇ" "ェ" "ｪ")))
    ((("z" "y" "o"). ())(("じ" "ジ" "ｼﾞ") ("ょ" "ョ" "ｮ")))

    ((("j" "j"). ("j"))("っ" "ッ" "ｯ"))

    ((("j" "a"). ())(("じ" "ジ" "ｼﾞ") ("ゃ" "ャ" "ｬ")))
    ((("j" "i"). ())("じ" "ジ" "ｼﾞ"))
    ((("j" "u"). ())(("じ" "ジ" "ｼﾞ") ("ゅ" "ュ" "ｭ")))
    ((("j" "e"). ())(("じ" "ジ" "ｼﾞ") ("ぇ" "ェ" "ｪ")))
    ((("j" "o"). ())(("じ" "ジ" "ｼﾞ") ("ょ" "ョ" "ｮ")))

    ((("j" "y" "a"). ())(("じ" "ジ" "ｼﾞ") ("ゃ" "ャ" "ｬ")))
    ((("j" "y" "i"). ())(("じ" "ジ" "ｼﾞ") ("ぃ" "ィ" "ｨ")))
    ((("j" "y" "u"). ())(("じ" "ジ" "ｼﾞ") ("ゅ" "ュ" "ｭ")))
    ((("j" "y" "e"). ())(("じ" "ジ" "ｼﾞ") ("ぇ" "ェ" "ｪ")))
    ((("j" "y" "o"). ())(("じ" "ジ" "ｼﾞ") ("ょ" "ョ" "ｮ")))

    ((("t" "t"). ("t"))("っ" "ッ" "ｯ"))
    ((("t" "c"). ("c"))("っ" "ッ" "ｯ"))

    ((("t" "a"). ())("た" "タ" "ﾀ"))
    ((("t" "i"). ())("ち" "チ" "ﾁ"))
    ((("t" "u"). ())("つ" "ツ" "ﾂ"))
    ((("t" "e"). ())("て" "テ" "ﾃ"))
    ((("t" "o"). ())("と" "ト" "ﾄ"))

    ((("t" "y" "a"). ())(("ち" "チ" "ﾁ") ("ゃ" "ャ" "ｬ")))
    ((("t" "y" "i"). ())(("ち" "チ" "ﾁ") ("ぃ" "ィ" "ｨ")))
    ((("t" "y" "u"). ())(("ち" "チ" "ﾁ") ("ゅ" "ュ" "ｭ")))
    ((("t" "y" "e"). ())(("ち" "チ" "ﾁ") ("ぇ" "ェ" "ｪ")))
    ((("t" "y" "o"). ())(("ち" "チ" "ﾁ") ("ょ" "ョ" "ｮ")))

    ((("t" "s" "a"). ())(("つ" "ツ" "ﾂ") ("ぁ" "ァ" "ｧ")))
    ((("t" "s" "i"). ())(("つ" "ツ" "ﾂ") ("ぃ" "ィ" "ｨ")))
    ((("t" "s" "u"). ())("つ" "ツ" "ﾂ"))
    ((("t" "s" "e"). ())(("つ" "ツ" "ﾂ") ("ぇ" "ェ" "ｪ")))
    ((("t" "s" "o"). ())(("つ" "ツ" "ﾂ") ("ぉ" "ォ" "ｫ")))

    ((("c" "y" "a"). ())(("ち" "チ" "ﾁ") ("ゃ" "ャ" "ｬ")))
    ((("c" "y" "i"). ())(("ち" "チ" "ﾁ") ("ぃ" "ィ" "ｨ")))
    ((("c" "y" "u"). ())(("ち" "チ" "ﾁ") ("ゅ" "ュ" "ｭ")))
    ((("c" "y" "e"). ())(("ち" "チ" "ﾁ") ("ぇ" "ェ" "ｪ")))
    ((("c" "y" "o"). ())(("ち" "チ" "ﾁ") ("ょ" "ョ" "ｮ")))

    ((("x" "t" "u"). ())("っ" "ッ" "ｯ"))
    ((("x" "t" "s" "u"). ())("っ" "ッ" "ｯ"))
    ((("c" "c"). ("c"))("っ" "ッ" "ｯ"))

    ((("d" "d"). ("d"))("っ" "ッ" "ｯ"))

    ((("d" "a"). ())("だ" "ダ" "ﾀﾞ"))
    ((("d" "i"). ())("ぢ" "ヂ" "ﾁﾞ"))
    ((("d" "u"). ())("づ" "ヅ" "ﾂﾞ"))
    ((("d" "e"). ())("で" "デ" "ﾃﾞ"))
    ((("d" "o"). ())("ど" "ド" "ﾄﾞ"))

    ((("d" "y" "a"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ゃ" "ャ" "ｬ")))
    ((("d" "y" "i"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ぃ" "ィ" "ｨ")))
    ((("d" "y" "u"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ゅ" "ュ" "ｭ")))
    ((("d" "y" "e"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ぇ" "ェ" "ｪ")))
    ((("d" "y" "o"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ょ" "ョ" "ｮ")))

    ((("n" "n"). ())("ん" "ン" "ﾝ"))
    ((("n" "'"). ())("ん" "ン" "ﾝ"))
    ((("n"). ())("ん" "ン" "ﾝ"))

    ((("n" "a"). ())("な" "ナ" "ﾅ"))
    ((("n" "i"). ())("に" "ニ" "ﾆ"))
    ((("n" "u"). ())("ぬ" "ヌ" "ﾇ"))
    ((("n" "e"). ())("ね" "ネ" "ﾈ"))
    ((("n" "o"). ())("の" "ノ" "ﾉ"))

    ((("n" "y" "a"). ())(("に" "ニ" "ﾆ") ("ゃ" "ャ" "ｬ")))
    ((("n" "y" "i"). ())(("に" "ニ" "ﾆ") ("ぃ" "ィ" "ｨ")))
    ((("n" "y" "u"). ())(("に" "ニ" "ﾆ") ("ゅ" "ュ" "ｭ")))
    ((("n" "y" "e"). ())(("に" "ニ" "ﾆ") ("ぇ" "ェ" "ｪ")))
    ((("n" "y" "o"). ())(("に" "ニ" "ﾆ") ("ょ" "ョ" "ｮ")))

    ((("h" "h"). ("h"))("っ" "ッ" "ｯ"))

    ((("h" "a"). ())("は" "ハ" "ﾊ"))
    ((("h" "i"). ())("ひ" "ヒ" "ﾋ"))
    ((("h" "u"). ())("ふ" "フ" "ﾌ"))
    ((("h" "e"). ())("へ" "ヘ" "ﾍ"))
    ((("h" "o"). ())("ほ" "ホ" "ﾎ"))

    ((("h" "y" "a"). ())(("ひ" "ヒ" "ﾋ") ("ゃ" "ャ" "ｬ")))
    ((("h" "y" "i"). ())(("ひ" "ヒ" "ﾋ") ("ぃ" "ィ" "ｨ")))
    ((("h" "y" "u"). ())(("ひ" "ヒ" "ﾋ") ("ゅ" "ュ" "ｭ")))
    ((("h" "y" "e"). ())(("ひ" "ヒ" "ﾋ") ("ぇ" "ェ" "ｪ")))
    ((("h" "y" "o"). ())(("ひ" "ヒ" "ﾋ") ("ょ" "ョ" "ｮ")))

    ((("f" "f"). ("f"))("っ" "ッ" "ｯ"))

    ((("f" "a"). ())(("ふ" "フ" "ﾌ") ("ぁ" "ァ" "ｧ")))
    ((("f" "i"). ())(("ふ" "フ" "ﾌ") ("ぃ" "ィ" "ｨ")))
    ((("f" "u"). ())("ふ" "フ" "ﾌ"))
    ((("f" "e"). ())(("ふ" "フ" "ﾌ") ("ぇ" "ェ" "ｪ")))
    ((("f" "o"). ())(("ふ" "フ" "ﾌ") ("ぉ" "ォ" "ｫ")))

    ((("f" "y" "a"). ())(("ふ" "フ" "ﾌ") ("ゃ" "ャ" "ｬ")))
    ((("f" "y" "i"). ())(("ふ" "フ" "ﾌ") ("ぃ" "ィ" "ｨ")))
    ((("f" "y" "u"). ())(("ふ" "フ" "ﾌ") ("ゅ" "ュ" "ｭ")))
    ((("f" "y" "e"). ())(("ふ" "フ" "ﾌ") ("ぇ" "ェ" "ｪ")))
    ((("f" "y" "o"). ())(("ふ" "フ" "ﾌ") ("ょ" "ョ" "ｮ")))

    ((("b" "b"). ("b"))("っ" "ッ" "ｯ"))

    ((("b" "a"). ())("ば" "バ" "ﾊﾞ"))
    ((("b" "i"). ())("び" "ビ" "ﾋﾞ"))
    ((("b" "u"). ())("ぶ" "ブ" "ﾌﾞ"))
    ((("b" "e"). ())("べ" "ベ" "ﾍﾞ"))
    ((("b" "o"). ())("ぼ" "ボ" "ﾎﾞ"))

    ((("b" "y" "a"). ())(("び" "ビ" "ﾋﾞ") ("ゃ" "ャ" "ｬ")))
    ((("b" "y" "i"). ())(("び" "ビ" "ﾋﾞ") ("ぃ" "ィ" "ｨ")))
    ((("b" "y" "u"). ())(("び" "ビ" "ﾋﾞ") ("ゅ" "ュ" "ｭ")))
    ((("b" "y" "e"). ())(("び" "ビ" "ﾋﾞ") ("ぇ" "ェ" "ｪ")))
    ((("b" "y" "o"). ())(("び" "ビ" "ﾋﾞ") ("ょ" "ョ" "ｮ")))

    ((("p" "p"). ("p"))("っ" "ッ" "ｯ"))

    ((("p" "a"). ())("ぱ" "パ" "ﾊﾟ"))
    ((("p" "i"). ())("ぴ" "ピ" "ﾋﾟ"))
    ((("p" "u"). ())("ぷ" "プ" "ﾌﾟ"))
    ((("p" "e"). ())("ぺ" "ペ" "ﾍﾟ"))
    ((("p" "o"). ())("ぽ" "ポ" "ﾎﾟ"))

    ((("p" "y" "a"). ())(("ぴ" "ピ" "ﾋﾟ") ("ゃ" "ャ" "ｬ")))
    ((("p" "y" "i"). ())(("ぴ" "ピ" "ﾋﾟ") ("ぃ" "ィ" "ｨ")))
    ((("p" "y" "u"). ())(("ぴ" "ピ" "ﾋﾟ") ("ゅ" "ュ" "ｭ")))
    ((("p" "y" "e"). ())(("ぴ" "ピ" "ﾋﾟ") ("ぇ" "ェ" "ｪ")))
    ((("p" "y" "o"). ())(("ぴ" "ピ" "ﾋﾟ") ("ょ" "ョ" "ｮ")))

    ((("m" "m"). ("m"))("っ" "ッ" "ｯ"))

    ((("m" "b"). ("b"))("ん" "ン" "ﾝ"))
    ((("m" "p"). ("p"))("ん" "ン" "ﾝ"))

    ((("m" "a"). ())("ま" "マ" "ﾏ"))
    ((("m" "i"). ())("み" "ミ" "ﾐ"))
    ((("m" "u"). ())("む" "ム" "ﾑ"))
    ((("m" "e"). ())("め" "メ" "ﾒ"))
    ((("m" "o"). ())("も" "モ" "ﾓ"))

    ((("m" "y" "a"). ())(("み" "ミ" "ﾐ") ("ゃ" "ャ" "ｬ")))
    ((("m" "y" "i"). ())(("み" "ミ" "ﾐ") ("ぃ" "ィ" "ｨ")))
    ((("m" "y" "u"). ())(("み" "ミ" "ﾐ") ("ゅ" "ュ" "ｭ")))
    ((("m" "y" "e"). ())(("み" "ミ" "ﾐ") ("ぇ" "ェ" "ｪ")))
    ((("m" "y" "o"). ())(("み" "ミ" "ﾐ") ("ょ" "ョ" "ｮ")))

    ((("y" "y"). ("y"))("っ" "ッ" "ｯ"))

    ((("y" "a"). ())("や" "ヤ" "ﾔ"))
    ((("y" "u"). ())("ゆ" "ユ" "ﾕ"))
    ((("y" "e"). ())(("い" "イ" "ｲ") ("ぇ" "ェ" "ｪ")))
    ((("y" "o"). ())("よ" "ヨ" "ﾖ"))

    ((("x" "c" "a"). ())("ヵ" "ヵ" "ｶ"))
    ((("x" "k" "a"). ())("ヵ" "ヵ" "ｶ"))
    ((("x" "k" "e"). ())("ヶ" "ヶ" "ｹ"))

    ((("x" "y" "a"). ())("ゃ" "ャ" "ｬ"))
    ((("x" "y" "u"). ())("ゅ" "ュ" "ｭ"))
    ((("x" "y" "o"). ())("ょ" "ョ" "ｮ"))

    ((("r" "r"). ("r"))("っ" "ッ" "ｯ"))

    ((("r" "a"). ())("ら" "ラ" "ﾗ"))
    ((("r" "i"). ())("り" "リ" "ﾘ"))
    ((("r" "u"). ())("る" "ル" "ﾙ"))
    ((("r" "e"). ())("れ" "レ" "ﾚ"))
    ((("r" "o"). ())("ろ" "ロ" "ﾛ"))

    ((("l" "t" "u"). ())("っ" "ッ" "ｯ"))
    ((("l" "t" "s" "u"). ())("っ" "ッ" "ｯ"))

    ((("l" "y" "a"). ())("ゃ" "ャ" "ｬ"))
    ((("l" "y" "i"). ())("ぃ" "ィ" "ｨ"))
    ((("l" "y" "u"). ())("ゅ" "ュ" "ｭ"))
    ((("l" "y" "e"). ())("ぇ" "ェ" "ｪ"))
    ((("l" "y" "o"). ())("ょ" "ョ" "ｮ"))

    ((("r" "y" "a"). ())(("り" "リ" "ﾘ") ("ゃ" "ャ" "ｬ")))
    ((("r" "y" "i"). ())(("り" "リ" "ﾘ") ("ぃ" "ィ" "ｨ")))
    ((("r" "y" "u"). ())(("り" "リ" "ﾘ") ("ゅ" "ュ" "ｭ")))
    ((("r" "y" "e"). ())(("り" "リ" "ﾘ") ("ぇ" "ェ" "ｪ")))
    ((("r" "y" "o"). ())(("り" "リ" "ﾘ") ("ょ" "ョ" "ｮ")))

    ((("w" "w"). ("w"))("っ" "ッ" "ｯ"))

    ((("w" "a"). ())("わ" "ワ" "ﾜ"))
    ((("w" "i"). ())(("う" "ウ" "ｳ") ("ぃ" "ィ" "ｨ")))
    ((("w" "u"). ())("う" "ウ" "ｳ"))
    ((("w" "e"). ())(("う" "ウ" "ｳ") ("ぇ" "ェ" "ｪ")))
    ((("w" "o"). ())("を" "ヲ" "ｦ"))
    ((("w" "h" "a"). ())(("う" "ウ" "ｳ") ("ぁ" "ァ" "ｧ")))
    ((("w" "h" "i"). ())(("う" "ウ" "ｳ") ("ぃ" "ィ" "ｨ")))
    ((("w" "h" "u"). ())("う" "ウ" "ｳ"))
    ((("w" "h" "e"). ())(("う" "ウ" "ｳ") ("ぇ" "ェ" "ｪ")))
    ((("w" "h" "o"). ())(("う" "ウ" "ｳ") ("ぉ" "ォ" "ｫ")))

    ((("v" "v"). ("v"))("っ" "ッ" "ｯ"))

    ((("v" "a"). ())(("う゛" "ヴ" "ｳﾞ") ("ぁ" "ァ" "ｧ")))
    ((("v" "i"). ())(("う゛" "ヴ" "ｳﾞ") ("ぃ" "ィ" "ｨ")))
    ((("v" "u"). ())("う゛" "ヴ" "ｳﾞ"))
    ((("v" "e"). ())(("う゛" "ヴ" "ｳﾞ") ("ぇ" "ェ" "ｪ")))
    ((("v" "o"). ())(("う゛" "ヴ" "ｳﾞ") ("ぉ" "ォ" "ｫ")))

    ((("v" "y" "a"). ())(("う゛" "ヴ" "ｳﾞ") ("ゃ" "ャ" "ｬ")))
    ((("v" "y" "u"). ())(("う゛" "ヴ" "ｳﾞ") ("ゅ" "ュ" "ｭ")))
    ((("v" "y" "o"). ())(("う゛" "ヴ" "ｳﾞ") ("ょ" "ョ" "ｮ")))

    ((("z" "k"). ())("↑" "↑" ""))
    ((("z" "j"). ())("↓" "↓" ""))
    ((("z" "h"). ())("←" "←" ""))
    ((("z" "l"). ())("→" "→" ""))
    ((("z" "-"). ())("〜" "〜" ""))
    ((("z" "["). ())("『" "『" ""))
    ((("z" "]"). ())("』" "』" ""))
    ((("z" ","). ())("‥" "‥" ""))
    ((("z" "."). ())("…" "…" ""))
    ((("z" "/"). ())("・" "・" "･"))
    ))

(define ja-rk-rule-basic-uim ja-rk-rule-basic)

(define ja-rk-rule-rule->table (lambda (rule)
  (map
    (lambda (item)
      ; ((("k" "a")) ("か" "カ" "ｶ")) -> ("ka" "" "か")
      ; ((("k" "k") "k") ("っ" "ッ" "ｯ")) -> ("kk" "k" "っ")
      ; ((("k" "y" "a")) (("き" "キ" "ｷ") ("ゃ" "ャ" "ｬ"))) -> ("kya" "" "きゃ")
      (list
        ; ((("k" "a")) ("か" "カ" "ｶ")) -> "ka"
        (fold-right string-append ""
          (caar item))
        (let ((next-input (cdar item)))
          (or
            (and
              ; ((("k" "a")) ("か" "カ" "ｶ")) -> ""
              (null? next-input) "")
            ; ((("k" "k") "k") ("っ" "ッ" "ｯ")) -> "k"
            (car next-input)))
        (let*
          ((output (cadr item))
            (single-output (car output))
            (eucjp->utf8 (lambda (str)
                           (iconv-convert "UTF-8" "EUC-JP" str))))
          (or
            (and
              ; ((("k" "a")) ("か" "カ" "ｶ")) -> "か"
              (string? single-output)
              (eucjp->utf8 single-output))
            ; ((("k" "y" "a")) (("き" "キ" "ｷ") ("ゃ" "ャ" "ｬ"))) -> "きゃ"
            (eucjp->utf8
              (string-join
                (map first output) "")))))) rule)))

(define ja-rk-rule-table->rule (lambda (table)
  (map
    (lambda (item)
      ; ("ka" "" "か") -> ((("k" "a")) ("か" "カ" "ｶ"))
      ; ("kk" "k" "っ") -> ((("k" "k") "k") ("っ" "ッ" "ｯ"))
      ; ("kya" "" "きゃ") -> ((("k" "y" "a")) (("き" "キ" "ｷ") ("ゃ" "ャ" "ｬ")))
      (list
        (cons
          (let ((input (car item)))
            (or
              (and
                (string=? input "yen")
                ; ("yen" "" "￥") -> ("yen")
                '("yen"))
              ; ("ka" "" "か") -> ("k" "a")
              (map string
                (string->list input))))
          (let ((next-input (cadr item)))
            (or
              (and
                ; ("ka" "" "か") -> none
                (string=? next-input "") '())
              ; ("kk" "k" "っ") -> "k"
              (cons next-input '()))))
        (let* ((output (caddr item))
               (utf8->eucjp (lambda (str)
                              (iconv-convert "EUC-JP" "UTF-8" str)))
               (eucjp-output (utf8->eucjp output))
               (eucjp-output-list (string-to-list eucjp-output)))
          (or
            (and
              (=
                (length eucjp-output-list) 1)
              ; ("ka" "" "か") ->  ("か" "カ" "ｶ")
              (ja-find-kana-list-from-rule ja-rk-rule eucjp-output))
            ; ("kya" "" "きゃ") -> (("き" "キ" "ｷ") ("ゃ" "ャ" "ｬ"))
            (map
              (lambda (char)
                (ja-find-kana-list-from-rule ja-rk-rule char))
                  (reverse eucjp-output-list)))))) table)))

(define-custom-group 'ja-rk-rule
                     (N_ "Japanese Romaji-Kana")
                     (N_ "long description will be here."))

(define-custom-group 'composing-rule
                     (N_ "Composing rule")
                     (N_ "long description will be here."))

(define-custom 'ja-rk-rule-type 'uim
               '(ja-rk-rule composing-rule)
               (list 'choice
	         (list 'uim (N_ "uim") (N_ "uim native"))
	         (list 'custom (N_ "Custom") (N_ "Custom")))
               (N_ "Composing rule type")
               (N_ "long description will be here."))

(define-custom 'ja-rk-rule-table-basic
               (ja-rk-rule-rule->table ja-rk-rule-basic-uim)
               '(ja-rk-rule composing-rule)
               (list 'table
                 (list 'input (N_ "Input") (N_ "Input"))
		 (list 'next-input (N_ "Next input") (N_ "Next input"))
                 (list 'output (N_ "Output") (N_ "Output")))
               (N_ "Custom composing rule")
               (N_ "long description will be here."))

(define-custom 'ja-rk-rule-keep-consonant? #f
               '(ja-rk-rule composing-rule)
               '(boolean)
               (N_ "Keep consonant Romaji not convertible to Kana")
               (N_ "long description will be here."))

(custom-add-hook 'ja-rk-rule-table-basic
                 'custom-set-hooks
                 (lambda ()
                   (and
                     (eq? ja-rk-rule-type 'uim)
                       (set! ja-rk-rule-basic ja-rk-rule-basic-uim))
                   (ja-rk-rule-update)))

(custom-add-hook 'ja-rk-rule-table-basic
                 'custom-activity-hooks
                 (lambda ()
                   (eq? ja-rk-rule-type 'custom)))

(custom-add-hook 'ja-rk-rule-keep-consonant?
                 'custom-set-hooks
                 (lambda ()
                   (ja-rk-rule-keep-consonant-update)))
